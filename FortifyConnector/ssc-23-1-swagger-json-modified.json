{
    "basePath": "/api/v1",
    "definitions": {
        "AATrainingStatus": {
            "description": "Audit Assistant Training (AATrainingStatus) DTO object.",
            "properties": {
                "lastTrainingTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "projectVersionId": {
                    "format": "int64",
                    "type": "integer"
                },
                "status": {
                    "enum": [
                        "NONE",
                        "TRAINING_SUBMITTED",
                        "TRAINING_FAILED",
                        "TRAINING_COMPLETE"
                    ],
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Activity Feed": {
            "description": "Activity Feed DTO object",
            "properties": {
                "authEntity": {
                    "$ref": "#/definitions/Authentication Entity",
                    "description": "Entity",
                    "readOnly": true
                },
                "detailedNote": {
                    "readOnly": true,
                    "type": "string"
                },
                "entityId": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "eventDate": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "eventType": {
                    "enum": [
                        "WEBUI_LOGIN_SUCCESS",
                        "WEBUI_LOGIN_FAILED",
                        "WEBUI_LOGOUT",
                        "WEBUI_LOGIN_WITH_NO_ROLE",
                        "WS_LOGIN_SUCCESS",
                        "WS_LOGIN_FAILED",
                        "WS_LOGIN_WITH_NO_ROLE",
                        "LOCAL_USER_CREATED",
                        "LOCAL_USER_UPDATED",
                        "LOCAL_USER_DELETED",
                        "LOCAL_USER_FROZEN",
                        "LOCAL_GROUP_CREATED",
                        "LOCAL_GROUP_UPDATED",
                        "LOCAL_GROUP_DELETED",
                        "AGENT_CREDENTIAL_CREATED",
                        "AGENT_CREDENTIAL_UPDATED",
                        "AGENT_CREDENTIAL_DELETED",
                        "LDAP_ENTITY_CREATED",
                        "LDAP_ENTITY_UPDATED",
                        "LDAP_ENTITY_DELETED",
                        "LDAP_CACHE_REFRESH_REQUESTED",
                        "LDAP_CACHE_REFRESH_STARTED",
                        "LDAP_CACHE_REFRESH_COMPLETED",
                        "PROJECT_VERSION_CREATED",
                        "PROJECT_VERSION_CREATED_FROM_PREVIOUS",
                        "PROJECT_VERSION_UPDATED",
                        "PROJECT_VERSION_DELETED",
                        "PROJECT_VERSION_METADATA_UPDATED",
                        "PROJECT_VERSION_ACCESS_ADDED",
                        "PROJECT_VERSION_ACCESS_REMOVED",
                        "PROJECT_VERSION_BUG_TRACKER_UPDATED",
                        "SCA_RESULT_PROCESSED",
                        "RUNTIME_RESULT_PROCESSED",
                        "EXTERNAL_RESULT_PROCESSED",
                        "PTA_RESULT_PROCESSED",
                        "RTA_RESULT_PROCESSED",
                        "ARTIFACT_UPLOAD_REQUESTED",
                        "ARTIFACT_UPLOAD_STARTED",
                        "ARTIFACT_UPLOAD_COMPLETED",
                        "ARTIFACT_UPLOAD_FAILED",
                        "ARTIFACT_UPLOAD_CANCELLED",
                        "ARTIFACT_DELETE_REQUESTED",
                        "ARTIFACT_DELETE_STARTED",
                        "ARTIFACT_DELETE_COMPLETED",
                        "ARTIFACT_DELETE_FAILED",
                        "ARTIFACT_DELETE_CANCELLED",
                        "ARTIFACT_DOWNLOAD",
                        "JOB_CANCELLED",
                        "JOB_CANCEL_REQUESTED",
                        "ARTIFACT_PURGE_REQUESTED",
                        "ARTIFACT_PURGE_REQUEST_STARTED",
                        "ARTIFACT_PURGE_COMPLETED",
                        "ARTIFACT_PURGE_FAILED",
                        "ARTIFACT_PURGE_REQUEST_FINISHED",
                        "ARTIFACT_PURGE_CANCELLED",
                        "HISTORICAL_SNAPSHOT_COLLECTION_STARTED",
                        "HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_COMPLETED",
                        "HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_FAILED",
                        "HISTORICAL_SNAPSHOT_COLLECTION_NO_UPDATES",
                        "AUDIT_PERFORMED",
                        "ARTIFACT_UPLOAD_REQUIRES_AUTH",
                        "ARTIFACT_UPLOAD_APPROVED",
                        "SOURCE_CODE_UPLOADED",
                        "FILTERSET_FOLDER_REFRESH_REQUESTED",
                        "FILTERSET_FOLDER_REFRESH_COMPLETED",
                        "FILTERSET_FOLDER_REFRESH_FAILED",
                        "DYNAMIC_SCAN_CREATED",
                        "DYNAMIC_SCAN_EDITED",
                        "DYNAMIC_SCAN_CANCELED",
                        "DYNAMIC_SCAN_COMPLETED",
                        "DYNAMIC_SCAN_PICKED_UP",
                        "BATCH_BUG_FILING_REQUESTED",
                        "BATCH_BUG_FILING_REQUEST_FAILED",
                        "BATCH_BUG_FILING_STARTED",
                        "BATCH_BUG_FILING_ENDED",
                        "BATCH_BUG_FILING_FAILED",
                        "BUG_FILED",
                        "BUG_FAILED_TO_FILE",
                        "BUG_STATE_MANAGEMENT_STARTED",
                        "BUG_STATE_MANAGEMENT_ENDED",
                        "BUG_STATE_MANAGEMENT_ENDED_WITH_ERRORS",
                        "BUG_UPDATED",
                        "BUG_FAILED_TO_UPDATE",
                        "COMMENT_ADDED_TO_ISSUE",
                        "AUDIT_ASSISTANT_ISSUES_SUBMITTED",
                        "AUDIT_ASSISTANT_ISSUES_RETRIEVED",
                        "AUDIT_ASSISTANT_FPR_UPLOAD_STARTED",
                        "AUDIT_ASSISTANT_TRAINING_SENT",
                        "AUDIT_ASSISTANT_TEST_CONNECTION_FAILED",
                        "AUDIT_ASSISTANT_ISSUES_SUBMIT_FAILED",
                        "AUDIT_ASSISTANT_ISSUES_RETRIEVE_FAILED",
                        "AUDIT_ASSISTANT_FPR_UPLOAD_FAILED",
                        "AUDIT_ASSISTANT_TRAINING_SENT_FAILED",
                        "AUDIT_ASSISTANT_PROJECT_PREDICTION_POLICY_CHANGED",
                        "AUDIT_ASSISTANT_DEFAULT_PREDICTION_POLICY_CHANGED",
                        "AUDIT_ASSISTANT_TAG_MAPPING_CHANGED",
                        "AUDIT_ASSISTANT_PREDICTION_POLICIES_REFRESHED",
                        "REPORT_GENERATION_REQUESTED",
                        "REPORT_GENERATION_COMPLETED",
                        "REPORT_GENERATION_FAILED",
                        "REPORT_GENERATION_CANCELLED",
                        "REPORT_DELETED",
                        "RULEPACK_SERVER_UPDATE",
                        "RULEPACK_USER_UPLOAD",
                        "RULEPACK_DELETED",
                        "RULEPACK_DOWNLOAD",
                        "RULEPACK_CLIENT_UPDATE",
                        "DOCUMENT_ARTIFACT_CREATED",
                        "DOCUMENT_ARTIFACT_UPDATED",
                        "DOCUMENT_ARTIFACT_DELETED",
                        "TASK_INSTANCE_CREATED",
                        "TASK_INSTANCE_UPDATED",
                        "TASK_INSTANCE_DELETED",
                        "TASK_INSTANCE_SIGNOFF_UPDATED",
                        "ACTIVITY_INSTANCE_SIGNOFF_UPDATED",
                        "REQUIREMENT_INSTANCE_SIGNOFF_UPDATED",
                        "REQUIREMENT_TEMPLATE_INSTANCE_SIGNOFF_UPDATED",
                        "TASK_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
                        "ACTIVITY_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
                        "REQUIREMENT_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
                        "REQUIREMENT_TEMPLATE_DUE_DATE_PASSED_NO_SIGNOFF",
                        "SDL_COMMENT_CREATED",
                        "PROJECT_PERSONA_ASSIGNMENT_UPDATED",
                        "PERSONA_ASSIGNMENT_UPDATED",
                        "WORK_OWNER_UPDATED",
                        "DUE_DATE_UPDATED",
                        "SESSION_TIMEOUT",
                        "REQ_TEMPLATE_CREATED",
                        "REQ_TEMPLATE_UPDATED",
                        "ACTIVITY_CREATED",
                        "ACTIVITY_UPDATED",
                        "VARIABLE_CREATED",
                        "VARIABLE_UPDATED",
                        "VARIABLE_DELETED",
                        "MEASUREMENT_AGENT_CREATED",
                        "MEASUREMENT_AGENT_UPDATED",
                        "MEASUREMENT_AGENT_DELETED",
                        "DOCUMENT_DEF_CREATED",
                        "DOCUMENT_DEF_UPDATED",
                        "PROJECT_TEMPLATE_CREATED",
                        "PROJECT_TEMPLATE_UPDATED",
                        "PROJECT_TEMPLATE_DELETED",
                        "ASSIGNMENT_RULES_UPDATED",
                        "PERSONA_CREATED",
                        "PERSONA_UPDATED",
                        "PERSONA_DELETED",
                        "ATTR_CREATED",
                        "ATTR_UPDATED",
                        "ATTR_DELETED",
                        "ATTRIBUTE_DEFINITION_CREATED",
                        "ATTRIBUTE_DEFINITION_UPDATED",
                        "ATTRIBUTE_DEFINITION_DELETED",
                        "PROJECT_VERSION_CUSTOM_TAG_ASSIGNMENT",
                        "PROJECT_VERSION_PRIMARY_TAG_UPDATE",
                        "REPORT_DEFINITION_CREATED",
                        "REPORT_DEFINITION_UPDATED",
                        "REPORT_DEFINITION_DELETED",
                        "REPORT_LIBRARY_CREATED",
                        "REPORT_LIBRARY_UPDATED",
                        "REPORT_LIBRARY_DELETED",
                        "RUNTIME_HOST_CONNECTED",
                        "RUNTIME_HOST_DISCONNECTED",
                        "RUNTIME_HOST_CREATED",
                        "RUNTIME_HOST_DELETED",
                        "RUNTIME_HOST_DISCOVERED",
                        "RUNTIME_HOST_ENABLED",
                        "RUNTIME_HOST_DISABLED",
                        "RUNTIME_HOST_AUTH_RESET",
                        "ACCEPT_NEW_HOSTS_ENABLED",
                        "ACCEPT_NEW_HOSTS_DISABLED",
                        "DISABLED_HOST_CONNECTION",
                        "RUNTIME_APPLICATION_ASSIGNMENT_RULES_UPDATED",
                        "REAPPLY_APPLICATION_ASSIGNMENT_RULES_REQUESTED",
                        "REAPPLY_APPLICATION_ASSIGNMENT_RULES_COMPLETED",
                        "REAPPLY_APPLICATION_ASSIGNMENT_RULES_FAILED",
                        "RUNTIME_CONFIGURATION_CREATED",
                        "RUNTIME_CONFIGURATION_UPDATED",
                        "RUNTIME_CONFIGURATION_DELETED",
                        "RUNTIME_CONFIGURATION_TEMPLATE_UPDATED",
                        "RUNTIME_EH_CREATED",
                        "RUNTIME_EH_UPDATED",
                        "RUNTIME_EH_DELETED",
                        "RUNTIME_SETTINGS_UPDATED",
                        "RUNTIME_RULEPACK_CONFIG_UPDATED",
                        "RUNTIME_EVENT_RECEIVED",
                        "RUNTIME_ALERT_RECEIVED",
                        "FEDERATION_CREATED",
                        "FEDERATION_UPDATED",
                        "FEDERATION_DELETED",
                        "RTAPP_CREATED",
                        "RTAPP_UPDATED",
                        "RTAPP_DELETED",
                        "RTAPP_ACCESS_ADDED",
                        "RTAPP_ACCESS_REMOVED",
                        "USERROLE_CREATED",
                        "USERROLE_UPDATED",
                        "USERROLE_DELETED",
                        "CLOUD_CONTROLLER_ACTIVATED",
                        "CLOUD_CONTROLLER_DEACTIVATED",
                        "CLOUD_SCAN_POLLED",
                        "CLOUD_POOL_CREATED",
                        "CLOUD_POOL_UPDATED",
                        "CLOUD_POOL_DELETED",
                        "CLOUD_POOL_AVS_UPDATED",
                        "CLOUD_POOL_SENSORS_UPDATED",
                        "CLOUD_JOB_CANCELED",
                        "CLOUD_JOB_PRIORITIZED",
                        "CLOUD_JOB_FPR_DOWNLOADED",
                        "CLOUD_JOB_LOG_DOWNLOADED",
                        "CLOUD_SENSORS_SHUT_DOWN",
                        "INDEX_MAINTENANCE_STARTED",
                        "INDEX_MAINTENANCE_COMPLETED",
                        "FULL_REINDEX_STARTED",
                        "FULL_REINDEX_COMPLETED",
                        "INDEX_NEW_ISSUES_STARTED",
                        "INDEX_NEW_ISSUES_COMPLETED",
                        "SSC_CONFIGURATION_UPDATED",
                        "LDAP_CONFIG_CREATED",
                        "LDAP_CONFIG_UPDATED",
                        "LDAP_CONFIG_DELETED",
                        "LDAP_CONFIG_DEFAULT_CHANGED",
                        "SEED_BUNDLE_UPLOAD_COMPLETED",
                        "SEED_BUNDLE_UPLOAD_FAILED",
                        "SEED_BUNDLE_COMPLETED",
                        "SEED_BUNDLE_FAILED",
                        "WEBHOOK_DEFINITION_CREATED",
                        "WEBHOOK_DEFINITION_UPDATED",
                        "WEBHOOK_DEFINITION_DELETED"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "eventTypeDesc": {
                    "description": "Description",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "projectVersionId": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "userName": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Alert History Entry": {
            "description": "Alert history entry contains information about firede alert, like trigger date, user name for which alert was triggered, information abotu alert definition.",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alertCustomMessage": {
                    "type": "string"
                },
                "alertDefinitionName": {
                    "type": "string"
                },
                "alertMessage": {
                    "type": "string"
                },
                "id": {
                    "description": "alert history id",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "monitoredEntityType": {
                    "type": "string"
                },
                "projectAndVersionLabel": {
                    "type": "string"
                },
                "projectVersionId": {
                    "format": "int64",
                    "type": "integer"
                },
                "triggeredDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AlertableEventType": {
            "properties": {
                "category": {
                    "enum": [
                        "USER_ADMINISTRATION",
                        "PV_ADMINISTRATION",
                        "PV_ISSUES",
                        "REPORT",
                        "GENERAL_ADMINISTRATION",
                        "GOVERNANCE",
                        "RUNTIME_HOST",
                        "RUNTIME_FEDERATION",
                        "RUNTIME_CONFIGURATION",
                        "RUNTIME_APP_ADMINISTRATION",
                        "FULLTEXT",
                        "CLOUDSCAN"
                    ],
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "eventTypeConstant": {
                    "type": "string"
                },
                "scope": {
                    "enum": [
                        "PROJECT_VERSION",
                        "NONE"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AlertDefinitionDto": {
            "description": "Alert definitions can include variable or performance indicator to determine when Software Security Center is\nto generate an alert notification in the Todo List on the Dashboard.",
            "properties": {
                "alertAllChildren": {
                    "type": "boolean"
                },
                "alertStakeholders": {
                    "type": "boolean"
                },
                "alertTriggers": {
                    "items": {
                        "$ref": "#/definitions/AlertTriggerDto"
                    },
                    "type": "array"
                },
                "createdBy": {
                    "type": "string"
                },
                "creationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "customMessage": {
                    "description": "Required field for Scheduled alerts, Optional for other types",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "endDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "monitorAllApps": {
                    "type": "boolean"
                },
                "monitoredEntityName": {
                    "type": "string"
                },
                "monitoredEntityType": {
                    "enum": [
                        "RT_INSTANCE",
                        "REQ_INSTANCE",
                        "ACTIVITY_INSTANCE",
                        "MEASUREMENT_AGENT",
                        "VARIABLE",
                        "RUNTIME_ALERT",
                        "EVENT",
                        "SCHEDULED_ALERT"
                    ],
                    "type": "string"
                },
                "monitoredInstanceId": {
                    "format": "int64",
                    "type": "integer"
                },
                "monitorsProjectVersions": {
                    "type": "boolean"
                },
                "monitorsRuntimeApp": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "projectVersionIds": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "recipientType": {
                    "enum": [
                        "ME_ONLY",
                        "PROCESS_ENTITY_STAKEHOLDERS",
                        "ALL_USERS",
                        "ALL_SYSTEM_USERS"
                    ],
                    "type": "string"
                },
                "reminderPeriod": {
                    "format": "int32",
                    "type": "integer"
                },
                "remindPeriodically": {
                    "type": "boolean"
                },
                "startAtDueDate": {
                    "type": "boolean"
                },
                "startDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "triggerDescription": {
                    "type": "string"
                },
                "triggerDescriptionName": {
                    "type": "string"
                },
                "triggerDescriptionOperation": {
                    "type": "string"
                },
                "triggerDescriptionValue": {
                    "type": "string"
                },
                "userCanModify": {
                    "type": "boolean"
                }
            },
            "required": [
                "alertTriggers",
                "customMessage",
                "monitoredEntityType",
                "name",
                "recipientType"
            ],
            "type": "object"
        },
        "AlertSetStatusRequest": {
            "description": "Request to set status for alerts",
            "properties": {
                "alertHistoryIds": {
                    "description": "Alert history ids to set status",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "Status of alerts, classified as read or unread",
                    "type": "string"
                }
            },
            "required": [
                "alertHistoryIds",
                "status"
            ],
            "type": "object"
        },
        "AlertTriggerDto": {
            "properties": {
                "alertDefinitionId": {
                    "format": "int64",
                    "type": "integer"
                },
                "monitoredAttribute": {
                    "enum": [
                        "SIGN_OFF_STATE",
                        "VALUE_GT",
                        "VALUE_LT",
                        "VALUE_EQ",
                        "VALUE_GTE",
                        "VALUE_LTE",
                        "EVENT_TYPE",
                        "SCHEDULED_ALERT_TIME"
                    ],
                    "type": "string"
                },
                "resetAfterTriggering": {
                    "type": "boolean"
                },
                "triggeredValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiBulkRequestItem": {
            "properties": {
                "httpVerb": {
                    "enum": [
                        "GET",
                        "PUT",
                        "POST",
                        "DELETE"
                    ],
                    "type": "string"
                },
                "postData": {
                    "type": "object"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiBulkResponseData": {
            "description": "Response data of bulk sub-request.",
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "readOnly": true,
                    "type": "object"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiBulkResponseItemResponse": {
            "properties": {
                "body": {
                    "$ref": "#/definitions/ApiBulkResponseData"
                },
                "headers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "requestUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiResult": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "readOnly": true,
                    "type": "object"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«AlertDefinitionDto»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/AlertDefinitionDto",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Application State»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Application State",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«ApplicationNameTestResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/ApplicationNameTestResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Array«string»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Artifact»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Artifact",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Attribute Definition»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Attribute Definition",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Attribute»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Attribute",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Authentication Code Response»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Authentication Code Response",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Authentication Entity»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Authentication Entity",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Authentication Token»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Authentication Token",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«BugfieldTemplateGroupDto»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/BugfieldTemplateGroupDto",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«BugFilingRequirementsResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/BugFilingRequirementsResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CloudJob»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CloudJob",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CloudPool»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CloudPool",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CloudPoolMapping»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CloudPoolMapping",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CloudPoolProjectVersionActionResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CloudPoolProjectVersionActionResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CloudPoolWorkerActionResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CloudPoolWorkerActionResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CloudSystemMetrics»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CloudSystemMetrics",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CloudSystemPollStatus»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CloudSystemPollStatus",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CloudSystemSettings»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CloudSystemSettings",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CloudWorker»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CloudWorker",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«ConfigProperties»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/ConfigProperties",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«ConfigProperty»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/ConfigProperty",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«CurrentAuthenticationInfo»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CurrentAuthenticationInfo",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Custom tag»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Custom tag",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«DynamicScanRequest»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/DynamicScanRequest",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«DynamicScanRequestsSummary»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/DynamicScanRequestsSummary",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«DynamicScanRequestTemplate»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/DynamicScanRequestTemplate",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Feature»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Feature",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«File token»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/File token",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Folder»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Folder",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«IID Migration»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/IID Migration",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Issue Assignment»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Issue Assignment",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Issue Attachment»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Issue Attachment",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Issue Audit Comment»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Issue Audit Comment",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Issue Template»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Issue Template",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«IssueActionResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/IssueActionResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«IssueAgingPortlet»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/IssueAgingPortlet",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«IssueFileBugResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/IssueFileBugResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«IssueFilterSelectorSet»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/IssueFilterSelectorSet",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Issues Delta Export»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Issues Delta Export",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«IssueViewTemplate»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/IssueViewTemplate",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Job»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Job",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«LDAP entity»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/LDAP entity",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«LdapRefreshResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/LdapRefreshResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«LdapServerDto»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/LdapServerDto",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«License»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/License",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«AATrainingStatus»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/AATrainingStatus"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Activity Feed»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Activity Feed"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Alert History Entry»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Alert History Entry"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«AlertableEventType»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/AlertableEventType"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«AlertDefinitionDto»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/AlertDefinitionDto"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Artifact»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Artifact"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Attribute Definition»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Attribute Definition"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Attribute»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«AuditAssistantStatus»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/AuditAssistantStatus"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Authentication Entity»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Authentication Entity"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Authentication Token»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Authentication Token"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Bug Tracker»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Bug Tracker"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«BugfieldTemplateGroupDto»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/BugfieldTemplateGroupDto"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«BugFilingRequirements»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/BugFilingRequirements"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Bulk Response Item»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Bulk Response Item"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«CloudJob»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/CloudJob"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«CloudPool»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/CloudPool"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«CloudPoolMapping»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/CloudPoolMapping"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«CloudWorker»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/CloudWorker"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Custom tag»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Custom tag"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Dashboard Version»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Dashboard Version"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Data Export»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Data Export"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«DependencyScanIssue»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/DependencyScanIssue"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«DynamicScanRequest»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/DynamicScanRequest"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Engine type»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Engine type"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«EventLog»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/EventLog"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Feature»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Feature"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Filter Set»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Filter Set"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Folder»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Folder"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«IID Migration»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/IID Migration"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Issue Assignment»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Issue Assignment"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Issue Attachment»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Issue Attachment"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Issue Audit Comment»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Issue Audit Comment"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Issue Statistics»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Issue Statistics"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Issue Summary»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Issue Summary"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Issue Template»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Issue Template"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«IssueAgingDto»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/IssueAgingDto"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«IssueAgingGroupDto»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/IssueAgingGroupDto"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«IssueAuditHistoryDto»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/IssueAuditHistoryDto"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Issues Delta Export»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Issues Delta Export"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«IssueViewTemplate»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/IssueViewTemplate"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Job»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Job"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«JobPriorityChangeCategoryWarning»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/JobPriorityChangeCategoryWarning"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«LDAP entity»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/LDAP entity"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«LdapServerDto»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/LdapServerDto"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Local Group»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Local Group"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Local User»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Local User"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«OpenSourceIssue»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/OpenSourceIssue"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Performance Indicator History»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Performance Indicator History"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«PerformanceIndicator»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/PerformanceIndicator"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Permission»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Permission"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Plugin Meta Data»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Plugin Meta Data"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Project version bug tracker»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Project version bug tracker"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Project version issue details»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Project version issue details"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Project version issue group»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Project version issue group"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Project version issue»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Project version issue"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Project Version»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Project Version"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Project»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Project"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Report Definition»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Report Definition"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Report Library»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Report Library"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Responsibility Assignment»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Responsibility Assignment"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Result processing rule»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Result processing rule"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Role»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Rulepack Core»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Rulepack Core"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«RulepacksBatchProcessStatus»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/RulepacksBatchProcessStatus"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«RulepackStatus»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/RulepackStatus"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Saved Report»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Saved Report"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«scan error»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/scan error"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Scan»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Scan"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«SourceFileDto»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/SourceFileDto"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«System Configuration»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/System Configuration"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Token Definition»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Token Definition"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«UserSessionState»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/UserSessionState"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Variable History»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Variable History"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«Variable»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/Variable"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«WebHook Definition»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/WebHook Definition"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«List«WebHook History Item»»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/WebHook History Item"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Local Group»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Local Group",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Local User»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Local User",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«PasswordStrengthCheckResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/PasswordStrengthCheckResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Performance Indicator History»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Performance Indicator History",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«PerformanceIndicator»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/PerformanceIndicator",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Permission»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Permission",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Plugin Localization»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "readOnly": true,
                    "type": "object"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Plugin Meta Data»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Plugin Meta Data",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Project version issue details»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Project version issue details",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Project version issue»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Project version issue",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Project Version»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Project Version",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Project»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Project",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«ProjectVersionRefreshResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/ProjectVersionRefreshResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«ProjectVersionTestResponse»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/ProjectVersionTestResponse",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«RefreshAuditAssistantPoliciesRequest»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/RefreshAuditAssistantPoliciesRequest",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Report Definition»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Report Definition",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Report Library»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Report Library",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Responsibility Assignment»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Responsibility Assignment",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Role»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Role",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Saved Report»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Saved Report",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Scan»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Scan",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«SearchIndexStatus»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/SearchIndexStatus",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«System Configuration»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/System Configuration",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«User preferences»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/User preferences",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«User session information»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/User session information",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«UserIssueSearchOptions»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/UserIssueSearchOptions",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Validation Status»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Validation Status",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Variable History»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Variable History",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Variable»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/Variable",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«Void»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«WebHook Definition»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/WebHook Definition",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«WebHook History Item»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/WebHook History Item",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiResult«WebHook History»": {
            "properties": {
                "count": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/WebHook History",
                    "readOnly": true
                },
                "errorCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "links": {
                    "readOnly": true,
                    "type": "object"
                },
                "message": {
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stackTrace": {
                    "readOnly": true,
                    "type": "string"
                },
                "successCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Application State": {
            "description": "Application state DTO object",
            "properties": {
                "autoConfigurationMode": {
                    "description": "Indicates whether SSC application is in auto configuration mode",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "configVisitRequired": {
                    "description": "Indicates whether a config visit is needed",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "maintenanceMode": {
                    "description": "Indicates whether SSC application is in maintenance mode",
                    "example": false,
                    "type": "boolean"
                },
                "restartRequired": {
                    "description": "Indicates whether a restart is needed",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ApplicationNameTestRequest": {
            "description": "Request to test whether application with provided name exists",
            "properties": {
                "applicationName": {
                    "description": "application name to test",
                    "type": "string"
                }
            },
            "required": [
                "applicationName"
            ],
            "type": "object"
        },
        "ApplicationNameTestResponse": {
            "description": "Response of testing whether application exists",
            "properties": {
                "found": {
                    "description": "If application founds",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Artifact": {
            "description": "Application version artifact that contains scan results.",
            "properties": {
                "_embed": {
                    "$ref": "#/definitions/EmbeddedScans",
                    "description": "Optionally embedded resources",
                    "readOnly": true
                },
                "allowApprove": {
                    "type": "boolean"
                },
                "allowDelete": {
                    "type": "boolean"
                },
                "allowPurge": {
                    "type": "boolean"
                },
                "approvalComment": {
                    "type": "string"
                },
                "approvalDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "approvalUsername": {
                    "type": "string"
                },
                "artifactType": {
                    "enum": [
                        "NONE",
                        "FPR",
                        "FPR_PRE_PROCESS",
                        "ANALYSIS_ARTIFACT",
                        "SOURCE_ARCHIVE",
                        "RUNTIME_EVENT_LOG"
                    ],
                    "type": "string"
                },
                "auditUpdated": {
                    "type": "boolean"
                },
                "fileName": {
                    "type": "string"
                },
                "fileSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "fileURL": {
                    "type": "string"
                },
                "id": {
                    "description": "Artifact id",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "indexed": {
                    "type": "boolean"
                },
                "inModifyingStatus": {
                    "type": "boolean"
                },
                "lastScanDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "messageCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "messages": {
                    "type": "string"
                },
                "originalFileName": {
                    "type": "string"
                },
                "otherStatus": {
                    "enum": [
                        "NONE",
                        "NOT_EXIST",
                        "IGNORED",
                        "PROCESSED"
                    ],
                    "type": "string"
                },
                "projectVersionId": {
                    "format": "int64",
                    "type": "integer"
                },
                "purged": {
                    "type": "boolean"
                },
                "runtimeStatus": {
                    "enum": [
                        "NONE",
                        "NOT_EXIST",
                        "IGNORED",
                        "PROCESSED"
                    ],
                    "type": "string"
                },
                "scanErrorsCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "scaStatus": {
                    "enum": [
                        "NONE",
                        "NOT_EXIST",
                        "IGNORED",
                        "PROCESSED"
                    ],
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "NONE",
                        "SCHED_PROCESSING",
                        "PROCESSING",
                        "PROCESS_COMPLETE",
                        "ERROR_PROCESSING",
                        "REQUIRE_AUTH",
                        "DELETING",
                        "ERROR_DELETING",
                        "DELETED",
                        "PURGING",
                        "PURGED",
                        "ERROR_PURGING",
                        "DISPATCH_ANALYSIS",
                        "DISPATCH_REAUDIT",
                        "ERROR_DISPATCH",
                        "QUEUED_ANALYSIS",
                        "REQUEUED_ANALYSIS",
                        "ANALYZING",
                        "ANALYSIS_COMPLETE",
                        "ERROR_ANALYZING",
                        "UNKNOWN",
                        "AUDIT_FAILED",
                        "AUTH_DENIED"
                    ],
                    "type": "string"
                },
                "uploadDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "uploadIP": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "versionNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "webInspectStatus": {
                    "enum": [
                        "NONE",
                        "NOT_EXIST",
                        "IGNORED",
                        "PROCESSED"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ArtifactApproveRequest": {
            "description": "Request to approve artifact",
            "properties": {
                "artifactIds": {
                    "description": "List containing single artifact ID to approve",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "comment": {
                    "description": "Approval comments",
                    "type": "string"
                }
            },
            "required": [
                "artifactIds",
                "comment"
            ],
            "type": "object"
        },
        "ArtifactPurgeRequest": {
            "description": "Request to purge artifacts",
            "properties": {
                "artifactIds": {
                    "description": "List containing single artifact ID to purge",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "artifactIds"
            ],
            "type": "object"
        },
        "AssignedUser": {
            "description": "user assigned to issue",
            "properties": {
                "hasAccess": {
                    "description": "whether the assigned user currently has access to the application version in current context",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "userName": {
                    "description": "username assigned to issue",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "hasAccess",
                "userName"
            ],
            "type": "object"
        },
        "Attribute": {
            "description": "Attribute DTO object.",
            "properties": {
                "attributeDefinitionId": {
                    "description": "ID required when referencing an existing Attribute Definition.",
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "description": "ID required when referencing an existing Attribute.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "value": {
                    "description": "Attribute value - should be set if Attribute Definition type is NUMBER/STRING/BOOLEAN/DATE/FILE",
                    "type": "string"
                },
                "values": {
                    "description": "Attribute Options associated with Attribute Definition with type=SINGLE/MULTIPLE",
                    "items": {
                        "$ref": "#/definitions/Attribute Option"
                    },
                    "type": "array"
                }
            },
            "required": [
                "attributeDefinitionId",
                "value",
                "values"
            ],
            "type": "object"
        },
        "Attribute Definition": {
            "description": "Attribute Definition DTO object.",
            "properties": {
                "appEntityType": {
                    "description": "Application Entity Type",
                    "enum": [
                        "PROJECT_VERSION",
                        "NONE"
                    ],
                    "type": "string"
                },
                "category": {
                    "description": "Attribute Definition Category",
                    "enum": [
                        "TECHNICAL",
                        "BUSINESS",
                        "DYNAMIC_SCAN_REQUEST",
                        "ORGANIZATION"
                    ],
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "guid": {
                    "description": "Unique string identifier for this Attribute Definition",
                    "type": "string"
                },
                "hasDefault": {
                    "description": "Set to true if this Attribute Definition should be the default",
                    "example": false,
                    "type": "boolean"
                },
                "hidden": {
                    "description": "Set to true if this Attribute Definition is hidden",
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "ID required when referencing an existing Attribute Definition",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "inUse": {
                    "description": "True when Attribute Definition is associated with one or more application versions",
                    "example": false,
                    "type": "boolean"
                },
                "isDeletable": {
                    "description": "True if this Attribute Definition can be deleted with force parameter",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Attribute Definition version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "options": {
                    "description": "List of options (i.e. values) associated with this Attribute Definition",
                    "items": {
                        "$ref": "#/definitions/Attribute Option"
                    },
                    "type": "array"
                },
                "publishVersion": {
                    "format": "int32",
                    "type": "integer"
                },
                "required": {
                    "description": "Set to true if this Attribute Definition is required",
                    "example": false,
                    "type": "boolean"
                },
                "sequenceNumber": {
                    "format": "int64",
                    "type": "integer"
                },
                "systemUsage": {
                    "description": "System Usage Type",
                    "enum": [
                        "HP_DEFINED_DELETABLE",
                        "HP_DEFINED_NON_DELETABLE",
                        "USER_DEFINED_DELETABLE",
                        "USER_DEFINED_NON_DELETABLE"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Attribute Definition Type",
                    "enum": [
                        "TEXT",
                        "SINGLE",
                        "MULTIPLE",
                        "LONG_TEXT",
                        "SENSITIVE_TEXT",
                        "BOOLEAN",
                        "INTEGER",
                        "DATE",
                        "FILE"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "appEntityType",
                "category",
                "guid",
                "hasDefault",
                "name",
                "required",
                "systemUsage",
                "type"
            ],
            "type": "object"
        },
        "Attribute Option": {
            "description": "Attribute Option DTO object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "guid": {
                    "description": "Unique string identifier for an Attribute Option",
                    "type": "string"
                },
                "hidden": {
                    "description": "Set to true if this option is to be hidden",
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "ID required with referencing an existing Attribute Option",
                    "format": "int64",
                    "type": "integer"
                },
                "index": {
                    "description": "Index of this option in list of options",
                    "format": "int32",
                    "type": "integer"
                },
                "inUse": {
                    "description": "Set to true if this option is being used",
                    "example": false,
                    "type": "boolean"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "objectVersion": {
                    "format": "int32",
                    "type": "integer"
                },
                "projectMetaDataDefId": {
                    "description": "ID of Attribute Definition this option is associated with",
                    "format": "int64",
                    "type": "integer"
                },
                "publishVersion": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "guid",
                "id",
                "index",
                "name",
                "projectMetaDataDefId"
            ],
            "type": "object"
        },
        "Audit Comment": {
            "description": "An audit comment",
            "properties": {
                "auditTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "seqNumber": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "userName": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "auditTime",
                "comment",
                "seqNumber",
                "userName"
            ],
            "type": "object"
        },
        "Audit value": {
            "description": "A custom tag value being assigned to issues in the application",
            "properties": {
                "autoApplied": {
                    "description": "Flag equals true if custom tag values was applied automatically",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "customTagGuid": {
                    "description": "GUID of custom tag",
                    "readOnly": true,
                    "type": "string"
                },
                "customTagIndex": {
                    "description": "index of assigned tag value within the list of values for that custom tag",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dateValue": {
                    "example": "yyyy-MM-dd",
                    "type": "string"
                },
                "decimalValue": {
                    "type": "number"
                },
                "textValue": {
                    "type": "string"
                }
            },
            "required": [
                "customTagGuid",
                "customTagIndex"
            ],
            "type": "object"
        },
        "AuditAssistantStatus": {
            "description": "AuditAssistantStatus DTO object",
            "properties": {
                "fprFilePath": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "projectVersionId": {
                    "format": "int64",
                    "type": "integer"
                },
                "serverId": {
                    "format": "int64",
                    "type": "integer"
                },
                "serverStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "status": {
                    "enum": [
                        "NONE",
                        "PRE_PREDICT_FAILURE",
                        "PREDICT_QUEUED",
                        "PREDICT_PREP",
                        "PREDICT_SUBMITTED",
                        "PREDICT_COMPLETE",
                        "PREDICT_FAILED",
                        "PREDICTIONS_RETRIEVING",
                        "PREDICTIONS_RETRIEVED",
                        "PREDICTIONS_RETRIEVE_FAILED",
                        "UPLOAD_FPR_FAILED"
                    ],
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Authentication Code Exchange Request": {
            "description": "Request exchange of authentication code and code verifier for a token",
            "properties": {
                "authCode": {
                    "description": "Authentication Code",
                    "type": "string"
                },
                "codeVerifier": {
                    "description": "Code Verifier, high-entropy cryptographic random string matching regular expression ^[a-zA-Z0-9.~_-]{43,128}$",
                    "type": "string"
                }
            },
            "required": [
                "authCode",
                "codeVerifier"
            ],
            "type": "object"
        },
        "Authentication Code Generate Request": {
            "description": "Request a new authentication code for token specification",
            "properties": {
                "codeChallenge": {
                    "description": "Code Challenge (base64url_encode(sha256(code_verifier)))",
                    "type": "string"
                },
                "description": {
                    "description": "Purpose for which the token will be requested.",
                    "type": "string"
                },
                "terminalDate": {
                    "description": "Date and time the token expires (in ISO 8601 format). If not specified, it will default to the maximum lifetime for this token type.",
                    "example": "2017-11-29T22:40:11.000+00:00",
                    "format": "date-time",
                    "type": "string"
                },
                "type": {
                    "description": "Token type",
                    "example": "UnifiedLoginToken",
                    "type": "string"
                }
            },
            "required": [
                "codeChallenge",
                "type"
            ],
            "type": "object"
        },
        "Authentication Code Response": {
            "properties": {
                "authCode": {
                    "description": "Authentication Code",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Authentication Entity": {
            "description": "A user account that can be used to authenticate in SSC. There are currently three types of user accounts that fall into this category: SSC local users, local users managed by external service, and LDAP users registered with SSC.",
            "properties": {
                "_embed": {
                    "$ref": "#/definitions/EmbeddedRoles",
                    "description": "Optionally embedded resources",
                    "readOnly": true
                },
                "displayName": {
                    "description": "Display Name supports the use of wildcard matching. So, for example, \"L*\" will match Lando Calrissian and Lara Croft.",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "entityName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "description": "Authentication entity id",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "isLdap": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "ldapDn": {
                    "description": "Distinguished Name (DN) that is only set for LDAP user accounts",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userPhoto": {
                    "$ref": "#/definitions/User photo"
                }
            },
            "type": "object"
        },
        "Authentication Token": {
            "description": "Token to use for authentication",
            "properties": {
                "creationDate": {
                    "description": "Date and time the token was created (in ISO 8601 format)",
                    "example": "2017-09-22T19:08:42.000+00:00",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "description": "Purpose for which the token was requested.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of token",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "remainingUsages": {
                    "description": "The remaining number of api calls that can be made using this token. A value of -1 denotes unlimited number of calls.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "terminalDate": {
                    "description": "Date and time the token expires (in ISO 8601 format). If not specified, it will default to the maximum lifetime for this token type.",
                    "example": "2017-11-29T22:40:11.000+00:00",
                    "format": "date-time",
                    "type": "string"
                },
                "token": {
                    "description": "String that represents the authentication token. (For security reasons, this value is null except for a successful token creation response.)",
                    "readOnly": true,
                    "type": "string"
                },
                "type": {
                    "description": "Token type",
                    "example": "UnifiedLoginToken",
                    "type": "string"
                },
                "username": {
                    "description": "Username of token owner",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "AuthTokenRevokeRequest": {
            "description": "Request for revoking tokens by value",
            "properties": {
                "tokens": {
                    "description": "A list of tokens (atleast one) to revoke",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "tokens"
            ],
            "type": "object"
        },
        "Bug Tracker": {
            "description": "Bug tracker DTO object",
            "properties": {
                "authenticationRequired": {
                    "description": "Authentication required",
                    "example": false,
                    "type": "boolean"
                },
                "bugTrackerConfigs": {
                    "description": "Bug tracker configuration",
                    "items": {
                        "$ref": "#/definitions/Bug Tracker Configuration"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Bug tracker identifier",
                    "readOnly": true,
                    "type": "string"
                },
                "longDisplayName": {
                    "description": "Long display name",
                    "type": "string"
                },
                "pluginClassName": {
                    "description": "Class name",
                    "type": "string"
                },
                "pluginId": {
                    "description": "Bug tracker plugin identifier",
                    "type": "string"
                },
                "shortDisplayName": {
                    "description": "Short display name",
                    "type": "string"
                }
            },
            "required": [
                "authenticationRequired",
                "pluginClassName",
                "pluginId",
                "shortDisplayName"
            ],
            "type": "object"
        },
        "Bug Tracker Configuration": {
            "description": "Bug tracker Configuration DTO object",
            "properties": {
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "displayLabel": {
                    "description": "Configuration name",
                    "type": "string"
                },
                "identifier": {
                    "description": "Identifier",
                    "type": "string"
                },
                "required": {
                    "description": "Set to true if configuration is required",
                    "example": false,
                    "type": "boolean"
                },
                "value": {
                    "description": "Configuration value",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "displayLabel",
                "identifier",
                "required",
                "value"
            ],
            "type": "object"
        },
        "BugfieldTemplateDto": {
            "description": "Bugfield Template",
            "properties": {
                "fieldName": {
                    "description": "unique name of bugfield template.",
                    "type": "string"
                },
                "fieldValue": {
                    "description": "description for bugfield template .",
                    "type": "string"
                },
                "id": {
                    "description": "unique identifier of bugfield template.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "fieldName"
            ],
            "type": "object"
        },
        "BugfieldTemplateGroupDto": {
            "description": "Bugfield Template Group",
            "properties": {
                "bugTrackerPluginId": {
                    "description": "Identifier of the bug tracker plugin associated with this template group.",
                    "readOnly": true,
                    "type": "string"
                },
                "deletable": {
                    "description": "Flag that says if bugfield template group can be deleted.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "description": {
                    "description": "description for bugfield template group.",
                    "type": "string"
                },
                "id": {
                    "description": "unique identifier of bugfield template group.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "short name of associated bug tracker plugin. (May be null if plugin is not currently enabled.)",
                    "type": "string"
                },
                "objectVersion": {
                    "description": "version of bugfield template group stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "valueList": {
                    "description": "Collection of all templates belonging to this bugfield template group.",
                    "items": {
                        "$ref": "#/definitions/BugfieldTemplateDto"
                    },
                    "type": "array"
                }
            },
            "required": [
                "bugTrackerPluginId",
                "deletable",
                "name",
                "objectVersion",
                "valueList"
            ],
            "type": "object"
        },
        "BugFilingRequirements": {
            "properties": {
                "bugParams": {
                    "items": {
                        "$ref": "#/definitions/BugParam"
                    },
                    "type": "array"
                },
                "bugTrackerLongDisplayName": {
                    "type": "string"
                },
                "bugTrackerShortDisplayName": {
                    "type": "string"
                },
                "requiresAuthentication": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "BugFilingRequirementsRequest": {
            "description": "Request initial or updated set of big filing requirements",
            "properties": {
                "bugFilingRequirements": {
                    "$ref": "#/definitions/BugFilingRequirements",
                    "description": "Modified values of bug filing requirements. Not setting this attribute means that initial set of bug filing requirements need to be returned"
                },
                "changedParamIdentifier": {
                    "description": "Changed bug filing requirements parameter identifier. Value is required if bugFilingRequirements attribute is provided and ignored if bugFilingRequirements is not set",
                    "type": "string"
                },
                "password": {
                    "description": "Bug tracker password. If not set, bug filing requirements LOGIN action must be called before sending this reques",
                    "type": "string"
                },
                "username": {
                    "description": "Bug tracker username. If not set, bug filing requirements LOGIN action must be called before sending this reques",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BugFilingRequirementsResponse": {
            "description": "Response of validating connection credentials and returns bug filing requirements",
            "properties": {
                "bugFilingRequirements": {
                    "$ref": "#/definitions/BugFilingRequirements",
                    "description": "Requirements to file the bugs",
                    "readOnly": true
                }
            },
            "type": "object"
        },
        "BugParam": {
            "properties": {
                "bugParamType": {
                    "enum": [
                        "BUGPARAM_TEXT",
                        "BUGPARAM_TEXTAREA",
                        "BUGPARAM_CHOICE"
                    ],
                    "type": "string"
                },
                "choiceList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "type": "string"
                },
                "displayLabel": {
                    "type": "string"
                },
                "hasDependentParams": {
                    "type": "boolean"
                },
                "identifier": {
                    "type": "string"
                },
                "maxLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "required": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BugStateManagementCfg": {
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "projectVersionId": {
                    "format": "int64",
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BugTrackerRequest": {
            "description": "Request to test bugtracker plugin connection",
            "properties": {
                "testPlugin": {
                    "$ref": "#/definitions/Project version bug tracker",
                    "description": "Bugtracker plugin information to test connection"
                }
            },
            "required": [
                "testPlugin"
            ],
            "type": "object"
        },
        "Bulk Request Data": {
            "properties": {
                "requests": {
                    "description": "A list of bulk request items that represents requests that could have been issued independently (or use HATEOAS \"response\" scheme requests that map to individual requests).",
                    "items": {
                        "$ref": "#/definitions/ApiBulkRequestItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Bulk Response Item": {
            "properties": {
                "request": {
                    "$ref": "#/definitions/ApiBulkRequestItem"
                },
                "responses": {
                    "items": {
                        "$ref": "#/definitions/ApiBulkResponseItemResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClientSessionIdRequest": {
            "description": "Client session ID request",
            "properties": {
                "clientName": {
                    "description": "Client name for which to retrieve the session ID",
                    "type": "string"
                }
            },
            "required": [
                "clientName"
            ],
            "type": "object"
        },
        "ClientSessionIdResponse": {
            "description": "Client session ID",
            "properties": {
                "clientSessionId": {
                    "description": "Opaque unique identifier for the current user session (between 43 and 255 characters)",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudJob": {
            "description": "ScanCentral job",
            "properties": {
                "cloudPool": {
                    "$ref": "#/definitions/CloudPool"
                },
                "cloudWorker": {
                    "$ref": "#/definitions/CloudWorker"
                },
                "jobCancellable": {
                    "type": "boolean"
                },
                "jobDuration": {
                    "format": "int64",
                    "type": "integer"
                },
                "jobExpiryTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "jobFinishedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "jobHasFpr": {
                    "type": "boolean"
                },
                "jobHasLog": {
                    "type": "boolean"
                },
                "jobQueuedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "jobStartedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "jobState": {
                    "type": "string"
                },
                "jobToken": {
                    "readOnly": true,
                    "type": "string"
                },
                "priority": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "projectId": {
                    "format": "int64",
                    "type": "integer"
                },
                "projectName": {
                    "type": "string"
                },
                "pvId": {
                    "format": "int64",
                    "type": "integer"
                },
                "pvName": {
                    "type": "string"
                },
                "queuedDuration": {
                    "format": "int64",
                    "type": "integer"
                },
                "scaArgs": {
                    "type": "string"
                },
                "scaBuildId": {
                    "type": "string"
                },
                "scanDuration": {
                    "format": "int64",
                    "type": "integer"
                },
                "scaVersion": {
                    "type": "string"
                },
                "submitterEmail": {
                    "type": "string"
                },
                "submitterIpAddress": {
                    "type": "string"
                },
                "submitterUserName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudJobCancelRequest": {
            "description": "Request to cancel ScanCentral jobs",
            "properties": {
                "jobTokens": {
                    "description": "List containing single ScanCentral token to cancel",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "jobTokens"
            ],
            "type": "object"
        },
        "CloudPool": {
            "description": "ScanCentral worker pool",
            "properties": {
                "childOfGlobalPool": {
                    "example": false,
                    "type": "boolean"
                },
                "description": {
                    "description": "ScanCentral pool description",
                    "type": "string"
                },
                "isDeletable": {
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "name": {
                    "description": "ScanCentral pool name",
                    "type": "string"
                },
                "path": {
                    "description": "ScanCentral pool path",
                    "readOnly": true,
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/CloudPoolStats",
                    "readOnly": true
                },
                "uuid": {
                    "description": "ScanCentral pool UUID",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "CloudPoolMapping": {
            "description": "Application version to ScanCentral pool mapping",
            "properties": {
                "cloudPool": {
                    "$ref": "#/definitions/CloudPool"
                },
                "projectVersionId": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CloudPoolProjectVersionActionResponse": {
            "description": "Result of cloud pool actions relating to application versions",
            "properties": {
                "projectVersionIds": {
                    "description": "List of application version ids",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CloudPoolProjectVersionAssignRequest": {
            "description": "Request to assign application versions to the cloud pool",
            "properties": {
                "projectVersionIds": {
                    "description": "List of application version ids to assign to cloud pool",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "projectVersionIds"
            ],
            "type": "object"
        },
        "CloudPoolProjectVersionReplaceRequest": {
            "description": "Request to replace application versions in the cloud pool",
            "properties": {
                "projectVersionIds": {
                    "description": "List of application version ids to replace in cloud pool",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "projectVersionIds"
            ],
            "type": "object"
        },
        "CloudPoolStats": {
            "description": "ScanCentral worker pool statistics",
            "properties": {
                "activeWorkerCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "idleWorkerCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "inactiveWorkerCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "pendingJobCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "processingWorkerCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "projectVersionCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "runningJobCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "staleWorkerCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "totalWorkerCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CloudPoolWorkerActionResponse": {
            "description": "Result of ScanCentral workers related actions",
            "properties": {
                "workerUuids": {
                    "description": "ScanCentral worker uuids",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CloudPoolWorkerAssignRequest": {
            "description": "Request to assign cloud workers to cloud pool",
            "properties": {
                "workerUuids": {
                    "description": "List of worker UUIds to assign to the cloud pool",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "workerUuids"
            ],
            "type": "object"
        },
        "CloudPoolWorkerDisableRequest": {
            "description": "Request to disable workers from the cloud pool",
            "properties": {
                "workerUuids": {
                    "description": "List of worker UUIds to disable from the cloud pool",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "workerUuids"
            ],
            "type": "object"
        },
        "CloudPoolWorkerReplaceRequest": {
            "description": "Request to replace workers in the cloud pool",
            "properties": {
                "workerUuids": {
                    "description": "List of worker UUIds to replace in the cloud pool",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "workerUuids"
            ],
            "type": "object"
        },
        "CloudScanConfig": {
            "description": "ScanCentral Config DTO object",
            "properties": {
                "cloudScanEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CloudSystemMetrics": {
            "description": "ScanCentral system metrics",
            "properties": {
                "controllerDiskFree": {
                    "description": "Free disk space in controller's job directory [bytes]",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "controllerDiskUsed": {
                    "description": "Disk space used by files in controller's job directory [bytes]",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "controllerStartTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "controllerDiskFree",
                "controllerDiskUsed",
                "controllerStartTime"
            ],
            "type": "object"
        },
        "CloudSystemPollStatus": {
            "description": "ScanCentral system poll status",
            "properties": {
                "lastPollSuccessful": {
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "lastPollTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "lastSuccessfulPollTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "lastPollSuccessful",
                "lastPollTime",
                "lastSuccessfulPollTime"
            ],
            "type": "object"
        },
        "CloudSystemSettings": {
            "description": "ScanCentral system settings",
            "properties": {
                "cleanupPeriodSeconds": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "cloudSystemState": {
                    "enum": [
                        "ACTIVE",
                        "WAITING_FOR_JOB_COMPLETED",
                        "MAINTENANCE"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "controllerMaxUploadSize": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "controllerSystemUrl": {
                    "readOnly": true,
                    "type": "string"
                },
                "controllerSystemVersion": {
                    "readOnly": true,
                    "type": "string"
                },
                "isSscLockdownMode": {
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "jobExpiryDelaySeconds": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "poolMappingMode": {
                    "readOnly": true,
                    "type": "string"
                },
                "smtpFromAddress": {
                    "readOnly": true,
                    "type": "string"
                },
                "smtpHost": {
                    "readOnly": true,
                    "type": "string"
                },
                "smtpPort": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "sscUrl": {
                    "readOnly": true,
                    "type": "string"
                },
                "workerExpiryDelaySeconds": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "workerInactiveDelaySeconds": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "workerStaleDelaySeconds": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "cleanupPeriodSeconds",
                "cloudSystemState",
                "controllerMaxUploadSize",
                "controllerSystemUrl",
                "controllerSystemVersion",
                "isSscLockdownMode",
                "jobExpiryDelaySeconds",
                "poolMappingMode",
                "smtpFromAddress",
                "smtpHost",
                "smtpPort",
                "sscUrl",
                "workerExpiryDelaySeconds",
                "workerInactiveDelaySeconds",
                "workerStaleDelaySeconds"
            ],
            "type": "object"
        },
        "CloudWorker": {
            "description": "ScanCentral worker",
            "properties": {
                "availableProcessors": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "cloudPool": {
                    "$ref": "#/definitions/CloudPool",
                    "readOnly": true
                },
                "hostName": {
                    "readOnly": true,
                    "type": "string"
                },
                "ipAddress": {
                    "readOnly": true,
                    "type": "string"
                },
                "lastActivity": {
                    "readOnly": true,
                    "type": "string"
                },
                "lastSeen": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "osArchitecture": {
                    "readOnly": true,
                    "type": "string"
                },
                "osName": {
                    "readOnly": true,
                    "type": "string"
                },
                "osVersion": {
                    "readOnly": true,
                    "type": "string"
                },
                "processUuid": {
                    "readOnly": true,
                    "type": "string"
                },
                "scaVersion": {
                    "readOnly": true,
                    "type": "string"
                },
                "state": {
                    "readOnly": true,
                    "type": "string"
                },
                "totalPhysicalMemory": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "uuid": {
                    "readOnly": true,
                    "type": "string"
                },
                "vmName": {
                    "readOnly": true,
                    "type": "string"
                },
                "workerExpiryTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "workerStartTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "availableProcessors",
                "cloudPool",
                "hostName",
                "ipAddress",
                "lastActivity",
                "lastSeen",
                "osArchitecture",
                "osName",
                "osVersion",
                "processUuid",
                "scaVersion",
                "state",
                "totalPhysicalMemory",
                "uuid",
                "vmName",
                "workerExpiryTime",
                "workerStartTime"
            ],
            "type": "object"
        },
        "ConfigProperties": {
            "description": "Collection of SSC application configuration properties",
            "properties": {
                "properties": {
                    "description": "Collection of configuration properties defined in the system",
                    "items": {
                        "$ref": "#/definitions/ConfigProperty"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ConfigProperty": {
            "description": "SSC application configuration property",
            "properties": {
                "appliedAfterRestarting": {
                    "description": "Should the SSC server be restarted after changing value of the property to apply the changes.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "configPropertyValueValidation": {
                    "$ref": "#/definitions/ConfigPropertyValueValidation",
                    "description": "Meta information about how the property's value should be validated on the client side.",
                    "readOnly": true
                },
                "description": {
                    "description": "Property description.",
                    "readOnly": true,
                    "type": "string"
                },
                "group": {
                    "description": "Parent group name the property belongs to.",
                    "readOnly": true,
                    "type": "string"
                },
                "groupSwitchEnabled": {
                    "description": "Flag is set to TRUE if property is allowed to be edited on UI.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "name": {
                    "description": "Configuration property unique name.",
                    "readOnly": true,
                    "type": "string"
                },
                "propertyType": {
                    "description": "Property value type.",
                    "enum": [
                        "BOOLEAN",
                        "INTEGER",
                        "STRING",
                        "STRINGMULTILINE",
                        "OPTIONLIST",
                        "DYNAMIC_OPTIONLIST",
                        "ENCODED",
                        "ENCODEDHIDDEN",
                        "EMAIL",
                        "URL",
                        "HOSTNAME",
                        "MULTI_EMAIL",
                        "DISTINGUISHED_NAME",
                        "ENCODED_DISTINGUISHED_NAME",
                        "DISTINGUISHED_NAMES;"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "protectedOption": {
                    "description": "If special permission is required to get value of this property.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "required": {
                    "description": "Flag is set to TRUE if this property is required and always must have non empty value.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "subGroup": {
                    "description": "Parent subgroup name the property belongs to.",
                    "readOnly": true,
                    "type": "string"
                },
                "value": {
                    "description": "Configuration property value. Depends on property type. It can be number, string, URL, email or value from values list.",
                    "type": "string"
                },
                "valuesList": {
                    "description": "List of allowed property values if property type is OPTIONLIST or DYNAMIC_OPTIONLIST.",
                    "items": {
                        "$ref": "#/definitions/ConfigPropertyValueItem"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "version": {
                    "description": "Configuration property version stored on the server. This value is used for optimistic locking of the property object to prevent concurrent changes of the property value by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "value",
                "version"
            ],
            "type": "object"
        },
        "ConfigPropertyValueItem": {
            "description": "Allowed values of the property which type is OPTIONLIST or DYNAMIC_OPTIONLIST.",
            "properties": {
                "displayName": {
                    "description": "Value display name. This string is displayed on UI in the option values list.",
                    "readOnly": true,
                    "type": "string"
                },
                "value": {
                    "description": "Value that is sent to server if this option is selected on UI.",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConfigPropertyValueValidation": {
            "description": "SSC configuration property value validation type",
            "properties": {
                "validationType": {
                    "enum": [
                        "NOT_SET",
                        "POSITIVE_INTEGER",
                        "MIXED_VALUES"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CurrentAuthenticationInfo": {
            "description": "Information about current authentication",
            "properties": {
                "authType": {
                    "description": "Type of current authentication",
                    "enum": [
                        "ANONYMOUS",
                        "LOCAL",
                        "SAML",
                        "CAS",
                        "HTTP",
                        "X509",
                        "KERBEROS"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "singleLogoutSupported": {
                    "description": "Information if current authentication type support single logout",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Custom tag": {
            "properties": {
                "customTagType": {
                    "description": "Custom tag type.",
                    "enum": [
                        "UNKNOWN",
                        "CUSTOM",
                        "HYBRID",
                        "METAGROUP",
                        "SYSTEM",
                        "AUDITASSISTANT",
                        "PRIORITYOVERRIDE"
                    ],
                    "type": "string"
                },
                "defaultValue": {
                    "description": "Default value of the custom tag. Actual string value is presented here.",
                    "readOnly": true,
                    "type": "string"
                },
                "defaultValueIndex": {
                    "description": "Index of default value of the custom tag. This is ordinal number of the item in CustomTagLookup collection.",
                    "format": "int32",
                    "type": "integer"
                },
                "deletable": {
                    "description": "Flag that says if custom tag can be deleted. Custom tag which values are currently in use cannot be deleted.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "description": {
                    "description": "Custom tag description.",
                    "type": "string"
                },
                "extensible": {
                    "description": "Flag that says if custom tag is extensible or not.",
                    "example": false,
                    "type": "boolean"
                },
                "guid": {
                    "description": "Custom tag GUID.",
                    "readOnly": true,
                    "type": "string"
                },
                "hidden": {
                    "description": "Is custom tag hidden or not.",
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "Custom tag id",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "inUse": {
                    "description": "Is custom tag values are selected for any issues in the system.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "name": {
                    "description": "Custom tag unique name.",
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Custom tag version stored on the server. This value is used for optimistic locking of the custom tag object to prevent concurrent modification of the custom tag by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "primaryTag": {
                    "description": "If this custom tag is set as primary tag for a specific application version. This value is initialized only if custom tags for specific application version are requested.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "requiresComment": {
                    "description": "Does custom tag require comment on value change or not.",
                    "example": false,
                    "type": "boolean"
                },
                "restriction": {
                    "description": "Flag is set to true if special permission is required to set values of this custom tag.",
                    "example": false,
                    "type": "boolean"
                },
                "restrictionType": {
                    "description": "Special permission type if restriction is set to TRUE.",
                    "enum": [
                        "NONE",
                        "RESTRICTED",
                        "READONLY"
                    ],
                    "type": "string"
                },
                "valueList": {
                    "description": "Collection of all possible custom tag values.",
                    "items": {
                        "$ref": "#/definitions/CustomTagLookup"
                    },
                    "type": "array"
                },
                "valueType": {
                    "description": "Custom tag value type.",
                    "enum": [
                        "LIST",
                        "DECIMAL",
                        "DATE",
                        "TEXT"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "customTagType",
                "extensible",
                "guid",
                "hidden",
                "name",
                "objectVersion",
                "valueType"
            ],
            "type": "object"
        },
        "Custom Tag": {
            "description": "A custom tag value being assigned to issues in the application",
            "properties": {
                "autoApplied": {
                    "description": "Flag equals true if custom tag values was applied automatically",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "comment": {
                    "description": "Comment for the custom tag value change",
                    "type": "string"
                },
                "customTagGuid": {
                    "description": "GUID of custom tag",
                    "readOnly": true,
                    "type": "string"
                },
                "dateValue": {
                    "example": "yyyy-MM-dd",
                    "type": "string"
                },
                "decimalValue": {
                    "type": "number"
                },
                "newCustomTagIndex": {
                    "description": "index of assigned tag value within the list of values for that custom tag",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "textValue": {
                    "type": "string"
                }
            },
            "required": [
                "customTagGuid",
                "newCustomTagIndex"
            ],
            "type": "object"
        },
        "customTagInfo": {
            "description": "Holds the details about existed custom tag that is assigned or linked with some other entity",
            "properties": {
                "guid": {
                    "description": "Custom tag GUID",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "Custom tag id",
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "description": "Custom tag unique name",
                    "readOnly": true,
                    "type": "string"
                },
                "valueList": {
                    "description": "Collection of custom tag values",
                    "items": {
                        "$ref": "#/definitions/customTagLookupInfo"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CustomTagLookup": {
            "description": "Custom tag value",
            "properties": {
                "consideredIssue": {
                    "description": "Flag that should be used to mark values that mean \"not an issue\" or \"false positive\".",
                    "example": false,
                    "type": "boolean"
                },
                "customTagGuid": {
                    "description": "GUID of the parent custom tag this value belongs to.",
                    "readOnly": true,
                    "type": "string"
                },
                "defaultValue": {
                    "description": "Flag that says if this value is default custom tag value and should be selected automatically in the values list on issue audit screen.",
                    "example": false,
                    "type": "boolean"
                },
                "deletable": {
                    "description": "Flag that says if this value can be removed from custom tag. Value cannot be removed if it is selected for some issue in the system.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "description": {
                    "description": "Custom tag value description.",
                    "type": "string"
                },
                "hidden": {
                    "description": "Flag that says that this value is hidden and cannot be selected in issue audit mode.",
                    "example": false,
                    "type": "boolean"
                },
                "lookupIndex": {
                    "description": "Current value index in values list.",
                    "format": "int32",
                    "type": "integer"
                },
                "lookupValue": {
                    "description": "Plain text custom tag value.",
                    "type": "string"
                },
                "relyingCustomTags": {
                    "description": "List of relying custom tags and their values this value depends on. This list should be set to automatically reflect relying custom tags values changes to this custom tag value",
                    "items": {
                        "$ref": "#/definitions/customTagInfo"
                    },
                    "type": "array"
                },
                "seqNumber": {
                    "description": "Custom tag value sequence number.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "lookupIndex",
                "lookupValue",
                "seqNumber"
            ],
            "type": "object"
        },
        "customTagLookupInfo": {
            "description": "Holds the details about existed list custom tag value that is assigned or linked with some other entity",
            "properties": {
                "lookupIndex": {
                    "description": "Current value index in values list",
                    "format": "int32",
                    "type": "integer"
                },
                "lookupValue": {
                    "description": "Plain text custom tag value",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "lookupIndex"
            ],
            "type": "object"
        },
        "Dashboard Version": {
            "additionalProperties": {
                "type": "object"
            },
            "type": "object"
        },
        "Data Export": {
            "description": "Data Export DTO object",
            "properties": {
                "appVersionId": {
                    "description": "Application version id - required if DatasetName = \"Audit\"",
                    "format": "int64",
                    "type": "integer"
                },
                "appVersionName": {
                    "description": "Application version name",
                    "type": "string"
                },
                "datasetName": {
                    "description": "Dataset name - e.g. \"Audit\", \"Issue Stats\" - corresponds to page from which data is exported",
                    "type": "string"
                },
                "documentInfoId": {
                    "description": "Document Info id for file blob",
                    "format": "int64",
                    "type": "integer"
                },
                "expiration": {
                    "description": "Data export file expiration in days",
                    "format": "int32",
                    "type": "integer"
                },
                "exportDate": {
                    "description": "Export date",
                    "format": "date-time",
                    "type": "string"
                },
                "fileName": {
                    "description": "Name of data export file",
                    "type": "string"
                },
                "fileType": {
                    "description": "File type, e.g. CSV",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "note": {
                    "description": "Note, i.e. comments or info related to data being exported",
                    "type": "string"
                },
                "status": {
                    "description": "Data export status",
                    "enum": [
                        "EXPORT_PROCESS_STARTED",
                        "EXPORT_PROCESS_COMPLETED",
                        "EXPORT_PROCESS_FAILED"
                    ],
                    "type": "string"
                },
                "userName": {
                    "description": "User name of user who initiated the data export",
                    "type": "string"
                }
            },
            "required": [
                "datasetName",
                "fileName"
            ],
            "type": "object"
        },
        "DependencyScanIssue": {
            "description": "Dependency Scan Issue DTO.",
            "properties": {
                "category": {
                    "description": "The category for this issue, provided by the scanner.",
                    "type": "string"
                },
                "controllable": {
                    "description": "Does the application send user input to the vulnerable open source code?",
                    "example": false,
                    "type": "boolean"
                },
                "cwes": {
                    "description": "List of CWE IDs in the format 'CWE-xxxx'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "engineType": {
                    "description": "Engine type",
                    "type": "string"
                },
                "evidence": {
                    "description": "URL for issue evidence",
                    "type": "string"
                },
                "externalId": {
                    "description": "Vulnerability ID provided by the analysis engine or parser",
                    "type": "string"
                },
                "externalUrl": {
                    "description": "URL to get more information about this vulnerability.",
                    "type": "string"
                },
                "filename": {
                    "description": "Filename of the component where the issue exists",
                    "type": "string"
                },
                "hidden": {
                    "description": "Is this issue hidden?",
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "Application version issue identifier",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "invoked": {
                    "description": "Does the application call the vulnerable open source code?",
                    "example": false,
                    "type": "boolean"
                },
                "issueInstanceId": {
                    "description": "Issue instance identifier",
                    "type": "string"
                },
                "license": {
                    "description": "Component license",
                    "type": "string"
                },
                "packageName": {
                    "description": "Package name for the component",
                    "type": "string"
                },
                "packageNamespace": {
                    "description": "Package namespace for the component",
                    "type": "string"
                },
                "packageType": {
                    "description": "Package type",
                    "type": "string"
                },
                "packageUrl": {
                    "description": "Package URL - usually in the format <scheme>:<type>/<namespace>/<name>@<version>",
                    "type": "string"
                },
                "priority": {
                    "description": "Priority",
                    "type": "string"
                },
                "projectVersionId": {
                    "description": "Application version identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "removed": {
                    "description": "Is this issue removed?",
                    "example": false,
                    "type": "boolean"
                },
                "suppressed": {
                    "description": "Is this issue suppressed?",
                    "example": false,
                    "type": "boolean"
                },
                "upgradeToVersion": {
                    "description": "Component version to upgrade to",
                    "type": "string"
                },
                "version": {
                    "description": "Component version containing the issue vulnerability",
                    "type": "string"
                }
            },
            "required": [
                "category",
                "controllable",
                "cwes",
                "engineType",
                "evidence",
                "externalId",
                "externalUrl",
                "filename",
                "invoked",
                "issueInstanceId",
                "license",
                "packageName",
                "packageNamespace",
                "packageType",
                "packageUrl",
                "priority",
                "projectVersionId",
                "upgradeToVersion",
                "version"
            ],
            "type": "object"
        },
        "DynamicScanRequest": {
            "description": "Dynamic Scan Request object",
            "properties": {
                "id": {
                    "description": "Unique identifier of dynamic scan request",
                    "format": "int64",
                    "type": "integer"
                },
                "lastUpdateDate": {
                    "description": "The date that the dynamic scan request was updated",
                    "format": "date-time",
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Dynamic scan request version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "parameters": {
                    "description": "Parameters that are needed for dynamic scan request",
                    "items": {
                        "$ref": "#/definitions/DynamicScanRequestParameter"
                    },
                    "type": "array"
                },
                "requestedDate": {
                    "description": "The date that the dynamic scan request was submitted",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the dynamic scan request",
                    "enum": [
                        "SUBMITTED",
                        "PICKED_UP",
                        "CANCELED",
                        "COMPLETED"
                    ],
                    "type": "string"
                },
                "submitter": {
                    "description": "The id of the user who submitted the dynamic scan request",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "parameters"
            ],
            "type": "object"
        },
        "DynamicScanRequestParameter": {
            "description": "Dynamic Scan Request Parameter DTO object",
            "properties": {
                "fileValueDocumentInfoId": {
                    "description": "The file value document info id for an upload file",
                    "format": "int64",
                    "type": "integer"
                },
                "fileValueName": {
                    "description": "The name of an uploaded file",
                    "type": "string"
                },
                "id": {
                    "description": "The id of the parameter",
                    "format": "int64",
                    "type": "integer"
                },
                "objectVersion": {
                    "description": "Parameter version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "parameterDefinition": {
                    "$ref": "#/definitions/DynamicScanRequestParameterDefinition",
                    "description": "The definition for this parameter"
                },
                "value": {
                    "description": "The value of the parameter",
                    "type": "string"
                },
                "valueOptions": {
                    "description": "The name of the uploaded file",
                    "items": {
                        "$ref": "#/definitions/DynamicScanRequestParameterOption"
                    },
                    "type": "array"
                },
                "values": {
                    "description": "A list of possible values for this parameter",
                    "items": {
                        "$ref": "#/definitions/DynamicScanRequestParameterOption"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DynamicScanRequestParameterDefinition": {
            "description": "Attribute Definition DTO object.",
            "properties": {
                "description": {
                    "type": "string"
                },
                "guid": {
                    "description": "Unique string identifier for this parameter definition",
                    "type": "string"
                },
                "id": {
                    "description": "Unique id for this parameter definition",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "required": {
                    "description": "Set to true if required",
                    "example": false,
                    "type": "boolean"
                },
                "sequenceNumber": {
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "description": "Attribute Definition Type from which this parameter definition is based on",
                    "enum": [
                        "TEXT",
                        "SINGLE",
                        "MULTIPLE",
                        "LONG_TEXT",
                        "SENSITIVE_TEXT",
                        "BOOLEAN",
                        "INTEGER",
                        "DATE",
                        "FILE"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "guid",
                "name",
                "required",
                "type"
            ],
            "type": "object"
        },
        "DynamicScanRequestParameterOption": {
            "description": "Dynamic Scan Request Parameter Option DTO object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "guid": {
                    "description": "Unique string identifier for a Dynamic Scan Request Parameter Option",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID for this parameter option",
                    "format": "int64",
                    "type": "integer"
                },
                "index": {
                    "description": "Index of this option in list of options",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "index",
                "name"
            ],
            "type": "object"
        },
        "DynamicScanRequestsSummary": {
            "description": "Dynamic Scan Requests Summary object",
            "properties": {
                "canEditOrCancel": {
                    "description": "Flag that indicates whether the user may edit or cancel the dynamic scan request",
                    "example": false,
                    "type": "boolean"
                },
                "canSubmit": {
                    "description": "Flag that indicates whether the user can submit dynamic scan requests",
                    "example": false,
                    "type": "boolean"
                },
                "dynamicScanDisabled": {
                    "description": "Flag that indicates whether dynamic scan request is disabled",
                    "example": false,
                    "type": "boolean"
                },
                "dynamicScanDisabledMessage": {
                    "description": "A message indicating the reason for why dynamic scan is disabled",
                    "type": "string"
                },
                "lastScanId": {
                    "description": "The id of the last dynamic scan request",
                    "format": "int64",
                    "type": "integer"
                },
                "lastScanSummary": {
                    "description": "Holds information about the last dynamic scan request",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DynamicScanRequestTemplate": {
            "description": "Dynamic Scan Request Template object",
            "properties": {
                "parameters": {
                    "description": "Parameters that are needed for dynamic scan request",
                    "items": {
                        "$ref": "#/definitions/DynamicScanRequestParameter"
                    },
                    "type": "array"
                }
            },
            "required": [
                "parameters"
            ],
            "type": "object"
        },
        "EdastConfig": {
            "description": "EDAST Config DTO object",
            "properties": {
                "edastEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "EmbeddedAuditHistory": {
            "description": "Audit history",
            "properties": {
                "attributeName": {
                    "description": "Changed attribute name.",
                    "readOnly": true,
                    "type": "string"
                },
                "auditTime": {
                    "description": "Date and time when audit was performed.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "conflict": {
                    "description": "Flag that indicates if there were any conflicts when audit information was merged.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "newValue": {
                    "description": "Attribute value after audit.",
                    "readOnly": true,
                    "type": "string"
                },
                "oldValue": {
                    "description": "Attribute value before audit.",
                    "readOnly": true,
                    "type": "string"
                },
                "seqNumber": {
                    "description": "Sequence number of the history record in the list of all audit history records for the issue.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "userName": {
                    "description": "Name of the user who performed the audit.",
                    "readOnly": true,
                    "type": "string"
                },
                "valueType": {
                    "description": "Attribute type.",
                    "enum": [
                        "LIST",
                        "DECIMAL",
                        "DATE",
                        "TEXT"
                    ],
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmbeddedReportDefinition": {
            "properties": {
                "reportDefinition": {
                    "$ref": "#/definitions/Report Definition",
                    "description": "Report definition",
                    "readOnly": true
                }
            },
            "type": "object"
        },
        "EmbeddedRoles": {
            "properties": {
                "roles": {
                    "description": "Authentication entity roles",
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EmbeddedScans": {
            "properties": {
                "scans": {
                    "description": "Artifact scans",
                    "items": {
                        "$ref": "#/definitions/Scan"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Engine type": {
            "description": "Types of the analyzers (engines) that produces issues",
            "properties": {
                "name": {
                    "readOnly": true,
                    "type": "string"
                },
                "servedByPlugin": {
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "EntityStateIdentifier": {
            "description": "Simple API entity that contains only ID and revision.",
            "properties": {
                "id": {
                    "description": "API entity identifier.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "revision": {
                    "description": "API entity revision.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "revision"
            ],
            "type": "object"
        },
        "EventLog": {
            "description": "Event Log DTO object",
            "properties": {
                "detailedNote": {
                    "readOnly": true,
                    "type": "string"
                },
                "entityId": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "eventDate": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "eventType": {
                    "enum": [
                        "WEBUI_LOGIN_SUCCESS",
                        "WEBUI_LOGIN_FAILED",
                        "WEBUI_LOGOUT",
                        "WEBUI_LOGIN_WITH_NO_ROLE",
                        "WS_LOGIN_SUCCESS",
                        "WS_LOGIN_FAILED",
                        "WS_LOGIN_WITH_NO_ROLE",
                        "LOCAL_USER_CREATED",
                        "LOCAL_USER_UPDATED",
                        "LOCAL_USER_DELETED",
                        "LOCAL_USER_FROZEN",
                        "LOCAL_GROUP_CREATED",
                        "LOCAL_GROUP_UPDATED",
                        "LOCAL_GROUP_DELETED",
                        "AGENT_CREDENTIAL_CREATED",
                        "AGENT_CREDENTIAL_UPDATED",
                        "AGENT_CREDENTIAL_DELETED",
                        "LDAP_ENTITY_CREATED",
                        "LDAP_ENTITY_UPDATED",
                        "LDAP_ENTITY_DELETED",
                        "LDAP_CACHE_REFRESH_REQUESTED",
                        "LDAP_CACHE_REFRESH_STARTED",
                        "LDAP_CACHE_REFRESH_COMPLETED",
                        "PROJECT_VERSION_CREATED",
                        "PROJECT_VERSION_CREATED_FROM_PREVIOUS",
                        "PROJECT_VERSION_UPDATED",
                        "PROJECT_VERSION_DELETED",
                        "PROJECT_VERSION_METADATA_UPDATED",
                        "PROJECT_VERSION_ACCESS_ADDED",
                        "PROJECT_VERSION_ACCESS_REMOVED",
                        "PROJECT_VERSION_BUG_TRACKER_UPDATED",
                        "SCA_RESULT_PROCESSED",
                        "RUNTIME_RESULT_PROCESSED",
                        "EXTERNAL_RESULT_PROCESSED",
                        "PTA_RESULT_PROCESSED",
                        "RTA_RESULT_PROCESSED",
                        "ARTIFACT_UPLOAD_REQUESTED",
                        "ARTIFACT_UPLOAD_STARTED",
                        "ARTIFACT_UPLOAD_COMPLETED",
                        "ARTIFACT_UPLOAD_FAILED",
                        "ARTIFACT_UPLOAD_CANCELLED",
                        "ARTIFACT_DELETE_REQUESTED",
                        "ARTIFACT_DELETE_STARTED",
                        "ARTIFACT_DELETE_COMPLETED",
                        "ARTIFACT_DELETE_FAILED",
                        "ARTIFACT_DELETE_CANCELLED",
                        "ARTIFACT_DOWNLOAD",
                        "JOB_CANCELLED",
                        "JOB_CANCEL_REQUESTED",
                        "ARTIFACT_PURGE_REQUESTED",
                        "ARTIFACT_PURGE_REQUEST_STARTED",
                        "ARTIFACT_PURGE_COMPLETED",
                        "ARTIFACT_PURGE_FAILED",
                        "ARTIFACT_PURGE_REQUEST_FINISHED",
                        "ARTIFACT_PURGE_CANCELLED",
                        "HISTORICAL_SNAPSHOT_COLLECTION_STARTED",
                        "HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_COMPLETED",
                        "HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_FAILED",
                        "HISTORICAL_SNAPSHOT_COLLECTION_NO_UPDATES",
                        "AUDIT_PERFORMED",
                        "ARTIFACT_UPLOAD_REQUIRES_AUTH",
                        "ARTIFACT_UPLOAD_APPROVED",
                        "SOURCE_CODE_UPLOADED",
                        "FILTERSET_FOLDER_REFRESH_REQUESTED",
                        "FILTERSET_FOLDER_REFRESH_COMPLETED",
                        "FILTERSET_FOLDER_REFRESH_FAILED",
                        "DYNAMIC_SCAN_CREATED",
                        "DYNAMIC_SCAN_EDITED",
                        "DYNAMIC_SCAN_CANCELED",
                        "DYNAMIC_SCAN_COMPLETED",
                        "DYNAMIC_SCAN_PICKED_UP",
                        "BATCH_BUG_FILING_REQUESTED",
                        "BATCH_BUG_FILING_REQUEST_FAILED",
                        "BATCH_BUG_FILING_STARTED",
                        "BATCH_BUG_FILING_ENDED",
                        "BATCH_BUG_FILING_FAILED",
                        "BUG_FILED",
                        "BUG_FAILED_TO_FILE",
                        "BUG_STATE_MANAGEMENT_STARTED",
                        "BUG_STATE_MANAGEMENT_ENDED",
                        "BUG_STATE_MANAGEMENT_ENDED_WITH_ERRORS",
                        "BUG_UPDATED",
                        "BUG_FAILED_TO_UPDATE",
                        "COMMENT_ADDED_TO_ISSUE",
                        "AUDIT_ASSISTANT_ISSUES_SUBMITTED",
                        "AUDIT_ASSISTANT_ISSUES_RETRIEVED",
                        "AUDIT_ASSISTANT_FPR_UPLOAD_STARTED",
                        "AUDIT_ASSISTANT_TRAINING_SENT",
                        "AUDIT_ASSISTANT_TEST_CONNECTION_FAILED",
                        "AUDIT_ASSISTANT_ISSUES_SUBMIT_FAILED",
                        "AUDIT_ASSISTANT_ISSUES_RETRIEVE_FAILED",
                        "AUDIT_ASSISTANT_FPR_UPLOAD_FAILED",
                        "AUDIT_ASSISTANT_TRAINING_SENT_FAILED",
                        "AUDIT_ASSISTANT_PROJECT_PREDICTION_POLICY_CHANGED",
                        "AUDIT_ASSISTANT_DEFAULT_PREDICTION_POLICY_CHANGED",
                        "AUDIT_ASSISTANT_TAG_MAPPING_CHANGED",
                        "AUDIT_ASSISTANT_PREDICTION_POLICIES_REFRESHED",
                        "REPORT_GENERATION_REQUESTED",
                        "REPORT_GENERATION_COMPLETED",
                        "REPORT_GENERATION_FAILED",
                        "REPORT_GENERATION_CANCELLED",
                        "REPORT_DELETED",
                        "RULEPACK_SERVER_UPDATE",
                        "RULEPACK_USER_UPLOAD",
                        "RULEPACK_DELETED",
                        "RULEPACK_DOWNLOAD",
                        "RULEPACK_CLIENT_UPDATE",
                        "DOCUMENT_ARTIFACT_CREATED",
                        "DOCUMENT_ARTIFACT_UPDATED",
                        "DOCUMENT_ARTIFACT_DELETED",
                        "TASK_INSTANCE_CREATED",
                        "TASK_INSTANCE_UPDATED",
                        "TASK_INSTANCE_DELETED",
                        "TASK_INSTANCE_SIGNOFF_UPDATED",
                        "ACTIVITY_INSTANCE_SIGNOFF_UPDATED",
                        "REQUIREMENT_INSTANCE_SIGNOFF_UPDATED",
                        "REQUIREMENT_TEMPLATE_INSTANCE_SIGNOFF_UPDATED",
                        "TASK_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
                        "ACTIVITY_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
                        "REQUIREMENT_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
                        "REQUIREMENT_TEMPLATE_DUE_DATE_PASSED_NO_SIGNOFF",
                        "SDL_COMMENT_CREATED",
                        "PROJECT_PERSONA_ASSIGNMENT_UPDATED",
                        "PERSONA_ASSIGNMENT_UPDATED",
                        "WORK_OWNER_UPDATED",
                        "DUE_DATE_UPDATED",
                        "SESSION_TIMEOUT",
                        "REQ_TEMPLATE_CREATED",
                        "REQ_TEMPLATE_UPDATED",
                        "ACTIVITY_CREATED",
                        "ACTIVITY_UPDATED",
                        "VARIABLE_CREATED",
                        "VARIABLE_UPDATED",
                        "VARIABLE_DELETED",
                        "MEASUREMENT_AGENT_CREATED",
                        "MEASUREMENT_AGENT_UPDATED",
                        "MEASUREMENT_AGENT_DELETED",
                        "DOCUMENT_DEF_CREATED",
                        "DOCUMENT_DEF_UPDATED",
                        "PROJECT_TEMPLATE_CREATED",
                        "PROJECT_TEMPLATE_UPDATED",
                        "PROJECT_TEMPLATE_DELETED",
                        "ASSIGNMENT_RULES_UPDATED",
                        "PERSONA_CREATED",
                        "PERSONA_UPDATED",
                        "PERSONA_DELETED",
                        "ATTR_CREATED",
                        "ATTR_UPDATED",
                        "ATTR_DELETED",
                        "ATTRIBUTE_DEFINITION_CREATED",
                        "ATTRIBUTE_DEFINITION_UPDATED",
                        "ATTRIBUTE_DEFINITION_DELETED",
                        "PROJECT_VERSION_CUSTOM_TAG_ASSIGNMENT",
                        "PROJECT_VERSION_PRIMARY_TAG_UPDATE",
                        "REPORT_DEFINITION_CREATED",
                        "REPORT_DEFINITION_UPDATED",
                        "REPORT_DEFINITION_DELETED",
                        "REPORT_LIBRARY_CREATED",
                        "REPORT_LIBRARY_UPDATED",
                        "REPORT_LIBRARY_DELETED",
                        "RUNTIME_HOST_CONNECTED",
                        "RUNTIME_HOST_DISCONNECTED",
                        "RUNTIME_HOST_CREATED",
                        "RUNTIME_HOST_DELETED",
                        "RUNTIME_HOST_DISCOVERED",
                        "RUNTIME_HOST_ENABLED",
                        "RUNTIME_HOST_DISABLED",
                        "RUNTIME_HOST_AUTH_RESET",
                        "ACCEPT_NEW_HOSTS_ENABLED",
                        "ACCEPT_NEW_HOSTS_DISABLED",
                        "DISABLED_HOST_CONNECTION",
                        "RUNTIME_APPLICATION_ASSIGNMENT_RULES_UPDATED",
                        "REAPPLY_APPLICATION_ASSIGNMENT_RULES_REQUESTED",
                        "REAPPLY_APPLICATION_ASSIGNMENT_RULES_COMPLETED",
                        "REAPPLY_APPLICATION_ASSIGNMENT_RULES_FAILED",
                        "RUNTIME_CONFIGURATION_CREATED",
                        "RUNTIME_CONFIGURATION_UPDATED",
                        "RUNTIME_CONFIGURATION_DELETED",
                        "RUNTIME_CONFIGURATION_TEMPLATE_UPDATED",
                        "RUNTIME_EH_CREATED",
                        "RUNTIME_EH_UPDATED",
                        "RUNTIME_EH_DELETED",
                        "RUNTIME_SETTINGS_UPDATED",
                        "RUNTIME_RULEPACK_CONFIG_UPDATED",
                        "RUNTIME_EVENT_RECEIVED",
                        "RUNTIME_ALERT_RECEIVED",
                        "FEDERATION_CREATED",
                        "FEDERATION_UPDATED",
                        "FEDERATION_DELETED",
                        "RTAPP_CREATED",
                        "RTAPP_UPDATED",
                        "RTAPP_DELETED",
                        "RTAPP_ACCESS_ADDED",
                        "RTAPP_ACCESS_REMOVED",
                        "USERROLE_CREATED",
                        "USERROLE_UPDATED",
                        "USERROLE_DELETED",
                        "CLOUD_CONTROLLER_ACTIVATED",
                        "CLOUD_CONTROLLER_DEACTIVATED",
                        "CLOUD_SCAN_POLLED",
                        "CLOUD_POOL_CREATED",
                        "CLOUD_POOL_UPDATED",
                        "CLOUD_POOL_DELETED",
                        "CLOUD_POOL_AVS_UPDATED",
                        "CLOUD_POOL_SENSORS_UPDATED",
                        "CLOUD_JOB_CANCELED",
                        "CLOUD_JOB_PRIORITIZED",
                        "CLOUD_JOB_FPR_DOWNLOADED",
                        "CLOUD_JOB_LOG_DOWNLOADED",
                        "CLOUD_SENSORS_SHUT_DOWN",
                        "INDEX_MAINTENANCE_STARTED",
                        "INDEX_MAINTENANCE_COMPLETED",
                        "FULL_REINDEX_STARTED",
                        "FULL_REINDEX_COMPLETED",
                        "INDEX_NEW_ISSUES_STARTED",
                        "INDEX_NEW_ISSUES_COMPLETED",
                        "SSC_CONFIGURATION_UPDATED",
                        "LDAP_CONFIG_CREATED",
                        "LDAP_CONFIG_UPDATED",
                        "LDAP_CONFIG_DELETED",
                        "LDAP_CONFIG_DEFAULT_CHANGED",
                        "SEED_BUNDLE_UPLOAD_COMPLETED",
                        "SEED_BUNDLE_UPLOAD_FAILED",
                        "SEED_BUNDLE_COMPLETED",
                        "SEED_BUNDLE_FAILED",
                        "WEBHOOK_DEFINITION_CREATED",
                        "WEBHOOK_DEFINITION_UPDATED",
                        "WEBHOOK_DEFINITION_DELETED"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "projectVersionId": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "userName": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportAuditToCSVRequest": {
            "description": "Request to export audit information to CSV file",
            "properties": {
                "aggregateBy": {
                    "description": "Aggregateby",
                    "type": "string"
                },
                "collapseIssues": {
                    "description": "Will collapse issues in exported files",
                    "example": false,
                    "type": "boolean"
                },
                "datasetName": {
                    "description": "Dataset name (Audit)",
                    "type": "string"
                },
                "fileName": {
                    "description": "File name to save",
                    "type": "string"
                },
                "filter": {
                    "description": "Filter",
                    "type": "string"
                },
                "filterBy": {
                    "description": "Filterby",
                    "type": "string"
                },
                "filterSet": {
                    "description": "Filterset",
                    "type": "string"
                },
                "includeCommentsInHistory": {
                    "description": "Will include comments in history",
                    "example": false,
                    "type": "boolean"
                },
                "includeHidden": {
                    "description": "Will include hidden issues",
                    "example": false,
                    "type": "boolean"
                },
                "includeRemoved": {
                    "description": "Will include removed issues",
                    "example": false,
                    "type": "boolean"
                },
                "includeSuppressed": {
                    "description": "Will include suppressed issues",
                    "example": false,
                    "type": "boolean"
                },
                "issueSearch": {
                    "description": "Search issue query",
                    "type": "string"
                },
                "limit": {
                    "description": "Limit",
                    "format": "int32",
                    "type": "integer"
                },
                "note": {
                    "description": "Note",
                    "type": "string"
                },
                "orderBy": {
                    "description": "Orderby",
                    "type": "string"
                },
                "projectVersionId": {
                    "description": "Application version id to export audit data",
                    "format": "int64",
                    "type": "integer"
                },
                "restrictToUsersIssues": {
                    "description": "will restrict to user issues",
                    "example": false,
                    "type": "boolean"
                },
                "start": {
                    "description": "Start",
                    "format": "int32",
                    "type": "integer"
                },
                "useShortFileNames": {
                    "description": "Will use short file names",
                    "example": false,
                    "type": "boolean"
                }
            },
            "required": [
                "datasetName",
                "fileName",
                "filterSet",
                "orderBy",
                "projectVersionId"
            ],
            "type": "object"
        },
        "ExportDependencyScanToCsvRequest": {
            "description": "Request to export dependency scan information to CSV file",
            "properties": {
                "engineType": {
                    "description": "Plugin engine type of issues to export",
                    "type": "string"
                },
                "fileName": {
                    "description": "File name to save",
                    "type": "string"
                },
                "filterSet": {
                    "description": "Filter set to use for issues",
                    "type": "string"
                },
                "includeHidden": {
                    "description": "Will include hidden issues",
                    "example": false,
                    "type": "boolean"
                },
                "includeRemoved": {
                    "description": "Will include removed issues",
                    "example": false,
                    "type": "boolean"
                },
                "includeSuppressed": {
                    "description": "Will include suppressed issues",
                    "example": false,
                    "type": "boolean"
                },
                "limit": {
                    "description": "Limit",
                    "example": -1,
                    "format": "int32",
                    "type": "integer"
                },
                "note": {
                    "description": "Note",
                    "type": "string"
                },
                "projectVersionId": {
                    "description": "Application version id to export dependency scan data",
                    "format": "int64",
                    "type": "integer"
                },
                "start": {
                    "description": "Start",
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "fileName",
                "projectVersionId"
            ],
            "type": "object"
        },
        "ExportIssueStatsToCSVRequest": {
            "description": "Request to export issue stats to CSV file",
            "properties": {
                "datasetName": {
                    "description": "Dataset name (Issue Stat)",
                    "type": "string"
                },
                "fileName": {
                    "description": "Csv file name",
                    "type": "string"
                },
                "limit": {
                    "description": "Limit",
                    "format": "int32",
                    "type": "integer"
                },
                "note": {
                    "description": "Note for csv export",
                    "type": "string"
                },
                "start": {
                    "description": "Start",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "datasetName",
                "fileName"
            ],
            "type": "object"
        },
        "ExportOscToCsvRequest": {
            "description": "Request to export open source component information to CSV file",
            "properties": {
                "fileName": {
                    "description": "File name to save",
                    "type": "string"
                },
                "filterSet": {
                    "description": "Filter set to use for issues",
                    "type": "string"
                },
                "includeHidden": {
                    "description": "Will include hidden issues",
                    "example": false,
                    "type": "boolean"
                },
                "includeRemoved": {
                    "description": "Will include removed issues",
                    "example": false,
                    "type": "boolean"
                },
                "includeSuppressed": {
                    "description": "Will include suppressed issues",
                    "example": false,
                    "type": "boolean"
                },
                "limit": {
                    "description": "Limit",
                    "example": -1,
                    "format": "int32",
                    "type": "integer"
                },
                "note": {
                    "description": "Note",
                    "type": "string"
                },
                "projectVersionId": {
                    "description": "Application version id to export open source component data",
                    "format": "int64",
                    "type": "integer"
                },
                "start": {
                    "description": "Start",
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "fileName",
                "projectVersionId"
            ],
            "type": "object"
        },
        "External Bug Info": {
            "description": "External Bug Info DTO object",
            "properties": {
                "externalBugDeepLink": {
                    "description": "Link to a bug the user can navigate to by clicking the link",
                    "type": "string"
                },
                "externalBugId": {
                    "description": "ID of the bug",
                    "type": "string"
                },
                "fileBugForSelectAll": {
                    "description": "True if user wants to file a bug for all selected issues in UI",
                    "example": false,
                    "type": "boolean"
                },
                "issueCount": {
                    "description": "Count of issues for which a bug is filed",
                    "format": "int64",
                    "type": "integer"
                },
                "issueInstanceIds": {
                    "description": "List of Issue Instance IDs",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "externalBugDeepLink",
                "externalBugId",
                "fileBugForSelectAll",
                "issueCount",
                "issueInstanceIds"
            ],
            "type": "object"
        },
        "Feature": {
            "description": "A feature that is available on the server instance",
            "properties": {
                "description": {
                    "description": "Feature description",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "Feature id",
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "description": "Feature name",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "description",
                "id",
                "name"
            ],
            "type": "object"
        },
        "File": {
            "properties": {
                "absolute": {
                    "type": "boolean"
                },
                "absoluteFile": {
                    "$ref": "#/definitions/File"
                },
                "absolutePath": {
                    "type": "string"
                },
                "canonicalFile": {
                    "$ref": "#/definitions/File"
                },
                "canonicalPath": {
                    "type": "string"
                },
                "directory": {
                    "type": "boolean"
                },
                "executable": {
                    "type": "boolean"
                },
                "file": {
                    "type": "boolean"
                },
                "freeSpace": {
                    "format": "int64",
                    "type": "integer"
                },
                "hidden": {
                    "type": "boolean"
                },
                "lastModified": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "parentFile": {
                    "$ref": "#/definitions/File"
                },
                "path": {
                    "type": "string"
                },
                "readable": {
                    "type": "boolean"
                },
                "totalSpace": {
                    "format": "int64",
                    "type": "integer"
                },
                "usableSpace": {
                    "format": "int64",
                    "type": "integer"
                },
                "writable": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "File token": {
            "description": "Token to upload or download files",
            "properties": {
                "fileTokenType": {
                    "description": "Type of single-use file token",
                    "enum": [
                        "UPLOAD",
                        "DOWNLOAD",
                        "PREVIEW_FILE",
                        "REPORT_FILE"
                    ],
                    "example": "DOWNLOAD",
                    "type": "string"
                },
                "token": {
                    "description": "Value of single-use token to be used as the 'mat' URL parameter during a file operation",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "fileTokenType"
            ],
            "type": "object"
        },
        "Filter Set": {
            "description": "basic info on a filter set (does not include filters)",
            "properties": {
                "defaultFilterSet": {
                    "description": "whether this filter set is the default within its issue template",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "description": {
                    "readOnly": true,
                    "type": "string"
                },
                "folders": {
                    "description": "List of folders defined in filter set",
                    "items": {
                        "$ref": "#/definitions/FolderDto"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "guid": {
                    "description": "GUID of filter set",
                    "readOnly": true,
                    "type": "string"
                },
                "title": {
                    "description": "name of filter set",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "defaultFilterSet",
                "description",
                "folders",
                "guid",
                "title"
            ],
            "type": "object"
        },
        "Folder": {
            "properties": {
                "color": {
                    "description": "Color that should be used to represent folder on UI",
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "description": "Folder description",
                    "readOnly": true,
                    "type": "string"
                },
                "editable": {
                    "description": "Is folder editable",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "guid": {
                    "description": "Folder GUID. Guid is unique across all the folders defined for a application version",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "Folder id",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "Folder name",
                    "readOnly": true,
                    "type": "string"
                },
                "orderIndex": {
                    "description": "Numeric value used for ordering folder from the most important to the least important",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "projectVersionId": {
                    "description": "ID of the application version for which folder is defined",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FolderDto": {
            "description": "Issues folder. This is a readonly object, it cannot be created using SSC API.",
            "properties": {
                "color": {
                    "description": "Folder color. Folder will be marked by this color on UI",
                    "readOnly": true,
                    "type": "string"
                },
                "guid": {
                    "description": "Folder GUID.",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of the folder.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "Folder unique name.",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Fortify job": {
            "description": "Fortify job DTO object, carries less information than the main Job DTO. Used primarily for the snapshot refresh which be initiated by a non-admin user",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "string"
                },
                "invokingUserName": {
                    "description": "SSC username which initiated the job",
                    "readOnly": true,
                    "type": "string"
                },
                "jobState": {
                    "example": "0=normal, 2=complete, 3=error",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "jobType": {
                    "example": "20 represents HISTORICAL_SNAPSHOT job",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "invokingUserName",
                "jobState",
                "jobType"
            ],
            "type": "object"
        },
        "IID Migration": {
            "properties": {
                "artifactId": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "description": "IID migration id",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "mappings": {
                    "items": {
                        "$ref": "#/definitions/IidMapping"
                    },
                    "type": "array"
                },
                "processingDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "projectVersionId": {
                    "format": "int64",
                    "type": "integer"
                },
                "status": {
                    "enum": [
                        "NONE",
                        "SCHED_PROCESSING",
                        "PROCESSING",
                        "PROCESS_COMPLETE",
                        "ERROR_PROCESSING",
                        "REQUIRE_AUTH",
                        "DELETING",
                        "ERROR_DELETING",
                        "DELETED",
                        "PURGING",
                        "PURGED",
                        "ERROR_PURGING",
                        "DISPATCH_ANALYSIS",
                        "DISPATCH_REAUDIT",
                        "ERROR_DISPATCH",
                        "QUEUED_ANALYSIS",
                        "REQUEUED_ANALYSIS",
                        "ANALYZING",
                        "ANALYSIS_COMPLETE",
                        "ERROR_ANALYZING",
                        "UNKNOWN",
                        "AUDIT_FAILED",
                        "AUTH_DENIED"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IidMapping": {
            "properties": {
                "fromIid": {
                    "type": "string"
                },
                "toIid": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Input Report Parameter": {
            "description": "InputReportParameter DTO object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "paramValue": {
                    "description": "Value of this parameter",
                    "type": "object"
                },
                "type": {
                    "enum": [
                        "SINGLE_PROJECT",
                        "SINGLE_RUNTIME_APP",
                        "SINGLE_SSA_PROJECT",
                        "MULTI_PROJECT",
                        "MULTI_RUNTIME_APP",
                        "MULTI_SSA_PROJECT",
                        "PROJECT_ATTRIBUTE",
                        "STRING",
                        "BOOLEAN",
                        "DATE",
                        "SINGLE_SELECT_DEFAULT",
                        "METADEF_GUID"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "identifier",
                "name",
                "paramValue",
                "type"
            ],
            "type": "object"
        },
        "InputStream": {
            "type": "object"
        },
        "Issue Assignment": {
            "description": "counts of issues assigned to user",
            "properties": {
                "issueCountAllProjectVer": {
                    "description": "total number of issues assigned to user across all application versions",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "issueCountCertainProjectVer": {
                    "description": "number of issues assigned to user in current application version",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "projectVersionId": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "userName": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "issueCountAllProjectVer",
                "issueCountCertainProjectVer",
                "projectVersionId",
                "userName"
            ],
            "type": "object"
        },
        "Issue Attachment": {
            "description": "attachment (such as screenshot) associated with issue",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fileDocId": {
                    "description": "document ID referencing the attachment",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "guid": {
                    "description": "Attachment GUID",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "image": {
                    "format": "byte",
                    "type": "string"
                },
                "originalFileName": {
                    "type": "string"
                },
                "updateTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "fileDocId",
                "id",
                "updateTime"
            ],
            "type": "object"
        },
        "Issue Audit Comment": {
            "description": "An audit comment associated with an issue",
            "properties": {
                "auditTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "issueEngineType": {
                    "readOnly": true,
                    "type": "string"
                },
                "issueId": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "issueInstanceId": {
                    "readOnly": true,
                    "type": "string"
                },
                "issueName": {
                    "readOnly": true,
                    "type": "string"
                },
                "projectName": {
                    "readOnly": true,
                    "type": "string"
                },
                "projectVersionId": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "projectVersionName": {
                    "readOnly": true,
                    "type": "string"
                },
                "seqNumber": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "userName": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "auditTime",
                "comment",
                "issueId",
                "seqNumber",
                "userName"
            ],
            "type": "object"
        },
        "Issue identifier": {
            "description": "Issue details that are used to identify an issue",
            "properties": {
                "engineType": {
                    "description": "Engine type",
                    "type": "string"
                },
                "issueInstanceId": {
                    "description": "Issue instance identifier",
                    "type": "string"
                }
            },
            "required": [
                "engineType",
                "issueInstanceId"
            ],
            "type": "object"
        },
        "Issue Primary Tag": {
            "description": "Store the information about issue primary custom tag",
            "properties": {
                "tagGuid": {
                    "type": "string"
                },
                "tagId": {
                    "format": "int64",
                    "type": "integer"
                },
                "tagName": {
                    "type": "string"
                },
                "tagValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Issue selector": {
            "description": "Issue selector DTO object",
            "properties": {
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "displayName": {
                    "description": "Display name for issue selector",
                    "type": "string"
                },
                "entityType": {
                    "description": "Issue selector entity type",
                    "enum": [
                        "UNDEFINED",
                        "ISSUE",
                        "EXTERNALLIST",
                        "CUSTOMTAG",
                        "HYBRIDTAG",
                        "FOLDER"
                    ],
                    "type": "string"
                },
                "guid": {
                    "description": "Issue selector global unique identifier",
                    "type": "string"
                },
                "value": {
                    "description": "Issue selector value",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "displayName",
                "entityType",
                "guid",
                "value"
            ],
            "type": "object"
        },
        "Issue Statistics": {
            "description": "Issue Statistics DTO object",
            "properties": {
                "filterSetId": {
                    "description": "Filter set identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "hiddenCount": {
                    "description": "Total number of hidden issues in the application version",
                    "format": "int32",
                    "type": "integer"
                },
                "hiddenDisplayableCount": {
                    "description": "Number of displayable hidden issues in the application version",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "projectVersionId": {
                    "description": "Application version identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "removedCount": {
                    "description": "Total number of removed issues ",
                    "format": "int32",
                    "type": "integer"
                },
                "removedDisplayableCount": {
                    "description": "Number of displayable removed issues  in the application version",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "suppressedCount": {
                    "description": "Total number of suppressed issues in the application version",
                    "format": "int32",
                    "type": "integer"
                },
                "suppressedDisplayableCount": {
                    "description": "Number of displayable suppressed issues in the application version",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "filterSetId",
                "hiddenCount",
                "hiddenDisplayableCount",
                "projectVersionId",
                "removedCount",
                "suppressedCount"
            ],
            "type": "object"
        },
        "Issue Summary": {
            "description": "Used to chart variable and performance indicators of application version's issues.",
            "properties": {
                "name": {
                    "description": "Name",
                    "readOnly": true,
                    "type": "string"
                },
                "series": {
                    "items": {
                        "type": "object"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "totalIssueCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Issue Template": {
            "description": "Issue Template DTO object.",
            "properties": {
                "customTagIds": {
                    "description": "Deprecated - value is always null.",
                    "example": "null",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "defaultTemplate": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Issue template id",
                    "readOnly": true,
                    "type": "string"
                },
                "inUse": {
                    "description": "Is the template in use",
                    "example": false,
                    "type": "boolean"
                },
                "masterAttrGuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Issue template version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "obsolete": {
                    "type": "boolean"
                },
                "originalFileName": {
                    "type": "string"
                },
                "publishVersion": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "originalFileName"
            ],
            "type": "object"
        },
        "IssueActionResponse": {
            "description": "Result of issue audit action",
            "properties": {
                "data": {
                    "description": "Result of issue audit",
                    "items": {
                        "$ref": "#/definitions/IssueAuditResult"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IssueAgingDto": {
            "description": "Issue aging object contains application metrics.",
            "properties": {
                "averageDaysToRemediate": {
                    "description": "Average number of days to fix issues in application versions.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "averageDaysToReview": {
                    "description": "Average number of days to review issues in application versions.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "bugDensity": {
                    "description": "Bug density per 10 000 of scanned lines of code.",
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                },
                "filesScanned": {
                    "description": "Number of files that were scanned in all application versions.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "id": {
                    "description": "This is dynamic attribute which value depend of the aggregation attribute. It can be application ID, application version ID or application version attribute GUID.",
                    "readOnly": true,
                    "type": "string"
                },
                "issuesPendingReview": {
                    "description": "Number of issues that are pending review in all application versions.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "linesOfCode": {
                    "description": "Number of lines of code that were scanned by scans which results are stored in the application versions.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "This is dynamic attribute which value depend of the aggregation attribute. It can be application name, application version name or application version attribute name.",
                    "readOnly": true,
                    "type": "string"
                },
                "numberOfApplicationVersions": {
                    "description": "Number of application versions in the application.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "oldestScanDate": {
                    "description": "Issue audites that have been done after this date have been taken into account for average days to review calculation.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "openIssues": {
                    "description": "Number of not remediated issues in all application versions.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "snapshotOutOfDate": {
                    "description": "Flag that indicates that application metrics state was changed and it metrics are going to be recalculated.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IssueAgingGroupDto": {
            "description": "Issue aging group object contains definition of application version attribute that can be used for issue aging table grouping.",
            "properties": {
                "id": {
                    "description": "ID of issue aging table grouping attribute. This ID should be passed to issue aging endpoint to return issue aging items that belongs only to this group",
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "description": "Name of the group to display it on UI.",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name"
            ],
            "type": "object"
        },
        "IssueAgingPortlet": {
            "description": "Issue aging portlet object contains application and issue metrics.",
            "properties": {
                "applicationVersions": {
                    "format": "int32",
                    "type": "integer"
                },
                "averageDaysToRemediate": {
                    "format": "int32",
                    "type": "integer"
                },
                "averageDaysToReview": {
                    "format": "int32",
                    "type": "integer"
                },
                "filesScanned": {
                    "format": "int64",
                    "type": "integer"
                },
                "issuesPendingReview": {
                    "format": "int64",
                    "type": "integer"
                },
                "issuesRemediated": {
                    "format": "int64",
                    "type": "integer"
                },
                "linesOfCode": {
                    "format": "int64",
                    "type": "integer"
                },
                "openIssues": {
                    "format": "int64",
                    "type": "integer"
                },
                "openIssuesReviewed": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "IssueAssignUserRequest": {
            "description": "Request to assign user to the issues",
            "properties": {
                "issues": {
                    "description": "Issues to audit",
                    "items": {
                        "$ref": "#/definitions/EntityStateIdentifier"
                    },
                    "type": "array"
                },
                "user": {
                    "description": "Username to assign",
                    "type": "string"
                }
            },
            "required": [
                "issues",
                "user"
            ],
            "type": "object"
        },
        "IssueAuditHistoryDto": {
            "description": "Issue audit history record.",
            "properties": {
                "attributeName": {
                    "description": "Changed attribute name.",
                    "readOnly": true,
                    "type": "string"
                },
                "auditDateTime": {
                    "description": "Date and time when audit was performed.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "conflict": {
                    "description": "Flag that indicates if there were any conflicts when audit information was merged.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "issueId": {
                    "description": "ID of the issue the history record belongs to",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "newValue": {
                    "description": "Attribute value after audit.",
                    "readOnly": true,
                    "type": "string"
                },
                "oldValue": {
                    "description": "Attribute value before audit.",
                    "readOnly": true,
                    "type": "string"
                },
                "sequenceNumber": {
                    "description": "Sequence number of the history record in the list of all audit history records for the issue.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "userName": {
                    "description": "Name of the user who performed the audit.",
                    "readOnly": true,
                    "type": "string"
                },
                "valueType": {
                    "description": "Attribute type.",
                    "enum": [
                        "LIST",
                        "DECIMAL",
                        "DATE",
                        "TEXT"
                    ],
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "attributeName",
                "auditDateTime",
                "conflict",
                "issueId",
                "newValue",
                "oldValue",
                "sequenceNumber",
                "userName",
                "valueType"
            ],
            "type": "object"
        },
        "IssueAuditRequest": {
            "description": "Request to audit issues",
            "properties": {
                "comment": {
                    "description": "Comment",
                    "type": "string"
                },
                "customTagAudit": {
                    "description": "Custom tag values that are set for the issue.",
                    "items": {
                        "$ref": "#/definitions/Custom Tag"
                    },
                    "type": "array"
                },
                "issues": {
                    "description": "Issues to audit",
                    "items": {
                        "$ref": "#/definitions/EntityStateIdentifier"
                    },
                    "type": "array"
                },
                "suppressed": {
                    "description": "Will suppress the issue",
                    "example": false,
                    "type": "boolean"
                },
                "user": {
                    "description": "Username to assign",
                    "type": "string"
                }
            },
            "required": [
                "issues"
            ],
            "type": "object"
        },
        "IssueAuditResult": {
            "description": "Issue audit result contains the most rescent issue audit information after performing issue audit.",
            "properties": {
                "customTagValues": {
                    "description": "Custom tag values that are set for the issue.",
                    "items": {
                        "$ref": "#/definitions/Custom Tag"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "id": {
                    "description": "Audited issue ID.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "issueInstanceId": {
                    "description": "Issue instance ID.",
                    "readOnly": true,
                    "type": "string"
                },
                "projectVersionId": {
                    "description": "ID of the application version the audited issue belongs to.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "revision": {
                    "description": "Audited issue revision.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "suppressed": {
                    "description": "Is issue suppressed.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "userName": {
                    "description": "User assigned to the audited issue.",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "customTagValues",
                "id",
                "issueInstanceId",
                "projectVersionId",
                "revision",
                "suppressed",
                "userName"
            ],
            "type": "object"
        },
        "IssueEmbedded": {
            "properties": {
                "auditComments": {
                    "description": "Audit comments",
                    "items": {
                        "$ref": "#/definitions/Audit Comment"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "auditHistory": {
                    "description": "Audit history",
                    "items": {
                        "$ref": "#/definitions/EmbeddedAuditHistory"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "auditValues": {
                    "description": "Audit values",
                    "items": {
                        "$ref": "#/definitions/Audit value"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IssueFileBugRequest": {
            "description": "Request to file the bug from the issues",
            "properties": {
                "bugParams": {
                    "description": "Bug parameters to file the bug",
                    "items": {
                        "$ref": "#/definitions/BugParam"
                    },
                    "type": "array"
                },
                "filterBy": {
                    "description": "Filter by property contains a valid issue search expression if bug needs to be filed for a set of issues identified by this search expression. If empty, bug will be filed for all issues exist in application version. Value is ignored if filterSet value is not set.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "filterSet": {
                    "description": "Application version filter set ID. If filterSet not provided, then both filterBy and issueQuery properties are ignored. If filterSet is provided, then issueInstanceIds property is ignored.",
                    "type": "string"
                },
                "issueInstanceIds": {
                    "description": "Instance id of issues that need to be filed as bugs. Ignored if filterSet attribute is set that indicates that issues search expression must be used to identify issues to be filed as bugs",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "issueQuery": {
                    "description": "Issue search query expression to select issues for the request. If empty, bug will be filed for all visible issues in application version as per default filterset. Value is ignored if filterSet value is not set.",
                    "type": "string"
                },
                "password": {
                    "description": "Bug tracker password. If not set, bug filing requirements LOGIN action must be called before sending this reques",
                    "type": "string"
                },
                "username": {
                    "description": "Bug tracker username. If not set, bug filing requirements LOGIN action must be called before sending this reques",
                    "type": "string"
                }
            },
            "required": [
                "bugParams"
            ],
            "type": "object"
        },
        "IssueFileBugResponse": {
            "description": "Result of field bug action",
            "properties": {
                "data": {
                    "$ref": "#/definitions/External Bug Info",
                    "description": "Filed bugs",
                    "readOnly": true
                }
            },
            "type": "object"
        },
        "IssueFilterSelector": {
            "description": "DTO object that holds the information about specific issue attribute that can be used for filtering issues list.",
            "properties": {
                "description": {
                    "description": "Selector set's description.",
                    "readOnly": true,
                    "type": "string"
                },
                "displayName": {
                    "description": "Selector set's display name.",
                    "readOnly": true,
                    "type": "string"
                },
                "entityType": {
                    "description": "Type of the issue attriute that can be used for ordering or filtering.",
                    "enum": [
                        "UNDEFINED",
                        "ISSUE",
                        "EXTERNALLIST",
                        "CUSTOMTAG",
                        "HYBRIDTAG",
                        "FOLDER"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "filterSelectorType": {
                    "description": "If value of the selector can be chose from the list of predefined values, or if it can contain any value defined by user.",
                    "enum": [
                        "LIST",
                        "DECIMAL",
                        "DATE",
                        "TEXT"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "guid": {
                    "description": "Selector set's GUID.",
                    "readOnly": true,
                    "type": "string"
                },
                "selectorOptions": {
                    "description": "Selector set's options.",
                    "items": {
                        "$ref": "#/definitions/SelectorOption"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "value": {
                    "description": "Selector set's value that must be sent to backend when this option is selected.",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "description",
                "displayName",
                "entityType",
                "filterSelectorType",
                "guid",
                "selectorOptions",
                "value"
            ],
            "type": "object"
        },
        "IssueFilterSelectorSet": {
            "description": "Composite object that holds information about issue attributes that can be used for issue list filtering and grouping.",
            "properties": {
                "filterBySet": {
                    "description": "List of all possible issues filterring attributes.",
                    "items": {
                        "$ref": "#/definitions/IssueFilterSelector"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "groupBySet": {
                    "description": "List of all possible issues grouping attributes.",
                    "items": {
                        "$ref": "#/definitions/Issue selector"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "required": [
                "filterBySet",
                "groupBySet"
            ],
            "type": "object"
        },
        "Issues Delta Export": {
            "description": "Issues Delta Export DTO",
            "properties": {
                "deltaSinceDate": {
                    "description": "The earliest date the export will search for issues deltas",
                    "format": "date-time",
                    "type": "string"
                },
                "expiration": {
                    "description": "Export file expiration in days",
                    "format": "int32",
                    "type": "integer"
                },
                "fileName": {
                    "description": "Name of export file (optional). If provided, name must be in the format of \"^([a-zA-Z0-9_-]+)$\" with a maximum length of 200 characters. If the filename does not end in '.zip' extension, SSC will append it to the provided name. If no name is provided, SSC will auto-generate the output file name.",
                    "type": "string"
                },
                "finishDate": {
                    "description": "Export finish date",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "Export id",
                    "format": "int64",
                    "type": "integer"
                },
                "messages": {
                    "description": "Messages from the export process",
                    "type": "string"
                },
                "note": {
                    "description": "Note, i.e. comments or info related to data being exported",
                    "type": "string"
                },
                "projectVersionIds": {
                    "description": "List of project version ids",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "requestDate": {
                    "description": "Export request date",
                    "format": "date-time",
                    "type": "string"
                },
                "startDate": {
                    "description": "Export start date",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "description": "Export status",
                    "enum": [
                        "EXPORT_PROCESS_STARTED",
                        "EXPORT_PROCESS_COMPLETED",
                        "EXPORT_PROCESS_FAILED"
                    ],
                    "type": "string"
                },
                "userName": {
                    "description": "User name of user who initiated the export",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IssueSuppressRequest": {
            "description": "Request to suppress issues",
            "properties": {
                "issues": {
                    "description": "Issues to suppress",
                    "items": {
                        "$ref": "#/definitions/EntityStateIdentifier"
                    },
                    "type": "array"
                },
                "suppressed": {
                    "description": "Will suppress the issue",
                    "example": false,
                    "type": "boolean"
                }
            },
            "required": [
                "issues",
                "suppressed"
            ],
            "type": "object"
        },
        "IssueUpdateTagRequest": {
            "description": "Request to update custom tag for the issues",
            "properties": {
                "customTagAudit": {
                    "$ref": "#/definitions/Custom Tag",
                    "description": "Custom tag values that are set for the issue."
                },
                "issues": {
                    "description": "Issues to audit",
                    "items": {
                        "$ref": "#/definitions/EntityStateIdentifier"
                    },
                    "type": "array"
                }
            },
            "required": [
                "customTagAudit",
                "issues"
            ],
            "type": "object"
        },
        "IssueViewTemplate": {
            "description": "Issue view template DTO object.",
            "properties": {
                "dataVersion": {
                    "description": "Issue data version for which template is created.",
                    "format": "int64",
                    "type": "integer"
                },
                "description": {
                    "description": "Template description.",
                    "type": "string"
                },
                "engineType": {
                    "description": "Engine type for which template is created.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of the issue view template.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "metadataId": {
                    "description": "Id of the plugin meta data for which template is created.",
                    "format": "int64",
                    "type": "integer"
                },
                "objectVersion": {
                    "description": "Object version.",
                    "format": "int32",
                    "type": "integer"
                },
                "templateData": {
                    "description": "Actual template JSON data.",
                    "items": {
                        "items": {
                            "$ref": "#/definitions/TemplateItem"
                        },
                        "type": "array"
                    },
                    "type": "array"
                }
            },
            "required": [
                "objectVersion"
            ],
            "type": "object"
        },
        "Job": {
            "description": "Job DTO object",
            "properties": {
                "artifactName": {
                    "description": "Artifact name related to this job",
                    "type": "string"
                },
                "cancellable": {
                    "description": "Set to true if job is cancelable",
                    "example": false,
                    "type": "boolean"
                },
                "cancelRequested": {
                    "description": "Job cancel has been requested",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "createTime": {
                    "description": "Job creation time",
                    "format": "date-time",
                    "type": "string"
                },
                "executionOrder": {
                    "description": "Job execution order",
                    "format": "double",
                    "type": "number"
                },
                "finishTime": {
                    "description": "End time of job",
                    "format": "date-time",
                    "type": "string"
                },
                "jobClass": {
                    "description": "Job class",
                    "type": "string"
                },
                "jobData": {
                    "description": "Job data",
                    "type": "object"
                },
                "jobGroup": {
                    "description": "Job group",
                    "type": "string"
                },
                "jobName": {
                    "description": "identifier of job",
                    "readOnly": true,
                    "type": "string"
                },
                "priority": {
                    "description": "Job priority",
                    "format": "int32",
                    "type": "integer"
                },
                "projectName": {
                    "description": "Application name related to this job",
                    "type": "string"
                },
                "projectVersionId": {
                    "description": "Application version identifier related to this job",
                    "format": "int64",
                    "type": "integer"
                },
                "projectVersionName": {
                    "description": "Application version name related to this job",
                    "type": "string"
                },
                "startTime": {
                    "description": "Start time of job",
                    "format": "date-time",
                    "type": "string"
                },
                "state": {
                    "description": "Job State",
                    "enum": [
                        "PREPARED",
                        "FINISHED",
                        "RUNNING",
                        "DEFERRED",
                        "FAILED",
                        "CANCELLED",
                        "CANCELLING"
                    ],
                    "type": "string"
                },
                "userName": {
                    "description": "Name of user this job was created by",
                    "type": "string"
                }
            },
            "required": [
                "artifactName",
                "cancellable",
                "createTime",
                "executionOrder",
                "finishTime",
                "jobClass",
                "jobData",
                "jobGroup",
                "priority",
                "projectName",
                "projectVersionId",
                "projectVersionName",
                "startTime",
                "state",
                "userName"
            ],
            "type": "object"
        },
        "JobCancelRequest": {
            "description": "Request to cancel jobs",
            "properties": {
                "jobIds": {
                    "description": "List containing single jobName value to cancel",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "jobIds"
            ],
            "type": "object"
        },
        "JobPriorityChangeCategoryWarning": {
            "description": "Job priority change warning",
            "properties": {
                "warningCategory": {
                    "description": "Job priority change warning category.",
                    "readOnly": true,
                    "type": "string"
                },
                "warningList": {
                    "description": "Detailed information about job priority change.",
                    "items": {
                        "$ref": "#/definitions/JobPriorityChangeInfo"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "required": [
                "warningCategory",
                "warningList"
            ],
            "type": "object"
        },
        "JobPriorityChangeInfo": {
            "description": "Job priority change information",
            "properties": {
                "count": {
                    "description": "Number of the warnings of for the specific job class.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "jobClassName": {
                    "description": "Job class name.",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "count",
                "jobClassName"
            ],
            "type": "object"
        },
        "LDAP entity": {
            "description": "An LDAP entity like user, group or organization",
            "properties": {
                "distinguishedName": {
                    "description": "Distinguished name of LDAP entity",
                    "type": "string"
                },
                "email": {
                    "description": "Email of LDAP entity",
                    "readOnly": true,
                    "type": "string"
                },
                "firstName": {
                    "description": "First name of LDAP entity",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "LDAP entity identifier",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastName": {
                    "description": "Last name of LDAP entity",
                    "readOnly": true,
                    "type": "string"
                },
                "ldapType": {
                    "description": "Type of LDAP entity.",
                    "enum": [
                        "NONE",
                        "GROUP",
                        "USER",
                        "ORG_UNIT"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "LDAP entity name",
                    "readOnly": true,
                    "type": "string"
                },
                "roles": {
                    "description": "List of roles pertaining to this LDAP entity",
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                },
                "userPhoto": {
                    "$ref": "#/definitions/User photo",
                    "description": "Photo object if LDAP entity is user",
                    "readOnly": true
                }
            },
            "required": [
                "distinguishedName",
                "ldapType",
                "roles"
            ],
            "type": "object"
        },
        "LdapRefreshResponse": {
            "description": "Result of refreshing ldap server",
            "properties": {
                "data": {
                    "$ref": "#/definitions/Job",
                    "description": "LDAP refresh job information",
                    "readOnly": true
                }
            },
            "type": "object"
        },
        "LdapServerDto": {
            "properties": {
                "attributeDistinguishedName": {
                    "type": "string"
                },
                "attributeEmail": {
                    "type": "string"
                },
                "attributeFirstName": {
                    "type": "string"
                },
                "attributeGroupname": {
                    "type": "string"
                },
                "attributeLastName": {
                    "type": "string"
                },
                "attributeMember": {
                    "type": "string"
                },
                "attributeMemberOf": {
                    "type": "string"
                },
                "attributeObjectClass": {
                    "type": "string"
                },
                "attributeObjectSid": {
                    "type": "string"
                },
                "attributeOrgunitName": {
                    "type": "string"
                },
                "attributePassword": {
                    "type": "string"
                },
                "attributeThumbnailMimeDefault": {
                    "type": "string"
                },
                "attributeThumbnailPhoto": {
                    "type": "string"
                },
                "attributeUserName": {
                    "type": "string"
                },
                "authenticatorType": {
                    "enum": [
                        "BIND_AUTHENTICATOR",
                        "PASSWORD_COMPARISON_AUTHENTICATOR"
                    ],
                    "type": "string"
                },
                "baseDn": {
                    "description": "Distinguished name (DN) of root (base) LDAP entity SSC has access to. If value is set to not empty entity's DN, SSC has access only to this entity and all its children. If value of this attribute is an empty string, SSC has access to whole LDAP entities tree",
                    "type": "string"
                },
                "baseObjectSid": {
                    "type": "string"
                },
                "cacheEnabled": {
                    "example": false,
                    "type": "boolean"
                },
                "cacheExecutorPoolSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "cacheExecutorPoolSizeMax": {
                    "format": "int32",
                    "type": "integer"
                },
                "cacheMaxThreadsPerCache": {
                    "format": "int32",
                    "type": "integer"
                },
                "checkSslHostname": {
                    "example": false,
                    "type": "boolean"
                },
                "checkSslTrust": {
                    "example": false,
                    "type": "boolean"
                },
                "classGroup": {
                    "type": "string"
                },
                "classOrgunit": {
                    "type": "string"
                },
                "classUser": {
                    "type": "string"
                },
                "defaultServer": {
                    "description": "Boolean flag that marks LDAP server as default. Default means the server which configuration was imported from ldap.properties legacy configuration file",
                    "example": false,
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Flag that marks server as enabled. All enabled servers are used by SSC. Server can be temporary disabled if it is temporary down.",
                    "example": false,
                    "type": "boolean"
                },
                "enableUserStatusMapping": {
                    "description": "Enable mapping of user status flags (e.g. disabled/locked) based on attributes of ldap user entries. Cannot be enabled if ldapServerType is 'OTHER'.",
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "LDAP Server id",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "ignorePartialResultException": {
                    "example": false,
                    "type": "boolean"
                },
                "ldapServerType": {
                    "description": "Specify the type of LDAP server implementation (if known). It can be useful for certain operations (e.g. for setting user status flags)",
                    "enum": [
                        "OTHER",
                        "ACTIVE_DIRECTORY"
                    ],
                    "type": "string"
                },
                "nestedGroupsEnabled": {
                    "example": false,
                    "type": "boolean"
                },
                "objectVersion": {
                    "description": "LDAP server entity version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "pageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "pagingEnabled": {
                    "example": false,
                    "type": "boolean"
                },
                "passwordEncoderType": {
                    "enum": [
                        "NOT_SET",
                        "LDAP_SHA_PASSWORD_ENCODER",
                        "MD4_PASSWORD_ENCODER",
                        "MD5_PASSWORD_ENCODER",
                        "SHA_PASSWORD_ENCODER"
                    ],
                    "type": "string"
                },
                "referralsProcessingStrategy": {
                    "enum": [
                        "ignore",
                        "follow"
                    ],
                    "type": "string"
                },
                "saveWithoutValidation": {
                    "type": "boolean"
                },
                "searchDns": {
                    "type": "string"
                },
                "serverName": {
                    "description": "Name of the LDAP server to distinguish it from other servers",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userDn": {
                    "type": "string"
                },
                "userPassword": {
                    "type": "string"
                },
                "userPhotoEnabled": {
                    "example": false,
                    "type": "boolean"
                },
                "validationIdleTime": {
                    "format": "int32",
                    "type": "integer"
                },
                "validationTimeLimit": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "attributeDistinguishedName",
                "attributeEmail",
                "attributeFirstName",
                "attributeGroupname",
                "attributeLastName",
                "attributeMember",
                "attributeMemberOf",
                "attributeObjectClass",
                "attributeOrgunitName",
                "attributePassword",
                "attributeUserName",
                "authenticatorType",
                "baseDn",
                "cacheEnabled",
                "cacheExecutorPoolSize",
                "cacheExecutorPoolSizeMax",
                "cacheMaxThreadsPerCache",
                "checkSslHostname",
                "checkSslTrust",
                "classGroup",
                "classOrgunit",
                "classUser",
                "defaultServer",
                "enabled",
                "id",
                "ignorePartialResultException",
                "nestedGroupsEnabled",
                "objectVersion",
                "pageSize",
                "pagingEnabled",
                "passwordEncoderType",
                "referralsProcessingStrategy",
                "serverName",
                "url",
                "userDn",
                "userPassword",
                "userPhotoEnabled",
                "validationIdleTime",
                "validationTimeLimit"
            ],
            "type": "object"
        },
        "LdapServerTestRequest": {
            "description": "Request to test ldap server",
            "properties": {
                "ldapConfig": {
                    "$ref": "#/definitions/LdapServerDto",
                    "description": "LDAP server information"
                }
            },
            "required": [
                "ldapConfig"
            ],
            "type": "object"
        },
        "License": {
            "properties": {
                "capabilities": {
                    "description": "List of all license capabilities",
                    "items": {
                        "$ref": "#/definitions/License capability"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "creationDate": {
                    "description": "Date when license was created",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "description": "License description",
                    "readOnly": true,
                    "type": "string"
                },
                "expirationDate": {
                    "description": "Date when license is going to be expired",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "ownerName": {
                    "description": "Name of the license owner",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "License capability": {
            "description": "License capability",
            "properties": {
                "expirationDate": {
                    "description": "License capability expiration date",
                    "format": "date-time",
                    "type": "string"
                },
                "key": {
                    "description": "License capability identifier",
                    "type": "string"
                },
                "value": {
                    "description": "License capability value",
                    "type": "string"
                }
            },
            "required": [
                "expirationDate",
                "key",
                "value"
            ],
            "type": "object"
        },
        "Local Group": {
            "description": "Local Group DTO object. Note: For externally managed groups, all fields except for roles are readonly.",
            "properties": {
                "externallyManaged": {
                    "description": "If Local Group is managed by an external service",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "id": {
                    "description": "ID required when referencing an existing Local Group",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "Local Group's name. Note: value is readonly for externally managed groups.",
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Local Group version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "roles": {
                    "description": "List of Roles assigned to a Local Group",
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "Local User": {
            "description": "Local User DTO object. Note: For externally managed users, all fields except for roles are readonly.",
            "properties": {
                "adminPassword": {
                    "type": "string"
                },
                "clearPassword": {
                    "type": "string"
                },
                "dateFrozen": {
                    "description": "Date user's account was frozen",
                    "format": "date-time",
                    "type": "string"
                },
                "email": {
                    "description": "User's email address",
                    "type": "string"
                },
                "externallyManaged": {
                    "description": "If user is managed by an external service",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "failedLoginAttempts": {
                    "description": "Number of failed login attempts",
                    "format": "int32",
                    "type": "integer"
                },
                "firstName": {
                    "description": "User's first name",
                    "type": "string"
                },
                "id": {
                    "description": "ID required when referencing an existing Local User",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastName": {
                    "description": "User's last name",
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Local User version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "passwordNeverExpire": {
                    "description": "True if user's password never expires",
                    "example": false,
                    "type": "boolean"
                },
                "requirePasswordChange": {
                    "description": "Is user required to change password on first login?",
                    "example": false,
                    "type": "boolean"
                },
                "roles": {
                    "description": "List of Roles assigned to user",
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                },
                "suspended": {
                    "description": "True if user's account is locked",
                    "example": false,
                    "type": "boolean"
                },
                "userName": {
                    "description": "User's username",
                    "type": "string"
                },
                "userType": {
                    "description": "User type",
                    "enum": [
                        "LOCAL",
                        "SSO"
                    ],
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "failedLoginAttempts",
                "userName"
            ],
            "type": "object"
        },
        "Obsolete policy": {
            "description": "Audit Assistant obsolete prediction policy",
            "properties": {
                "defaultPolicy": {
                    "description": "True if this obsolete policy is also configured as system default policy",
                    "example": false,
                    "type": "boolean"
                },
                "obsoleteAvCount": {
                    "description": "Count of application versions where this obsolete policy has been found",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "policyName": {
                    "description": "Obsolete prediction policy name found in application version",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OpenSourceIssue": {
            "description": "OpenSourceIssue DTO object.",
            "properties": {
                "category": {
                    "description": "Category - The category for this issue.",
                    "type": "string"
                },
                "component": {
                    "description": "Component - usually in the format <group>/<artifact>",
                    "type": "string"
                },
                "controllable": {
                    "description": "Does the application send user input to the vulnerable open source code?",
                    "example": false,
                    "type": "boolean"
                },
                "cve": {
                    "description": "CVE ID in the format CVE-xxxxx-xxxx",
                    "type": "string"
                },
                "cveUrl": {
                    "description": "CVE URL - URL to get more information about this CVE.",
                    "type": "string"
                },
                "cwe": {
                    "description": "CWE ID in the format CWE-xxxx",
                    "type": "string"
                },
                "cweUrl": {
                    "description": "CWE URL - URL to get more information about the related CWE",
                    "type": "string"
                },
                "engineType": {
                    "description": "Engine type",
                    "type": "string"
                },
                "filename": {
                    "description": "Filename of the component where the CVE exists",
                    "type": "string"
                },
                "hidden": {
                    "description": "Is this issue hidden?",
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "Application version issue identifier",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "invoked": {
                    "description": "Does the application call the vulnerable open source code?",
                    "example": false,
                    "type": "boolean"
                },
                "issueInstanceId": {
                    "description": "Issue instance identifier",
                    "type": "string"
                },
                "license": {
                    "description": "Component license",
                    "type": "string"
                },
                "priority": {
                    "description": "Priority",
                    "type": "string"
                },
                "projectVersionId": {
                    "description": "Application version identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "removed": {
                    "description": "Is this issue removed?",
                    "example": false,
                    "type": "boolean"
                },
                "suppressed": {
                    "description": "Is this issue suppressed?",
                    "example": false,
                    "type": "boolean"
                },
                "type": {
                    "description": "Component type",
                    "type": "string"
                },
                "upgradeToVersion": {
                    "description": "Component version to upgrade to",
                    "type": "string"
                },
                "version": {
                    "description": "Component version containing the CVE vulnerability",
                    "type": "string"
                }
            },
            "required": [
                "category",
                "component",
                "controllable",
                "cve",
                "cveUrl",
                "cwe",
                "cweUrl",
                "engineType",
                "filename",
                "invoked",
                "issueInstanceId",
                "license",
                "priority",
                "projectVersionId",
                "type",
                "upgradeToVersion",
                "version"
            ],
            "type": "object"
        },
        "PasswordStrengthCheckRequest": {
            "description": "Password strength check request",
            "properties": {
                "extraDictionary": {
                    "description": "Get additional words to add to dictionary. If null, current user data will be added (for example: username, first name, last name, email).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "password": {
                    "description": "Get password or its part from input",
                    "type": "string"
                }
            },
            "required": [
                "password"
            ],
            "type": "object"
        },
        "PasswordStrengthCheckResponse": {
            "description": "Result of checking strength of password",
            "properties": {
                "score": {
                    "description": "Password strength score",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Performance Indicator History": {
            "description": "Performance Indicator History DTO object.",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "ID required when referencing an existing Performance Indicator History object",
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "range": {
                    "description": "Range of values",
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "value": {
                    "description": "Required if referencing an existing Performance Indicator History  object",
                    "format": "float",
                    "type": "number"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "PerformanceIndicator": {
            "description": "Performance indicators enable you to combine variables into metrics that are\nnormalized across application version boundaries",
            "properties": {
                "description": {
                    "type": "string"
                },
                "equation": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "inUse": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Performance Indicator version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "publishVersion": {
                    "format": "int32",
                    "type": "integer"
                },
                "range": {
                    "enum": [
                        "Integer",
                        "Percent"
                    ],
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "SYSTEM_DEFINED",
                        "USER_DEFINED"
                    ],
                    "type": "string"
                },
                "variables": {
                    "items": {
                        "$ref": "#/definitions/Variable"
                    },
                    "type": "array"
                }
            },
            "required": [
                "equation",
                "name",
                "range"
            ],
            "type": "object"
        },
        "Permission": {
            "description": "A permission in the server",
            "properties": {
                "assignByDefault": {
                    "type": "boolean"
                },
                "dependsOnPermission": {
                    "description": "Set of permissions this permission requires",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "description": {
                    "description": "Permission description",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "Permission id",
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "description": "Permission name",
                    "readOnly": true,
                    "type": "string"
                },
                "permittedActions": {
                    "description": "Actions this permission is allowed to perform",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "required": [
                "dependsOnPermission",
                "description",
                "name",
                "permittedActions"
            ],
            "type": "object"
        },
        "Plugin Localization": {
            "additionalProperties": {
                "type": "object"
            },
            "type": "object"
        },
        "Plugin Meta Data": {
            "description": "plugin meta data holds attributes of the plugins installed in the application.",
            "properties": {
                "apiVersion": {
                    "description": "Version string of the SSC plugin api used to develop the plugin",
                    "type": "string"
                },
                "dataVersion": {
                    "description": "An integer used to tag the set of issue attributes provided by this plugin.",
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "description": "Plugin description",
                    "readOnly": true,
                    "type": "string"
                },
                "engineType": {
                    "description": "Name of the scan engine supported by the plugin. Value is defined for parser plugins only",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "Plugin unique identifier",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastUsedOfKind": {
                    "description": "Tracks whether this plugin instance was the most recently used of its kind",
                    "example": false,
                    "type": "boolean"
                },
                "pluginConfiguration": {
                    "description": "Additional configuration properties used by the plugin",
                    "items": {
                        "$ref": "#/definitions/PluginConfiguration"
                    },
                    "type": "array"
                },
                "pluginId": {
                    "description": "Identifier of the plugin, usually a fully-qualified classname. Non-unique when multiple versions of same plugin exist",
                    "type": "string"
                },
                "pluginName": {
                    "description": "A string name for the plugin",
                    "type": "string"
                },
                "pluginState": {
                    "description": "State of the plugin instance",
                    "enum": [
                        "STOPPED",
                        "STARTING",
                        "STARTED",
                        "STOPPING",
                        "FAILED_TO_START",
                        "FAILED_TO_STOP",
                        "UNKNOWN"
                    ],
                    "type": "string"
                },
                "pluginType": {
                    "description": "Denotes functionality of the plugin instance, such as scan parsing, bugtracker integration.",
                    "enum": [
                        "SCAN_PARSER",
                        "BUG_TRACKER",
                        "LEGACY_BUG_TRACKER"
                    ],
                    "type": "string"
                },
                "pluginVersion": {
                    "description": "A version string of the implementation code of the plugin",
                    "type": "string"
                },
                "supportedEngineVersions": {
                    "description": "Versions of the scan engine results supported by the plugin. Value is defined for parser plugins only",
                    "readOnly": true,
                    "type": "string"
                },
                "systemInstalled": {
                    "description": "whether the plugin instance was installed by adding the jar to a special system folder",
                    "example": false,
                    "type": "boolean"
                },
                "vendorName": {
                    "description": "Name of the company / organization that developed the plugin",
                    "readOnly": true,
                    "type": "string"
                },
                "vendorUrl": {
                    "description": "Plugin vendor's web site URL",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "apiVersion",
                "dataVersion",
                "lastUsedOfKind",
                "pluginConfiguration",
                "pluginId",
                "pluginName",
                "pluginState",
                "pluginType",
                "pluginVersion",
                "systemInstalled"
            ],
            "type": "object"
        },
        "PluginConfiguration": {
            "description": "additional configuration needed for a plugin.",
            "properties": {
                "parameterName": {
                    "type": "string"
                },
                "parameterType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PluginDisableRequest": {
            "description": "Request to disable plugin",
            "properties": {
                "pluginIds": {
                    "description": "List containing single plugin ID to disable",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "pluginIds"
            ],
            "type": "object"
        },
        "PluginEnableRequest": {
            "description": "Request to enable plugin",
            "properties": {
                "pluginIds": {
                    "description": "List containing single plugin ID to enable",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "pluginIds"
            ],
            "type": "object"
        },
        "Policy replacement": {
            "description": "Audit Assistant prediction policy replacement mapping",
            "properties": {
                "fromPolicy": {
                    "type": "string"
                },
                "toPolicy": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PrioritizeScanCentralJobRequest": {
            "description": "Request for prioritizing ScanCentral job",
            "properties": {
                "jobToken": {
                    "description": "The guid of the ScanCentral job to prioritize",
                    "type": "string"
                }
            },
            "required": [
                "jobToken"
            ],
            "type": "object"
        },
        "Project": {
            "description": "An application on the server",
            "properties": {
                "createdBy": {
                    "description": "User that created this application",
                    "type": "string"
                },
                "creationDate": {
                    "description": "Date created",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "id": {
                    "description": "Id",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "issueTemplateId": {
                    "description": "Id of the Issue Template used",
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                }
            },
            "required": [
                "createdBy",
                "creationDate",
                "issueTemplateId",
                "name"
            ],
            "type": "object"
        },
        "Project Version": {
            "description": "A version of an application on the server",
            "properties": {
                "active": {
                    "description": "True if this version is active",
                    "example": false,
                    "type": "boolean"
                },
                "assignedIssuesCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "attachmentsOutOfDate": {
                    "type": "boolean"
                },
                "autoPredict": {
                    "description": "true if auto-prediction is enabled for this application version; false otherwise. This property modification is protected by AUDITASSISTANT_MANAGE permission.",
                    "example": false,
                    "type": "boolean"
                },
                "bugTrackerEnabled": {
                    "description": "true if the bug tracker plugin assigned to the application version is currently enabled in the system",
                    "example": false,
                    "type": "boolean"
                },
                "bugTrackerPluginId": {
                    "description": "identifier of the bug tracker plugin (if any) assigned to this application version",
                    "type": "string"
                },
                "committed": {
                    "description": "True if this version is committed and ready to be used",
                    "example": false,
                    "type": "boolean"
                },
                "createdBy": {
                    "description": "User that created this version",
                    "type": "string"
                },
                "creationDate": {
                    "description": "Date this version was created",
                    "format": "date-time",
                    "type": "string"
                },
                "currentState": {
                    "$ref": "#/definitions/Project Version State"
                },
                "customTagValuesAutoApply": {
                    "description": "true if custom tag values auto-apply is enabled for this application version; false otherwise. This property modification is protected by AUDITASSISTANT_MANAGE permission.",
                    "example": false,
                    "type": "boolean"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "id": {
                    "description": "Id",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "issueTemplateId": {
                    "description": "Id of the Issue Template used by this version",
                    "type": "string"
                },
                "issueTemplateModifiedTime": {
                    "description": "Last time the Issue Template was modified",
                    "format": "int64",
                    "type": "integer"
                },
                "issueTemplateName": {
                    "description": "Name of the Issue Template used by this version",
                    "type": "string"
                },
                "latestScanId": {
                    "description": "id of the latest scan uploaded to application version",
                    "format": "int64",
                    "type": "integer"
                },
                "loadProperties": {
                    "type": "string"
                },
                "masterAttrGuid": {
                    "description": "Guid of the primary custom tag for this version",
                    "type": "string"
                },
                "migrationVersion": {
                    "format": "float",
                    "type": "number"
                },
                "mode": {
                    "enum": [
                        "NONE",
                        "ASSESSMENT",
                        "BASIC",
                        "FULL"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "obfuscatedId": {
                    "type": "string"
                },
                "predictionPolicy": {
                    "description": "Name of the policy to be used for predictions for this application version. Modification of this property is protected by AUDITASSISTANT_MANAGE permission.",
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "refreshRequired": {
                    "type": "boolean"
                },
                "securityGroup": {
                    "type": "string"
                },
                "serverVersion": {
                    "description": "Server version this version's data supports",
                    "format": "float",
                    "type": "number"
                },
                "siteId": {
                    "type": "string"
                },
                "snapshotOutOfDate": {
                    "description": "True if the most recent snapshot is not accurate",
                    "example": false,
                    "type": "boolean"
                },
                "sourceBasePath": {
                    "type": "string"
                },
                "staleIssueTemplate": {
                    "description": "True if this version's Issue Template has changed or been modified",
                    "example": false,
                    "type": "boolean"
                },
                "status": {
                    "enum": [
                        "ACTIVE",
                        "DELETING",
                        "ARCHIVED",
                        "COPYING_ISSUES"
                    ],
                    "type": "string"
                },
                "tracesOutOfDate": {
                    "type": "boolean"
                }
            },
            "required": [
                "active",
                "bugTrackerEnabled",
                "bugTrackerPluginId",
                "committed",
                "createdBy",
                "creationDate",
                "description",
                "issueTemplateId",
                "issueTemplateModifiedTime",
                "issueTemplateName",
                "latestScanId",
                "masterAttrGuid",
                "name",
                "serverVersion",
                "snapshotOutOfDate",
                "staleIssueTemplate"
            ],
            "type": "object"
        },
        "Project version bug tracker": {
            "description": "Object containing application version and bug tracker related data",
            "properties": {
                "assignedBugtrackerShortNameIfKnown": {
                    "description": "the short display name of the bug tracker. (will be null if no bugtracker is assigned or if there is no currently installed plugin matching the assigned pluginId.)",
                    "type": "string"
                },
                "assignedPluginId": {
                    "description": "identifier of the bug tracker plugin assigned to the application version. (Bug tracker integration will be active only if the plugin is also enabled in the system.)",
                    "type": "string"
                },
                "bugStateManagementConfig": {
                    "$ref": "#/definitions/BugStateManagementCfg",
                    "description": "Bug state management configuration"
                },
                "bugTracker": {
                    "$ref": "#/definitions/Bug Tracker",
                    "description": "Bug tracker (note that this field will be null if the assigned bug tracker is not enabled in the SSC plugin framework.)"
                },
                "bugtrackerIsAssigned": {
                    "description": "indicates whether a bug tracker is assigned to the application version",
                    "example": false,
                    "type": "boolean"
                },
                "clearAppVersionBugs": {
                    "type": "boolean"
                }
            },
            "required": [
                "assignedBugtrackerShortNameIfKnown",
                "assignedPluginId",
                "bugStateManagementConfig",
                "bugTracker",
                "bugtrackerIsAssigned"
            ],
            "type": "object"
        },
        "Project version issue": {
            "description": "Application version issue DTO object",
            "properties": {
                "_embed": {
                    "$ref": "#/definitions/IssueEmbedded",
                    "description": "Issue embedded attributes"
                },
                "analyzer": {
                    "description": "Analyzer",
                    "type": "string"
                },
                "audited": {
                    "description": "Flag is set for issues that has been audited and primary tag value was set for this issue.",
                    "example": false,
                    "type": "boolean"
                },
                "bugURL": {
                    "description": "Bug url",
                    "type": "string"
                },
                "confidence": {
                    "description": "Issue confidence",
                    "format": "float",
                    "type": "number"
                },
                "correlatedIssueIdsAsSource": {
                    "description": "Correlated issues where this issue is the source of the correlation",
                    "items": {
                        "$ref": "#/definitions/Issue identifier"
                    },
                    "type": "array"
                },
                "correlatedIssueIdsAsTarget": {
                    "description": "Correlated issues where this issue is the target of the correlation",
                    "items": {
                        "$ref": "#/definitions/Issue identifier"
                    },
                    "type": "array"
                },
                "displayEngineType": {
                    "description": "Display name for engine type",
                    "type": "string"
                },
                "engineCategory": {
                    "description": "Engine category",
                    "enum": [
                        "STATIC",
                        "DYNAMIC"
                    ],
                    "type": "string"
                },
                "enginePriority": {
                    "description": "Issue priority set by analyser",
                    "type": "string"
                },
                "engineType": {
                    "description": "Engine type",
                    "type": "string"
                },
                "externalBugId": {
                    "description": "Identifying information for the bug in the external bug tracking system. The actual format depends on the bug tracker plugin which filed the bug.",
                    "type": "string"
                },
                "folderGuid": {
                    "description": "Issue folder globally unique identifier",
                    "type": "string"
                },
                "folderId": {
                    "description": "Deprecated - Issue folder identifier.  This may be incorrect or invalid.  Please use folderGuid instead.",
                    "format": "int64",
                    "type": "integer"
                },
                "foundDate": {
                    "description": "Date when issue found",
                    "format": "date-time",
                    "type": "string"
                },
                "friority": {
                    "description": "Issue priority set by analyser or overridden by auditor",
                    "type": "string"
                },
                "fullFileName": {
                    "description": "Full file name where issue found",
                    "type": "string"
                },
                "hasAttachments": {
                    "description": "Set to true if issue has attachments",
                    "example": false,
                    "type": "boolean"
                },
                "hasComments": {
                    "description": "Set to true if issue has audit comments",
                    "example": false,
                    "type": "boolean"
                },
                "hasCorrelatedIssues": {
                    "description": "Set to true if issue has other correlated issues",
                    "example": false,
                    "type": "boolean"
                },
                "hidden": {
                    "description": "Set to true if issue is hidden",
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "Application version issue identifier",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "impact": {
                    "description": "Issue impact",
                    "format": "float",
                    "type": "number"
                },
                "issueInstanceId": {
                    "description": "Issue instance identifier",
                    "type": "string"
                },
                "issueName": {
                    "description": "Issue name",
                    "type": "string"
                },
                "issueStatus": {
                    "description": "Flag represents issue review status and can have 3 types of values: Unreviewed, Under Review, Reviewed.",
                    "type": "string"
                },
                "kingdom": {
                    "description": "Kingdom",
                    "type": "string"
                },
                "lastScanId": {
                    "description": "ID of the latest scan that found the issue",
                    "format": "int64",
                    "type": "integer"
                },
                "likelihood": {
                    "description": "Likelihood of issue",
                    "format": "float",
                    "type": "number"
                },
                "lineNumber": {
                    "description": "Line number where issue found",
                    "format": "int32",
                    "type": "integer"
                },
                "primaryLocation": {
                    "description": "Issue primary location",
                    "type": "string"
                },
                "primaryRuleGuid": {
                    "description": "Primary rule global unique identifier",
                    "type": "string"
                },
                "primaryTag": {
                    "description": "Issue primary tag",
                    "type": "string"
                },
                "primaryTagValueAutoApplied": {
                    "description": "Flag equals true if value of custom tag was applied automatically",
                    "example": false,
                    "type": "boolean"
                },
                "projectName": {
                    "description": "Application name",
                    "type": "string"
                },
                "projectVersionId": {
                    "description": "Application version identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "projectVersionName": {
                    "description": "Application version name",
                    "type": "string"
                },
                "removed": {
                    "description": "Set to true if issue is suppressed",
                    "example": false,
                    "type": "boolean"
                },
                "removedDate": {
                    "description": "Date when issue removed",
                    "format": "date-time",
                    "type": "string"
                },
                "reviewed": {
                    "description": "Issue reviewer",
                    "type": "string"
                },
                "revision": {
                    "description": "Application version revision",
                    "format": "int32",
                    "type": "integer"
                },
                "scanStatus": {
                    "description": "Scan status",
                    "type": "string"
                },
                "severity": {
                    "description": "Issue severity",
                    "format": "float",
                    "type": "number"
                },
                "suppressed": {
                    "description": "Set to true if issue is suppressed",
                    "example": false,
                    "type": "boolean"
                }
            },
            "required": [
                "analyzer",
                "bugURL",
                "confidence",
                "displayEngineType",
                "engineCategory",
                "enginePriority",
                "engineType",
                "externalBugId",
                "folderGuid",
                "folderId",
                "foundDate",
                "friority",
                "fullFileName",
                "hasAttachments",
                "hasCorrelatedIssues",
                "hidden",
                "impact",
                "issueInstanceId",
                "issueName",
                "kingdom",
                "likelihood",
                "lineNumber",
                "primaryLocation",
                "primaryRuleGuid",
                "primaryTag",
                "projectName",
                "projectVersionId",
                "projectVersionName",
                "removed",
                "removedDate",
                "reviewed",
                "revision",
                "scanStatus",
                "severity",
                "suppressed"
            ],
            "type": "object"
        },
        "Project version issue details": {
            "description": "Application version issue details DTO object",
            "properties": {
                "accuracy": {
                    "description": "Vulnerability accuracy",
                    "format": "float",
                    "readOnly": true,
                    "type": "number"
                },
                "analyzer": {
                    "description": "Analyzer",
                    "type": "string"
                },
                "appSecTrainingUrl": {
                    "description": "A link to access application security training for this issue (available only if the SSC administrator has enabled it)",
                    "readOnly": true,
                    "type": "string"
                },
                "assignedUser": {
                    "$ref": "#/definitions/AssignedUser",
                    "description": "User assigned to issue"
                },
                "attackPayload": {
                    "description": "Attack payload",
                    "type": "string"
                },
                "attackType": {
                    "description": "Attack type",
                    "enum": [
                        "URL",
                        "REQUEST_HEADER",
                        "REQUEST_COOKIE",
                        "PARAMETER",
                        "MULTIPLE"
                    ],
                    "type": "string"
                },
                "audited": {
                    "description": "Attribute is set to true if issue is audited (primary tag values is set for this issue)",
                    "example": false,
                    "type": "boolean"
                },
                "brief": {
                    "description": "Issue brief",
                    "type": "string"
                },
                "className": {
                    "description": "Name of class where the vulnerability has been found",
                    "readOnly": true,
                    "type": "string"
                },
                "confidence": {
                    "description": "Issue confidence",
                    "format": "float",
                    "type": "number"
                },
                "cookie": {
                    "description": "Cookie",
                    "type": "string"
                },
                "customAttributes": {
                    "description": "All the additional custom attributes defined for the issue by parser plugin",
                    "readOnly": true,
                    "type": "object"
                },
                "customTagValues": {
                    "description": "Custom tag values",
                    "items": {
                        "$ref": "#/definitions/Custom Tag"
                    },
                    "type": "array"
                },
                "dataVersion": {
                    "description": "Version of the issue data. This attribute is initialized only for issues parsed by 3rd party parsers and is not set for the issues parsed by standard parsers included in SSC installation.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "detail": {
                    "description": "Issue detail",
                    "type": "string"
                },
                "displayEngineType": {
                    "description": "Display engine type",
                    "type": "string"
                },
                "downloadRequest": {
                    "description": "Request contains binary or large data",
                    "example": false,
                    "type": "boolean"
                },
                "downloadResponse": {
                    "description": "Response contains binary or large data\"",
                    "example": false,
                    "type": "boolean"
                },
                "engineCategory": {
                    "description": "Engine category",
                    "enum": [
                        "STATIC",
                        "DYNAMIC"
                    ],
                    "type": "string"
                },
                "enginePriority": {
                    "description": "Issue priority originally set by analyser",
                    "type": "string"
                },
                "engineType": {
                    "description": "Engine type",
                    "type": "string"
                },
                "foundDate": {
                    "description": "Issue found date",
                    "format": "date-time",
                    "type": "string"
                },
                "friority": {
                    "description": "Issue priority set by analyser or overridden by auditor",
                    "type": "string"
                },
                "fullFileName": {
                    "description": "Full file name where issue found",
                    "type": "string"
                },
                "functionName": {
                    "description": "Name of function located in the file where the vulnerability has been found",
                    "readOnly": true,
                    "type": "string"
                },
                "hasViewTemplate": {
                    "description": "Flag that indicates if there is a view template that should be used to display issue details on UI.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "hidden": {
                    "description": "Set to true if issue is hidden",
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "Identifier",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "impact": {
                    "description": "Issue impact",
                    "format": "float",
                    "type": "number"
                },
                "issueInstanceId": {
                    "description": "Issue instance identifier",
                    "type": "string"
                },
                "issueName": {
                    "description": "Name of the issue category",
                    "type": "string"
                },
                "issueState": {
                    "description": "Flag represents issue state and says if issue is not an issue or open issue. Rule to calculate value of thi flag is defined in issue template.",
                    "type": "string"
                },
                "issueStatus": {
                    "description": "Flag represents issue review status",
                    "enum": [
                        "Unreviewed",
                        "Under Review",
                        "Reviewed"
                    ],
                    "type": "string"
                },
                "kingdom": {
                    "description": "Issue kingdom",
                    "type": "string"
                },
                "lastScanId": {
                    "description": "ID of the latest scan that found the issue",
                    "format": "int64",
                    "type": "integer"
                },
                "likelihood": {
                    "description": "Issue likelihood",
                    "format": "float",
                    "type": "number"
                },
                "lineNumber": {
                    "description": "Line number in the file where the vulnerability has been found",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "mappedCategory": {
                    "description": "Name of the Fortify category of the vulnerability",
                    "readOnly": true,
                    "type": "string"
                },
                "method": {
                    "description": "Method where issue found",
                    "type": "string"
                },
                "minVirtualCallConfidence": {
                    "description": "Confidence level which estimates that vulnerability found in virtual (overridden) function will be executed by tainted source",
                    "format": "float",
                    "readOnly": true,
                    "type": "number"
                },
                "packageName": {
                    "description": "Name of package where the vulnerability has been found",
                    "readOnly": true,
                    "type": "string"
                },
                "primaryRuleGuid": {
                    "description": "Primary rule global unique identifier",
                    "type": "string"
                },
                "primaryTag": {
                    "$ref": "#/definitions/Issue Primary Tag",
                    "description": "Identifier, name and value of the custom tag that is selected as a primary tag for the application version the issue belongs to."
                },
                "probability": {
                    "description": "Vulnerability probability",
                    "format": "float",
                    "readOnly": true,
                    "type": "number"
                },
                "projectVersionId": {
                    "description": "Application version identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "recommendation": {
                    "description": "Issue recommendation",
                    "type": "string"
                },
                "references": {
                    "description": "References",
                    "type": "string"
                },
                "remediationConstant": {
                    "description": "Level of complexity to fix this vulnerability",
                    "format": "float",
                    "readOnly": true,
                    "type": "number"
                },
                "removedDate": {
                    "description": "Issue removed date",
                    "format": "date-time",
                    "type": "string"
                },
                "requestBody": {
                    "description": "Request body",
                    "type": "string"
                },
                "requestHeader": {
                    "description": "Request header",
                    "type": "string"
                },
                "requestParameter": {
                    "description": "Request parameter",
                    "type": "string"
                },
                "requestTriggers": {
                    "description": "Triggers in the request",
                    "items": {
                        "$ref": "#/definitions/Trigger"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "response": {
                    "description": "Response",
                    "type": "string"
                },
                "responseHeader": {
                    "description": "Response header",
                    "type": "string"
                },
                "responseTriggers": {
                    "description": "Triggers in the response",
                    "items": {
                        "$ref": "#/definitions/Trigger"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "revision": {
                    "description": "Revision number",
                    "format": "int32",
                    "type": "integer"
                },
                "scanStatus": {
                    "description": "Scan status",
                    "type": "string"
                },
                "severity": {
                    "description": "Issue severity",
                    "format": "float",
                    "type": "number"
                },
                "shortFileName": {
                    "description": "Short file name where issue found",
                    "type": "string"
                },
                "sink": {
                    "description": "Taint sink name",
                    "readOnly": true,
                    "type": "string"
                },
                "sinkContext": {
                    "description": "Name of the context that contains vulnerability sink",
                    "readOnly": true,
                    "type": "string"
                },
                "source": {
                    "description": "Name of the a program point where tainted data enter the program",
                    "readOnly": true,
                    "type": "string"
                },
                "sourceContext": {
                    "description": "Name of the context that contains vulnerability sources",
                    "readOnly": true,
                    "type": "string"
                },
                "sourceFile": {
                    "description": "File name where vulnerability source is located.",
                    "readOnly": true,
                    "type": "string"
                },
                "sourceLine": {
                    "description": "Line number in the source file where vulnerability source is located",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "suppressed": {
                    "description": "Set to true if issue is suppressed",
                    "example": false,
                    "type": "boolean"
                },
                "taintFlag": {
                    "description": "An attribute of tainted data that enables the data flow analyzer to discriminate between different types of taint",
                    "readOnly": true,
                    "type": "string"
                },
                "tips": {
                    "description": "Issue tips",
                    "type": "string"
                },
                "traceNodes": {
                    "description": "Issue trace nodes",
                    "items": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "triggerString": {
                    "description": "Trigger string",
                    "type": "string"
                },
                "url": {
                    "description": "Issue url",
                    "type": "string"
                },
                "vulnerableParameter": {
                    "description": "Vulnerable parameter",
                    "type": "string"
                }
            },
            "required": [
                "analyzer",
                "assignedUser",
                "attackPayload",
                "attackType",
                "audited",
                "brief",
                "confidence",
                "cookie",
                "customTagValues",
                "detail",
                "displayEngineType",
                "downloadRequest",
                "downloadResponse",
                "engineCategory",
                "enginePriority",
                "engineType",
                "foundDate",
                "friority",
                "fullFileName",
                "hidden",
                "impact",
                "issueInstanceId",
                "issueName",
                "issueState",
                "kingdom",
                "likelihood",
                "method",
                "primaryRuleGuid",
                "projectVersionId",
                "recommendation",
                "references",
                "removedDate",
                "requestBody",
                "requestHeader",
                "requestParameter",
                "response",
                "responseHeader",
                "revision",
                "scanStatus",
                "severity",
                "shortFileName",
                "suppressed",
                "tips",
                "triggerString",
                "url",
                "vulnerableParameter"
            ],
            "type": "object"
        },
        "Project version issue group": {
            "description": "Application version issue group DTO object",
            "properties": {
                "auditedCount": {
                    "description": "Audited issue count",
                    "format": "int32",
                    "type": "integer"
                },
                "cleanName": {
                    "description": "Issue group name not containing count, dashes etc",
                    "type": "string"
                },
                "id": {
                    "description": "Identifier",
                    "type": "string"
                },
                "name": {
                    "description": "Issue group name",
                    "type": "string"
                },
                "totalCount": {
                    "description": "Issue total count",
                    "format": "int32",
                    "type": "integer"
                },
                "visibleCount": {
                    "description": "Visible issues count",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "auditedCount",
                "cleanName",
                "id",
                "name",
                "totalCount",
                "visibleCount"
            ],
            "type": "object"
        },
        "Project Version State": {
            "description": "Application Version State DTO object",
            "properties": {
                "analysisResultsExist": {
                    "example": false,
                    "type": "boolean"
                },
                "analysisUploadEnabled": {
                    "example": false,
                    "type": "boolean"
                },
                "attentionRequired": {
                    "example": false,
                    "type": "boolean"
                },
                "auditEnabled": {
                    "example": false,
                    "type": "boolean"
                },
                "batchBugSubmissionExists": {
                    "example": false,
                    "type": "boolean"
                },
                "committed": {
                    "description": "False if application version is in an incomplete state",
                    "example": false,
                    "type": "boolean"
                },
                "criticalPriorityIssueCountDelta": {
                    "format": "int32",
                    "type": "integer"
                },
                "deltaPeriod": {
                    "format": "int32",
                    "type": "integer"
                },
                "extraMessage": {
                    "type": "string"
                },
                "hasCustomIssues": {
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "issueCountDelta": {
                    "format": "int32",
                    "type": "integer"
                },
                "lastFprUploadDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "metricEvaluationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "percentAuditedDelta": {
                    "format": "float",
                    "type": "number"
                },
                "percentCriticalPriorityIssuesAuditedDelta": {
                    "format": "float",
                    "type": "number"
                }
            },
            "required": [
                "analysisResultsExist",
                "analysisUploadEnabled",
                "attentionRequired",
                "auditEnabled",
                "batchBugSubmissionExists",
                "committed",
                "criticalPriorityIssueCountDelta",
                "deltaPeriod",
                "extraMessage",
                "hasCustomIssues",
                "id",
                "issueCountDelta",
                "lastFprUploadDate",
                "metricEvaluationDate",
                "percentAuditedDelta",
                "percentCriticalPriorityIssuesAuditedDelta"
            ],
            "type": "object"
        },
        "ProjectVersionAuditByAssistantRequest": {
            "description": "Request to send the application version's data to Audit Assistant for assessment",
            "properties": {
                "projectVersionIds": {
                    "description": "List containing single application version ID to send audit assistant",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "projectVersionIds"
            ],
            "type": "object"
        },
        "ProjectVersionAuthEntityAssignRequest": {
            "description": "Request to associate application versions to auth entity",
            "properties": {
                "projectVersionIds": {
                    "description": "Application version ids to assign auth entity",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "projectVersionIds"
            ],
            "type": "object"
        },
        "ProjectVersionClearBugLinksRequest": {
            "description": "Request to clear the specified bug links from the application version",
            "properties": {
                "externalBugIds": {
                    "description": "Identifying information for the bug links to be cleared. (The format of an externalBugId depends on the SSC bug tracker plugin which filed the bug)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "externalBugIds"
            ],
            "type": "object"
        },
        "ProjectVersionCopyCurrentStateRequest": {
            "description": "Request to copy the current state from one application version to another",
            "properties": {
                "previousProjectVersionId": {
                    "description": "Previous application version id",
                    "format": "int64",
                    "type": "integer"
                },
                "projectVersionId": {
                    "description": "Application version id",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "previousProjectVersionId",
                "projectVersionId"
            ],
            "type": "object"
        },
        "ProjectVersionCopyPartialRequest": {
            "description": "Request to copy data selectively from one application version to another",
            "properties": {
                "copyAnalysisProcessingRules": {
                    "description": "Will copy analysis processing rules",
                    "example": false,
                    "type": "boolean"
                },
                "copyBugTrackerConfiguration": {
                    "description": "Will copy bugtracker configuration",
                    "example": false,
                    "type": "boolean"
                },
                "copyCustomTags": {
                    "description": "Will copy custom tags",
                    "example": false,
                    "type": "boolean"
                },
                "previousProjectVersionId": {
                    "description": "Previous application version id",
                    "format": "int64",
                    "type": "integer"
                },
                "projectVersionId": {
                    "description": "Application version id",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "copyAnalysisProcessingRules",
                "copyBugTrackerConfiguration",
                "copyCustomTags",
                "previousProjectVersionId",
                "projectVersionId"
            ],
            "type": "object"
        },
        "ProjectVersionPurgeRequest": {
            "description": "Request to purge the artifacts in application versions",
            "properties": {
                "projectVersionIds": {
                    "description": "List containing single application version ID to purge",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "purgeBefore": {
                    "description": "Purge all purgeable artifacts scanned before this date. If omitted, current date and time is used.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "projectVersionIds"
            ],
            "type": "object"
        },
        "ProjectVersionRefreshRequest": {
            "description": "Request to refresh the application versions and trigger the historical snapshot job",
            "properties": {
                "projectVersionIds": {
                    "description": "List containing single application version ID to refresh",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "projectVersionIds"
            ],
            "type": "object"
        },
        "ProjectVersionRefreshResponse": {
            "description": "Response of refreshing application version and triggered history snapshot job",
            "properties": {
                "data": {
                    "$ref": "#/definitions/Fortify job",
                    "description": "Triggered history snapshot job information",
                    "readOnly": true
                }
            },
            "type": "object"
        },
        "ProjectVersionTestRequest": {
            "description": "Request to check whether a application version already exists in the system",
            "properties": {
                "projectName": {
                    "description": "Application name to search",
                    "type": "string"
                },
                "projectVersionName": {
                    "description": "Application version name to search",
                    "type": "string"
                }
            },
            "required": [
                "projectName",
                "projectVersionName"
            ],
            "type": "object"
        },
        "ProjectVersionTestResponse": {
            "description": "Response of testing whether application version with name and exists in specified application",
            "properties": {
                "found": {
                    "description": "Whether the application version was found",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProjectVersionTrainAuditAssistantRequest": {
            "description": "Request to send the application version's data to Audit Assistant for training",
            "properties": {
                "projectVersionIds": {
                    "description": "List containing single application version ID to send training for audit assistant",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "projectVersionIds"
            ],
            "type": "object"
        },
        "RefreshAuditAssistantPoliciesRequest": {
            "description": "Audit Assistant server configuration (mandatory) and policy replacement mapping (optional)",
            "properties": {
                "currentPolicies": {
                    "description": "A list with current policy names from Audit Assistant server.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "obsoletePolicies": {
                    "description": "A list of policy objects containing existing obsolete AV policy names as a result of comparison with current server policies.",
                    "items": {
                        "$ref": "#/definitions/Obsolete policy"
                    },
                    "type": "array"
                },
                "policyReplacements": {
                    "description": "Mapping between old (obsolete) and new (existing) policy names; current AV policies and/or system default policy are to be replaced",
                    "items": {
                        "$ref": "#/definitions/Policy replacement"
                    },
                    "type": "array"
                },
                "properties": {
                    "description": "Audit Assistant server configuration properties to be used policies retrieval from Fortify Scan Analytics server ",
                    "items": {
                        "$ref": "#/definitions/ConfigProperty"
                    },
                    "type": "array"
                }
            },
            "required": [
                "properties"
            ],
            "type": "object"
        },
        "Report Auth Entity": {
            "description": "The Fortify User or Ldap User associated with a report",
            "properties": {
                "firstName": {
                    "description": "First name",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastName": {
                    "description": "Last name",
                    "type": "string"
                },
                "userName": {
                    "description": "User name",
                    "type": "string"
                }
            },
            "required": [
                "userName"
            ],
            "type": "object"
        },
        "Report Definition": {
            "description": "Report Definition DTO object",
            "properties": {
                "crossApp": {
                    "description": "True if report applies to multiple application versions",
                    "example": false,
                    "type": "boolean"
                },
                "description": {
                    "description": "Report description",
                    "type": "string"
                },
                "fileName": {
                    "description": "The name of the report definition file",
                    "type": "string"
                },
                "guid": {
                    "description": "Report definition GUID",
                    "type": "string"
                },
                "id": {
                    "description": "Report definition identifier",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "inUse": {
                    "description": "Indicates whether the report definition is in use",
                    "example": false,
                    "type": "boolean"
                },
                "name": {
                    "description": "Report name",
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Report definition version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "parameters": {
                    "description": "List of report parameters",
                    "items": {
                        "$ref": "#/definitions/Report Parameter"
                    },
                    "type": "array"
                },
                "publishVersion": {
                    "description": "Publish version",
                    "format": "int32",
                    "type": "integer"
                },
                "renderingEngine": {
                    "description": "The engine used to render the report, e.g. BIRT",
                    "type": "string"
                },
                "templateDocId": {
                    "description": "Template doc identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "description": "Type of report",
                    "enum": [
                        "PROJECT",
                        "SSA_PROJECT",
                        "SSA_PORTFOLIO",
                        "PORTFOLIO",
                        "COMPLIANCE",
                        "ISSUE",
                        "RUNTIME_REPORTS"
                    ],
                    "type": "string"
                },
                "typeDefaultText": {
                    "description": "Report type default text",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "type": "object"
        },
        "Report Library": {
            "description": "Report Library DTO object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fileDocId": {
                    "description": "Report library file doc identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "guid": {
                    "description": "Report library unique identifier",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Report library version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "publishVersion": {
                    "description": "Publish version",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "guid"
            ],
            "type": "object"
        },
        "Report Parameter": {
            "description": "Report Parameter DTO object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "identifier": {
                    "description": "Report parameter identifier",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "paramOrder": {
                    "description": "Order in which the parameter should appear",
                    "format": "int32",
                    "type": "integer"
                },
                "reportDefinitionId": {
                    "description": "Report definition identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "reportParameterOptions": {
                    "description": "Report parameter options",
                    "items": {
                        "$ref": "#/definitions/Report Parameter Option"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Report parameter type",
                    "enum": [
                        "SINGLE_PROJECT",
                        "SINGLE_RUNTIME_APP",
                        "SINGLE_SSA_PROJECT",
                        "MULTI_PROJECT",
                        "MULTI_RUNTIME_APP",
                        "MULTI_SSA_PROJECT",
                        "PROJECT_ATTRIBUTE",
                        "STRING",
                        "BOOLEAN",
                        "DATE",
                        "SINGLE_SELECT_DEFAULT",
                        "METADEF_GUID"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "identifier",
                "reportDefinitionId",
                "type"
            ],
            "type": "object"
        },
        "Report Parameter Option": {
            "description": "Report Parameter Option DTO object",
            "properties": {
                "defaultValue": {
                    "description": "Indicates whether option is the default value",
                    "example": false,
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "displayValue": {
                    "description": "Report parameter option display value",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "order": {
                    "description": "Order in which the parameter option should appear",
                    "format": "int32",
                    "type": "integer"
                },
                "reportValue": {
                    "description": "Report parameter option report value",
                    "type": "string"
                }
            },
            "required": [
                "displayValue",
                "reportValue"
            ],
            "type": "object"
        },
        "Report Project": {
            "description": "Report application DTO object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "projectVersionsCount": {
                    "description": "Count of application versions",
                    "format": "int32",
                    "type": "integer"
                },
                "versions": {
                    "description": "List of report application versions",
                    "items": {
                        "$ref": "#/definitions/Report project Version"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Report project Version": {
            "description": "The application version that is associated to a report",
            "properties": {
                "developmentPhase": {
                    "description": "Report application version development phase",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "developmentPhase"
            ],
            "type": "object"
        },
        "Resource": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "file": {
                    "$ref": "#/definitions/File"
                },
                "filename": {
                    "type": "string"
                },
                "inputStream": {
                    "$ref": "#/definitions/InputStream"
                },
                "open": {
                    "type": "boolean"
                },
                "readable": {
                    "type": "boolean"
                },
                "uri": {
                    "$ref": "#/definitions/URI"
                },
                "url": {
                    "$ref": "#/definitions/URL"
                }
            },
            "type": "object"
        },
        "Responsibility Assignment": {
            "description": "A Responsibility that a user in SSC is assigned to. There are currently a few responsibilities like Project Manager, Security Manager, Developer etc per Application.",
            "properties": {
                "email": {
                    "description": "Email of user assigned to responsibility",
                    "type": "string"
                },
                "firstName": {
                    "description": "First name of user assigned to responsibility",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name of user assigned to responsibility",
                    "type": "string"
                },
                "responsibilityDescription": {
                    "description": "Responsibility description",
                    "type": "string"
                },
                "responsibilityGuid": {
                    "description": "Responsibility global unique identifier",
                    "type": "string"
                },
                "responsibilityName": {
                    "description": "Responsibility name",
                    "type": "string"
                },
                "userId": {
                    "description": "ID of user assigned to responsibility",
                    "format": "int64",
                    "type": "integer"
                },
                "userName": {
                    "description": "Name of user assigned to responsibility",
                    "type": "string"
                }
            },
            "required": [
                "email",
                "firstName",
                "lastName",
                "responsibilityDescription",
                "responsibilityGuid",
                "responsibilityName",
                "userId",
                "userName"
            ],
            "type": "object"
        },
        "Result processing rule": {
            "description": "Rule to be checked when processing an FPR",
            "properties": {
                "displayable": {
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "displayName": {
                    "readOnly": true,
                    "type": "string"
                },
                "enabled": {
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "identifier": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "displayName",
                "displayable",
                "enabled",
                "identifier"
            ],
            "type": "object"
        },
        "Role": {
            "description": "Role used by the server to determine user permissions",
            "properties": {
                "allApplicationRole": {
                    "description": "True if a user with this Role has access to all Application Versions",
                    "example": false,
                    "type": "boolean"
                },
                "assignedToNonUsers": {
                    "description": "True if this Role is currently assigned to entities that are not users(groups, organizations, etc.)",
                    "example": false,
                    "type": "boolean"
                },
                "builtIn": {
                    "description": "True if this Role is a default Fortify Role",
                    "example": false,
                    "type": "boolean"
                },
                "default": {
                    "type": "boolean"
                },
                "deletable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Role version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "permissionIds": {
                    "description": "Ids of the permissions this Role has",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "publishVersion": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "allApplicationRole",
                "assignedToNonUsers",
                "builtIn",
                "permissionIds"
            ],
            "type": "object"
        },
        "Rulepack Core": {
            "description": "Rulepack Core DTO object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rulepackGUID": {
                    "type": "string"
                },
                "rulepackType": {
                    "enum": [
                        "SCA",
                        "RTA",
                        "CATPACK",
                        "SA_JAVA",
                        "SA_DOTNET"
                    ],
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "versions": {
                    "items": {
                        "$ref": "#/definitions/Rulepack Core"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "language",
                "name",
                "rulepackGUID",
                "rulepackType",
                "sku",
                "version"
            ],
            "type": "object"
        },
        "RulepacksBatchProcessStatus": {
            "description": "Object represents rulepack processing status. This is readonly object.",
            "properties": {
                "code": {
                    "description": "Numeric processing code.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "message": {
                    "description": "Processing message.",
                    "readOnly": true,
                    "type": "string"
                },
                "statuses": {
                    "description": "Child rulepacks processing statuses.",
                    "items": {
                        "$ref": "#/definitions/RulepacksBatchProcessStatus"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RulepackStatus": {
            "description": "Object represents rulepack individual process status. This is readonly object.",
            "properties": {
                "code": {
                    "description": "Numeric processing code.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "message": {
                    "description": "Processing message.",
                    "readOnly": true,
                    "type": "string"
                },
                "rulepackResourceId": {
                    "description": "Identifier of successfully created rulepack.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Saved Report": {
            "description": "Saved Report DTO object",
            "properties": {
                "_embed": {
                    "$ref": "#/definitions/EmbeddedReportDefinition",
                    "description": "Optionally embedded resources",
                    "readOnly": true
                },
                "authEntity": {
                    "$ref": "#/definitions/Report Auth Entity",
                    "description": "The Fortify User or Ldap User associated with the report"
                },
                "finishDate": {
                    "description": "Date and time in which the report finished processing",
                    "format": "date-time",
                    "type": "string"
                },
                "format": {
                    "description": "Saved report output format",
                    "enum": [
                        "PDF",
                        "DOC",
                        "XLS"
                    ],
                    "type": "string"
                },
                "formatDefaultText": {
                    "description": "Saved report output format default text",
                    "type": "string"
                },
                "generationDate": {
                    "description": "Report generation date",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "inputReportParameters": {
                    "description": "List of report parameters",
                    "items": {
                        "$ref": "#/definitions/Input Report Parameter"
                    },
                    "type": "array"
                },
                "isPublished": {
                    "description": "Indicates whether saved report is published",
                    "example": false,
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "description": "Saved report notes",
                    "type": "string"
                },
                "projects": {
                    "description": "List of application versions",
                    "items": {
                        "$ref": "#/definitions/Report Project"
                    },
                    "type": "array"
                },
                "published": {
                    "type": "boolean"
                },
                "reportDefinitionId": {
                    "description": "Report definition identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "reportProjectsCount": {
                    "description": "Count of report applications",
                    "format": "int32",
                    "type": "integer"
                },
                "startDate": {
                    "description": "Date and time in which the report started processing",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "description": "Saved report status",
                    "enum": [
                        "SCHED_PROCESSING",
                        "PROCESSING",
                        "PROCESS_COMPLETE",
                        "ERROR_PROCESSING"
                    ],
                    "type": "string"
                },
                "statusDefaultText": {
                    "description": "Saved report status default text",
                    "type": "string"
                },
                "type": {
                    "description": "Saved report type",
                    "enum": [
                        "PROJECT",
                        "SSA_PROJECT",
                        "SSA_PORTFOLIO",
                        "PORTFOLIO",
                        "COMPLIANCE",
                        "ISSUE",
                        "RUNTIME_REPORTS"
                    ],
                    "type": "string"
                },
                "typeDefaultText": {
                    "description": "Saved report type default text",
                    "type": "string"
                }
            },
            "required": [
                "format",
                "projects",
                "reportDefinitionId",
                "type"
            ],
            "type": "object"
        },
        "Scan": {
            "description": "provides high-level information on the result of a single Fortify analysis, usually embedded inside an Artifact object",
            "properties": {
                "artifactId": {
                    "description": "identifier of parent artifact object which contains this scan object",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "buildId": {
                    "description": "optional string identifier provided by the user when scanning",
                    "readOnly": true,
                    "type": "string"
                },
                "buildLabel": {
                    "description": "optional string identifier provided by the user when scanning",
                    "readOnly": true,
                    "type": "string"
                },
                "buildProject": {
                    "description": "optional string identifier provided by the user when scanning",
                    "readOnly": true,
                    "type": "string"
                },
                "buildVersion": {
                    "description": "optional string identifier provided by the user when scanning",
                    "readOnly": true,
                    "type": "string"
                },
                "certification": {
                    "description": "indicates whether the checksum on the analysis result is valid",
                    "readOnly": true,
                    "type": "string"
                },
                "elapsedTime": {
                    "description": "analysis duration",
                    "readOnly": true,
                    "type": "string"
                },
                "engineVersion": {
                    "description": "version of analysis engine",
                    "readOnly": true,
                    "type": "string"
                },
                "execLOC": {
                    "description": "total executable lines of code included in sources (excluding comments etc.)",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "fortifyAnnotationsLOC": {
                    "description": "lines of code with annotations",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "guid": {
                    "description": "globally unique id of scan object",
                    "readOnly": true,
                    "type": "string"
                },
                "hostname": {
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "noOfFiles": {
                    "description": "number of source files included in scan",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "rulepacks": {
                    "description": "rulepacks used with a scan",
                    "items": {
                        "$ref": "#/definitions/Scan Rulepack"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "totalLOC": {
                    "description": "total lines of code included in sources (includes comments etc.)",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "type": {
                    "description": "indicates the type of analyzer that produced it, such as SCA or WEBINSPECT",
                    "readOnly": true,
                    "type": "string"
                },
                "uploadDate": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "artifactId",
                "buildId",
                "buildLabel",
                "buildProject",
                "buildVersion",
                "certification",
                "elapsedTime",
                "engineVersion",
                "execLOC",
                "fortifyAnnotationsLOC",
                "guid",
                "hostname",
                "noOfFiles",
                "rulepacks",
                "totalLOC",
                "type",
                "uploadDate"
            ],
            "type": "object"
        },
        "scan error": {
            "description": "error reported by SCA during the scan",
            "properties": {
                "errorCode": {
                    "readOnly": true,
                    "type": "string"
                },
                "errorDescription": {
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "scanId": {
                    "description": "id of scan associated with the error",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "errorCode",
                "errorDescription",
                "id",
                "scanId"
            ],
            "type": "object"
        },
        "Scan Rulepack": {
            "description": "A rulepack used in a scan",
            "properties": {
                "guid": {
                    "description": "unique identifier of the rulepack",
                    "type": "string"
                },
                "name": {
                    "description": "name of the rulepack",
                    "type": "string"
                },
                "version": {
                    "description": "version of the rulepack",
                    "type": "string"
                }
            },
            "required": [
                "guid",
                "name",
                "version"
            ],
            "type": "object"
        },
        "SearchIndexStatus": {
            "description": "Status of search index",
            "properties": {
                "configured": {
                    "description": "Is index configured",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "healthyIndex": {
                    "description": "Is the index Healthy",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "indexingJobRunning": {
                    "description": "Is the indexing job running",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchLdapUnregisteredRequest": {
            "description": "Request to search for unregistered ldap objects for potential assignment to SSC. The overall scope of searchable ldap objects is defined by the SSC ldap server configuration",
            "properties": {
                "filter": {
                    "description": "The specified query string is matched against the name, firstName, lastName, and email fields for LDAP User entities. For Group and OrgUnit entities, only the name is matched. The query string must match the entire field value. For partial matches you can add asterisk ('*') wildcards to your query.",
                    "type": "string"
                },
                "ldapType": {
                    "description": "Type of ldap objects to be matched",
                    "enum": [
                        "USER",
                        "GROUP",
                        "ORG_UNIT"
                    ],
                    "type": "string"
                },
                "limit": {
                    "description": "A maximum number of returned objects in listing, if '-1' no limit is applied",
                    "format": "int32",
                    "minimum": -1,
                    "type": "integer"
                },
                "start": {
                    "description": "A start offset in object listing",
                    "format": "int32",
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "ldapType"
            ],
            "type": "object"
        },
        "SelectorOption": {
            "description": "Single option of IssueFilterSelector. Every filtering option is associated with some specific issue attribute's value.",
            "properties": {
                "displayName": {
                    "description": "Option's display name.",
                    "readOnly": true,
                    "type": "string"
                },
                "guid": {
                    "description": "Option's unique GUID.",
                    "readOnly": true,
                    "type": "string"
                },
                "value": {
                    "description": "Option's value that must be sent to backend when this option is selected.",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "displayName",
                "guid",
                "value"
            ],
            "type": "object"
        },
        "SourceFileDto": {
            "description": "Source file content where vulnerabilities were found.",
            "properties": {
                "checksum": {
                    "description": "Source file checksum.",
                    "readOnly": true,
                    "type": "string"
                },
                "encoding": {
                    "description": "Source file encoding.",
                    "readOnly": true,
                    "type": "string"
                },
                "fileContent": {
                    "description": "Scanned source file content.",
                    "readOnly": true,
                    "type": "string"
                },
                "filePath": {
                    "description": "Full path to source file on the machine where scan was performed.",
                    "readOnly": true,
                    "type": "string"
                },
                "languageName": {
                    "description": "Source file programming language name.",
                    "readOnly": true,
                    "type": "string"
                },
                "projectVersionId": {
                    "description": "Application version identifier that contains this source file.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "checksum",
                "encoding",
                "fileContent",
                "filePath",
                "languageName",
                "projectVersionId"
            ],
            "type": "object"
        },
        "System Configuration": {
            "description": "System Configuration defined by key and values",
            "properties": {
                "name": {
                    "description": "Configuration name",
                    "type": "string"
                },
                "value": {
                    "description": "Configuration value",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "TemplateItem": {
            "additionalProperties": {
                "type": "object"
            },
            "type": "object"
        },
        "Token Definition": {
            "description": "Metadata of a Software Security Center token",
            "properties": {
                "capabilityDescription": {
                    "description": "Describes what tokens generated from this token specification can be used for. Note that these capabilities are subordinate to the actual roles/permissions granted to the owner of the token",
                    "readOnly": true,
                    "type": "string"
                },
                "maxDaysToLive": {
                    "description": "Maximum allowable lifetime (in nominal days) of token. At the time of token creation/edit, the exact value for its max expiration is calculated by adding maxDaysToLive * MilliSecondsPerDay to the current datetime",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "maxUsages": {
                    "description": "Maximum number of api calls that can be made using this token type. A value of -1 denotes unlimited number of calls.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "type": {
                    "description": "Token type",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TraceNodeDto": {
            "description": "Issue analysis trace node DTO.",
            "properties": {
                "childNodes": {
                    "description": "Child nodes of the current node.",
                    "items": {
                        "$ref": "#/definitions/TraceNodeDto"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "detail": {
                    "description": "Detail node marker.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "evidence": {
                    "description": "Node evidence text.",
                    "readOnly": true,
                    "type": "string"
                },
                "file": {
                    "description": "Name of the file associated with this node.",
                    "readOnly": true,
                    "type": "string"
                },
                "fullPath": {
                    "description": "Full path to source file associated with this node.",
                    "readOnly": true,
                    "type": "string"
                },
                "line": {
                    "description": "Source file line number where issue was found.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "nodeType": {
                    "description": "Type of the trace node.",
                    "enum": [
                        "IN_CALL",
                        "OUT_CALL",
                        "IN_OUT_CALL",
                        "READ",
                        "READ_GLOBAL",
                        "ASSIGN",
                        "ASSIGN_GLOBAL",
                        "ALIAS",
                        "COMPARE",
                        "RETURN",
                        "REF",
                        "DEREF",
                        "END_SCOPE",
                        "JUMP",
                        "BRANCH_TAKEN",
                        "BRANCH_NOT_TAKEN",
                        "EXTERNAL_ENTRY",
                        "RUNTIME_SINK",
                        "RUNTIME_SOURCE",
                        "RUNTIME_VALIDATION",
                        "RUNTIME_TRACE",
                        "TRACE_RUNTIME_SOURCE",
                        "TRACE_RUNTIME_SINK",
                        "TAINT_CHANGE",
                        "GENERIC"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "primary": {
                    "description": "Primry node marker.",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "text": {
                    "description": "Node display text.",
                    "readOnly": true,
                    "type": "string"
                },
                "toolTip": {
                    "description": "Node description/tooltip.",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "detail",
                "evidence",
                "file",
                "fullPath",
                "line",
                "nodeType",
                "primary",
                "text",
                "toolTip"
            ],
            "type": "object"
        },
        "Trigger": {
            "description": "Trigger in a request or response that identifies a vulnerability",
            "properties": {
                "length": {
                    "format": "int32",
                    "type": "integer"
                },
                "location": {
                    "format": "int32",
                    "type": "integer"
                },
                "triggerString": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "URI": {
            "properties": {
                "absolute": {
                    "type": "boolean"
                },
                "authority": {
                    "type": "string"
                },
                "fragment": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "opaque": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "rawAuthority": {
                    "type": "string"
                },
                "rawFragment": {
                    "type": "string"
                },
                "rawPath": {
                    "type": "string"
                },
                "rawQuery": {
                    "type": "string"
                },
                "rawSchemeSpecificPart": {
                    "type": "string"
                },
                "rawUserInfo": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "schemeSpecificPart": {
                    "type": "string"
                },
                "userInfo": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "URL": {
            "properties": {
                "authority": {
                    "type": "string"
                },
                "content": {
                    "type": "object"
                },
                "defaultPort": {
                    "format": "int32",
                    "type": "integer"
                },
                "file": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "userInfo": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User photo": {
            "description": "User photo object",
            "properties": {
                "photo": {
                    "description": "Photo in byte array",
                    "format": "byte",
                    "type": "string"
                },
                "photoMimeType": {
                    "description": "Mime type of user photo. Eg .bmp, .jpg etc",
                    "type": "string"
                }
            },
            "required": [
                "photo",
                "photoMimeType"
            ],
            "type": "object"
        },
        "User preferences": {
            "description": "Object containing user preferences such as date/time format",
            "properties": {
                "dateFormat": {
                    "description": "Preferred date format",
                    "type": "string"
                },
                "email": {
                    "description": "User email",
                    "type": "string"
                },
                "emailAlerts": {
                    "description": "Receive email alerts if set to true",
                    "example": false,
                    "type": "boolean"
                },
                "monitorAllRuntimeApps": {
                    "description": "Monitors all runtime applications if set to true",
                    "example": false,
                    "type": "boolean"
                },
                "projectVersionListMode": {
                    "description": "Enum for ProjectVersionListMode with values DEFAULT, CUSTOM, ALL",
                    "type": "string"
                },
                "receiveRuntimeAlerts": {
                    "description": "Receive runtime alerts if set to true",
                    "example": false,
                    "type": "boolean"
                },
                "runtimeAlertDefinitionId": {
                    "description": "Runtime alert definition identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "timeFormat": {
                    "description": "Preferred time format",
                    "type": "string"
                },
                "username": {
                    "description": "User name",
                    "type": "string"
                }
            },
            "required": [
                "dateFormat",
                "email",
                "emailAlerts",
                "monitorAllRuntimeApps",
                "projectVersionListMode",
                "receiveRuntimeAlerts",
                "runtimeAlertDefinitionId",
                "timeFormat",
                "username"
            ],
            "type": "object"
        },
        "User session information": {
            "description": "Object containing user session information",
            "properties": {
                "applicationContextPath": {
                    "description": "Application context path",
                    "type": "string"
                },
                "canChangePassword": {
                    "description": "Set to true if user can change password in SSC",
                    "example": false,
                    "type": "boolean"
                },
                "cloudScanConfig": {
                    "$ref": "#/definitions/CloudScanConfig",
                    "description": "ScanCentral configuration"
                },
                "collabModuleEnabled": {
                    "description": "Set to true if collaboration module is enabled",
                    "example": false,
                    "type": "boolean"
                },
                "displayUserDetails": {
                    "description": "Display user details if set to true",
                    "example": false,
                    "type": "boolean"
                },
                "edastConfig": {
                    "$ref": "#/definitions/EdastConfig",
                    "description": "EDAST configuration"
                },
                "email": {
                    "description": "User email",
                    "type": "string"
                },
                "firstName": {
                    "description": "User first name",
                    "type": "string"
                },
                "fortifyUserType": {
                    "description": "LOCAL for standard local users, SSO for local users who are only allowed to log in using SSO",
                    "type": "string"
                },
                "lastName": {
                    "description": "User last name",
                    "type": "string"
                },
                "licenseCapabilities": {
                    "description": "List of license capabilities",
                    "items": {
                        "$ref": "#/definitions/License capability"
                    },
                    "type": "array"
                },
                "onDemandMode": {
                    "description": "Set to true if on demand mode is enabled",
                    "example": false,
                    "type": "boolean"
                },
                "permissions": {
                    "description": "User permissions",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "preferences": {
                    "$ref": "#/definitions/User preferences",
                    "description": "User preferences"
                },
                "priorityOverrideActive": {
                    "description": "Set to true if priority override feature is active",
                    "example": false,
                    "type": "boolean"
                },
                "roles": {
                    "description": "User roles",
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                },
                "sessionId": {
                    "description": "User session id",
                    "type": "string"
                },
                "username": {
                    "description": "User name",
                    "type": "string"
                },
                "userPhoto": {
                    "$ref": "#/definitions/User photo",
                    "description": "User Photo"
                },
                "userType": {
                    "description": "User Type. 0 for Local (Fortify), 2 for LDAP",
                    "format": "int32",
                    "type": "integer"
                },
                "webappVersion": {
                    "description": "Web application version",
                    "type": "string"
                },
                "wieConfig": {
                    "$ref": "#/definitions/WIE Configuration",
                    "description": "WebInspect enterprise configuration"
                }
            },
            "required": [
                "applicationContextPath",
                "canChangePassword",
                "cloudScanConfig",
                "collabModuleEnabled",
                "displayUserDetails",
                "edastConfig",
                "email",
                "firstName",
                "fortifyUserType",
                "lastName",
                "licenseCapabilities",
                "onDemandMode",
                "permissions",
                "preferences",
                "priorityOverrideActive",
                "roles",
                "sessionId",
                "userPhoto",
                "userType",
                "username",
                "webappVersion",
                "wieConfig"
            ],
            "type": "object"
        },
        "UserIssueSearchOptions": {
            "description": "User specific options that can be used for customizing issue search result.",
            "properties": {
                "includeCommentsInHistory": {
                    "description": "If 'true', comments are included in issue audit history. Used only by flex UI.",
                    "example": false,
                    "type": "boolean"
                },
                "projectVersionId": {
                    "description": "Application version ID the option values belong to. Value is empty for default options that can be applied to any application version user has access to if application version specific options are not defined.",
                    "format": "int64",
                    "type": "integer"
                },
                "showHidden": {
                    "description": "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.",
                    "example": false,
                    "type": "boolean"
                },
                "showRemoved": {
                    "description": "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                    "example": false,
                    "type": "boolean"
                },
                "showShortFileNames": {
                    "description": "If 'true', only short file names will be displayed in issues list.",
                    "example": false,
                    "type": "boolean"
                },
                "showSuppressed": {
                    "description": "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                    "example": false,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UserSessionState": {
            "description": "User session state is used to persist UI state",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "projectVersionId": {
                    "format": "int64",
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "category",
                "name",
                "username"
            ],
            "type": "object"
        },
        "Validation Request": {
            "description": "Validation Request DTO object",
            "properties": {
                "stringToValidate": {
                    "description": "String to validate",
                    "type": "string"
                }
            },
            "required": [
                "stringToValidate"
            ],
            "type": "object"
        },
        "Validation Status": {
            "description": "Validation Status DTO object",
            "properties": {
                "msg": {
                    "description": "Validation status message",
                    "type": "string"
                },
                "valid": {
                    "description": "Indicates whether validation was successful",
                    "example": false,
                    "type": "boolean"
                }
            },
            "required": [
                "msg",
                "valid"
            ],
            "type": "object"
        },
        "Variable": {
            "description": "Variables count issues, conditions, and other categories of numeric data.",
            "properties": {
                "attributeForOperation": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "folderName": {
                    "description": "Select a folder from the default filter set to associate with the variable.",
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "inUse": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Variable version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "operation": {
                    "enum": [
                        "COUNT",
                        "SUM"
                    ],
                    "type": "string"
                },
                "publishVersion": {
                    "format": "int32",
                    "type": "integer"
                },
                "searchString": {
                    "example": "[Fortify Priority Order]:critical audited:false",
                    "type": "string"
                },
                "variableType": {
                    "enum": [
                        "SYSTEM_DEFINED",
                        "USER_DEFINED"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "folderName",
                "name",
                "searchString"
            ],
            "type": "object"
        },
        "Variable History": {
            "description": "An instance of a variable in an Application Version's snapshot.",
            "properties": {
                "id": {
                    "description": "Variable id",
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "description": "Variable Name",
                    "type": "string"
                },
                "timestamp": {
                    "description": "The Date the variable value was taken",
                    "format": "date-time",
                    "type": "string"
                },
                "value": {
                    "description": "Variable value",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "timestamp",
                "value"
            ],
            "type": "object"
        },
        "WebHook Definition": {
            "description": "WebHook Definition DTO object.",
            "properties": {
                "active": {
                    "description": "If this webhook is active",
                    "example": false,
                    "type": "boolean"
                },
                "allowInsecureTLS": {
                    "description": "Allow connection even if webhook destination server certificate cannot be verified. Both certificate trust and server name validation are suppressed. Applies only to HTTPS protocol.",
                    "example": false,
                    "type": "boolean"
                },
                "contentType": {
                    "description": "The way how webhook will be delivered",
                    "enum": [
                        "JSON"
                    ],
                    "type": "string"
                },
                "createdBy": {
                    "description": "User who created this webhook",
                    "readOnly": true,
                    "type": "string"
                },
                "creationDate": {
                    "description": "Date when this webhook was created",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "id": {
                    "description": "ID required when referencing an existing webhook definition",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastStatus": {
                    "description": "Status of this webhook's last completed request",
                    "enum": [
                        "NONE",
                        "SUCCESS",
                        "FAILED"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "monitorApps": {
                    "description": "If this webhook is set to monitor all application versions or a custom selection. If set to all application versions, it takes precedence over any custom selection application version ids.",
                    "enum": [
                        "ALL",
                        "CUSTOM"
                    ],
                    "type": "string"
                },
                "monitoredAppVersionEvents": {
                    "description": "Custom selection of application version based events to monitor by this webhook. No need to provide custom selection in case you choose to monitor all events.",
                    "items": {
                        "enum": [
                            "ANALYSIS_RESULT_UPLOAD_COMPLETE_SUCCESS",
                            "ANALYSIS_RESULT_UPLOAD_FAILURE",
                            "ANALYSIS_RESULT_UPLOAD_REQUIRES_APPROVAL",
                            "ANALYSIS_RESULT_UPLOAD_APPROVED",
                            "ANALYSIS_RESULT_INDEXING_COMPLETED",
                            "APP_VERSION_UPDATED"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "monitoredAppVersionIds": {
                    "description": "Custom selection of application versions monitored by this webhook. No need to provide custom selection in case you choose to monitor all application versions.",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "monitoredGlobalEvents": {
                    "description": "Custom selection of global events (events that are not triggered by an action in specific application version) to monitor by this webhook. No need to provide custom selection in case you choose to monitor all events.",
                    "items": {
                        "enum": [
                            "APP_VERSION_CREATED",
                            "APP_VERSION_DELETED",
                            "USER_CREATED",
                            "USER_DELETED",
                            "USER_UPDATED",
                            "LOCAL_USER_ACCOUNT_LOCKED",
                            "REPORT_GENERATION_COMPLETE",
                            "REPORT_GENERATION_REQUESTED"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "monitorEvents": {
                    "description": "If this webhook is set to monitor all events or custom selection of events. If set to all events, it takes precedence over any custom selection of global/application events.",
                    "enum": [
                        "ALL",
                        "CUSTOM"
                    ],
                    "type": "string"
                },
                "objectVersion": {
                    "description": "Webhook version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "restricted": {
                    "description": "True if current user is missing some permissions to fully manage this webhook",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "secretValue": {
                    "description": "Secret value will be used to sign webhook request. Requirements: min 8 and max 128 of printable ASCII characters (alphanumeric, punctuation, space).",
                    "type": "string"
                },
                "url": {
                    "description": "Destination URL",
                    "type": "string"
                },
                "useSscProxy": {
                    "description": "Enable using SSC proxy configuration if webhook receiver is behind a proxy.SSC proxy must be also enabled and configured.",
                    "example": false,
                    "type": "boolean"
                }
            },
            "required": [
                "contentType",
                "url"
            ],
            "type": "object"
        },
        "WebHook History": {
            "description": "Information about triggered webhook requests including request and response data",
            "properties": {
                "contentType": {
                    "enum": [
                        "JSON"
                    ],
                    "type": "string"
                },
                "createdAt": {
                    "description": "Date and time when the webhook request was created",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "failureReason": {
                    "description": "Reason of failure, if webhook request failed",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "Id of sent webhook request",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "requestHeaders": {
                    "description": "Request headers of webhook request. HTML-encoded.",
                    "readOnly": true,
                    "type": "string"
                },
                "requestPayload": {
                    "description": "Request payload of webhook request. HTML-encoded.",
                    "readOnly": true,
                    "type": "string"
                },
                "responseBody": {
                    "description": "Response body of webhook request. Truncated to 1500 characters and HTML-encoded.",
                    "readOnly": true,
                    "type": "string"
                },
                "responseCode": {
                    "description": "Response code of webhook request",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "responseHeaders": {
                    "description": "Response headers of webhook request. Truncated to 1000 characters and HTML-encoded.",
                    "readOnly": true,
                    "type": "string"
                },
                "restricted": {
                    "description": "True if current user is missing some permissions to fully view or resend this webhook request",
                    "example": false,
                    "readOnly": true,
                    "type": "boolean"
                },
                "status": {
                    "description": "Status of webhook request",
                    "enum": [
                        "PENDING",
                        "SENT",
                        "SUCCESS",
                        "FAILED"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "webHookId": {
                    "description": "ID of webhook definition that triggered the webhook request",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WebHook History Item": {
            "description": "Basic information about triggered webhook request",
            "properties": {
                "createdAt": {
                    "description": "Date and time when the webhook request was created",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "Id of sent webhook request",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "status": {
                    "description": "Status of webhook request",
                    "enum": [
                        "PENDING",
                        "SENT",
                        "SUCCESS",
                        "FAILED"
                    ],
                    "readOnly": true,
                    "type": "string"
                },
                "webHookId": {
                    "description": "ID of webhook definition that triggered the webhook request",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WebHookResendRequest": {
            "description": "Request to resend webhook payload from history",
            "properties": {
                "webHookHistoryIds": {
                    "description": "List containing single webhook history ID to resend",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "webHookHistoryIds"
            ],
            "type": "object"
        },
        "WIE Configuration": {
            "description": "WebInspect enterprise configuration object",
            "properties": {
                "wieInstanceUrl": {
                    "description": "WebInspect Enterprise url",
                    "type": "string"
                },
                "wieRegistered": {
                    "description": "Set to true if WebInspect Enterprise is registered",
                    "example": false,
                    "type": "boolean"
                }
            },
            "required": [
                "wieInstanceUrl",
                "wieRegistered"
            ],
            "type": "object"
        },
        "WorkersShutdownRequest": {
            "description": "Request to shut down ScanCentral workers",
            "properties": {
                "workersUuids": {
                    "description": "List of ScanCentral worker GUIDS",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "workersUuids"
            ],
            "type": "object"
        }
    },
    "host": "ssc.uat.fortifyhosted.net",
    "info": {
        "title": "Fortify Software Security Center API",
        "version": "1:23.1.1.0007"
    },
    "paths": {
        "/activityFeedEvents": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listActivityFeed",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Activity Feed»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "activity-feed-controller"
                ]
            }
        },
        "/alertableEventTypes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAlertableEventType",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«AlertableEventType»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "alertable-event-type-controller"
                ]
            }
        },
        "/alertDefinitions": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteAlertDefinition",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "alert-definition-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAlertDefinition",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«AlertDefinitionDto»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "alert-definition-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createAlertDefinition",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionDto"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«AlertDefinitionDto»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "alert-definition-controller"
                ]
            }
        },
        "/alertDefinitions/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteAlertDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "alert-definition-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readAlertDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«AlertDefinitionDto»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "alert-definition-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateAlertDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionDto"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«AlertDefinitionDto»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "alert-definition-controller"
                ]
            }
        },
        "/alertDefinitions/{parentId}/projectVersions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listProjectVersionOfAlertDefinition",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project Version»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "project-version-of-alert-definition-controller"
                ]
            }
        },
        "/alerts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAlertHistory",
                "parameters": [
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Alert History Entry»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "alert-history-controller"
                ]
            }
        },
        "/alerts/action/setStatus": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "setStatusForAlertHistory",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertSetStatusRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Mark a triggered alert event as read or unread",
                "tags": [
                    "alert-history-controller"
                ]
            }
        },
        "/applicationState": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getApplicationState",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Application State»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "application-state-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "putApplicationState",
                "parameters": [
                    {
                        "description": "applicationState",
                        "in": "body",
                        "name": "applicationState",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Application State"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Application State»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "put",
                "tags": [
                    "application-state-controller"
                ]
            }
        },
        "/artifacts/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteArtifact",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "artifact-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readArtifact",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Artifact»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "artifact-controller"
                ]
            }
        },
        "/artifacts/{parentId}/scanerrors": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listScanErrorOfArtifact",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«scan error»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "scan-error-of-artifact-controller"
                ]
            }
        },
        "/artifacts/{parentId}/scans": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listScanOfArtifact",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Scan»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "scan-of-artifact-controller"
                ]
            }
        },
        "/artifacts/action/approve": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "approveArtifact",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ArtifactApproveRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Approve the artifact for processing in spite of failing ",
                "tags": [
                    "artifact-controller"
                ]
            }
        },
        "/artifacts/action/purge": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "purgeArtifact",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ArtifactPurgeRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Purge the specified artifact from the system to recover space without affecting issue metrics. (Use the 'delete' operation instead if you want to completely revert all traces of an artifact)",
                "tags": [
                    "artifact-controller"
                ]
            }
        },
        "/attributeDefinitions": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteAttributeDefinition",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If parameter is set to 'true', the specified attribute(s), if deletable, will be removed even if in use.",
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "attribute-definition-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAttributeDefinition",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Attribute Definition»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "attribute-definition-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createAttributeDefinition",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Attribute Definition"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Attribute Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "attribute-definition-controller"
                ]
            }
        },
        "/attributeDefinitions/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteAttributeDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "If parameter is set to 'true', the specified attribute(s), if deletable, will be removed even if in use.",
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "attribute-definition-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readAttributeDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Attribute Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "attribute-definition-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateAttributeDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Attribute Definition"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Attribute Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "attribute-definition-controller"
                ]
            }
        },
        "/auth/clientSessionId": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "clientSessionIdAuth",
                "parameters": [
                    {
                        "description": "clientSessionIdRequest",
                        "in": "body",
                        "name": "clientSessionIdRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientSessionIdRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClientSessionIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "clientSessionId",
                "tags": [
                    "auth-controller"
                ]
            }
        },
        "/authEntities": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteAuthEntity",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "auth-entity-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAuthEntity",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search-spec of full text search query (see fulltextsearch parameter)",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
                        "in": "query",
                        "name": "fulltextsearch",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "entityname",
                        "in": "query",
                        "name": "entityname",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "ldaptype",
                        "in": "query",
                        "name": "ldaptype",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Authentication Entity»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "auth-entity-controller"
                ]
            }
        },
        "/authEntities/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readAuthEntity",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Authentication Entity»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "auth-entity-controller"
                ]
            }
        },
        "/authEntities/{parentId}/groups": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listGroupOfAuthEntity",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Authentication Entity»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "group-of-auth-entity-controller"
                ]
            }
        },
        "/authEntities/{parentId}/projectVersions": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteProjectVersionOfAuthEntity",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "project-version-of-auth-entity-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listProjectVersionOfAuthEntity",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project Version»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "project-version-of-auth-entity-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "If the submitted authentication entity has no roles, the update will be ignored",
                "operationId": "updateProjectVersionOfAuthEntity",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resources",
                        "in": "body",
                        "name": "resources",
                        "required": true,
                        "schema": {
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project Version»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Update the specified application versions for the authentication entity",
                "tags": [
                    "project-version-of-auth-entity-controller"
                ]
            }
        },
        "/authEntities/{parentId}/projectVersions/action/assign": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "If the submitted authentication entity has no roles, the assignment will be ignored",
                "operationId": "assignProjectVersionOfAuthEntity",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectVersionAuthEntityAssignRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Associate the specified application versions to the authentication entity",
                "tags": [
                    "project-version-of-auth-entity-controller"
                ]
            }
        },
        "/authEntities/{parentId}/roles": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listRoleOfAuthEntity",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Role»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "role-of-auth-entity-controller"
                ]
            }
        },
        "/bugfieldTemplateGroups": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteBugfieldTemplateGroup",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "bugfield-template-group-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listBugfieldTemplateGroup",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«BugfieldTemplateGroupDto»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "bugfield-template-group-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createBugfieldTemplateGroup",
                "parameters": [
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BugfieldTemplateGroupDto"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«BugfieldTemplateGroupDto»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "bugfield-template-group-controller"
                ]
            }
        },
        "/bugfieldTemplateGroups/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteBugfieldTemplateGroup",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "bugfield-template-group-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readBugfieldTemplateGroup",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«BugfieldTemplateGroupDto»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "bugfield-template-group-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateBugfieldTemplateGroup",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BugfieldTemplateGroupDto"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«BugfieldTemplateGroupDto»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "bugfield-template-group-controller"
                ]
            }
        },
        "/bugtrackers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listBugTracker",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Bug Tracker»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "bug-tracker-controller"
                ]
            }
        },
        "/bulk": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "postBulk",
                "parameters": [
                    {
                        "description": "apiBulkRequestData",
                        "in": "body",
                        "name": "apiBulkRequestData",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bulk Request Data"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Bulk Response Item»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "post",
                "tags": [
                    "bulk-controller"
                ]
            }
        },
        "/cloudjobs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listCloudJob",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«CloudJob»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "cloud-job-controller"
                ]
            }
        },
        "/cloudjobs/{jobToken}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readCloudJob",
                "parameters": [
                    {
                        "description": "jobToken",
                        "in": "path",
                        "name": "jobToken",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudJob»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "cloud-job-controller"
                ]
            }
        },
        "/cloudjobs/action/cancel": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "cancelCloudJob",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudJobCancelRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Cancel a job",
                "tags": [
                    "cloud-job-controller"
                ]
            }
        },
        "/cloudjobs/action/prioritizeJob": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "prioritizeJobCloudJob",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PrioritizeScanCentralJobRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Move the job to the top of the queue",
                "tags": [
                    "cloud-job-controller"
                ]
            }
        },
        "/cloudmappings/mapByVersionId": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "mapByVersionIdCloudPoolMapping",
                "parameters": [
                    {
                        "description": "projectVersionId",
                        "format": "int64",
                        "in": "query",
                        "name": "projectVersionId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPoolMapping»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "mapByVersionId",
                "tags": [
                    "cloud-pool-mapping-controller"
                ]
            }
        },
        "/cloudmappings/mapByVersionIds": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "mapByVersionIdsCloudPoolMapping",
                "parameters": [
                    {
                        "description": "projectVersionIds",
                        "in": "body",
                        "name": "projectVersionIds",
                        "required": true,
                        "schema": {
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«CloudPoolMapping»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "mapByVersionIds",
                "tags": [
                    "cloud-pool-mapping-controller"
                ]
            }
        },
        "/cloudmappings/mapByVersionName": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "mapByVersionNameCloudPoolMapping",
                "parameters": [
                    {
                        "description": "projectName",
                        "in": "query",
                        "name": "projectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "projectVersionName",
                        "in": "query",
                        "name": "projectVersionName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPoolMapping»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "mapByVersionName",
                "tags": [
                    "cloud-pool-mapping-controller"
                ]
            }
        },
        "/cloudpools": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listCloudPool",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search-spec of full text search query (see fulltextsearch parameter)",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
                        "in": "query",
                        "name": "fulltextsearch",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«CloudPool»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "cloud-pool-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createCloudPool",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPool"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPool»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/{parentId}/jobs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listCloudJobOfCloudPool",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«CloudJob»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "cloud-job-of-cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/{parentId}/versions": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteProjectVersionOfCloudPool",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Delete application versions from the cloud pool",
                "tags": [
                    "project-version-of-cloud-pool-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listProjectVersionOfCloudPool",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project Version»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "project-version-of-cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/{parentId}/versions/action/assign": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "assignProjectVersionOfCloudPool",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPoolProjectVersionAssignRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPoolProjectVersionActionResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Assign application versions to the cloud pool",
                "tags": [
                    "project-version-of-cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/{parentId}/versions/action/replace": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "replaceProjectVersionOfCloudPool",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPoolProjectVersionReplaceRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPoolProjectVersionActionResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Replace application versions in the cloud pool",
                "tags": [
                    "project-version-of-cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/{parentId}/workers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listCloudWorkerOfCloudPool",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«CloudWorker»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "cloud-worker-of-cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/{parentId}/workers/action/assign": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "assignCloudWorkerOfCloudPool",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPoolWorkerAssignRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPoolWorkerActionResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Assign workers to the cloud pool",
                "tags": [
                    "cloud-worker-of-cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/{parentId}/workers/action/disable": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "disableCloudWorkerOfCloudPool",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPoolWorkerDisableRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPoolWorkerActionResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Disable workers in the cloud pool",
                "tags": [
                    "cloud-worker-of-cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/{parentId}/workers/action/replace": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "replaceCloudWorkerOfCloudPool",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPoolWorkerReplaceRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPoolWorkerActionResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Replace workers in the cloud pool",
                "tags": [
                    "cloud-worker-of-cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/{uuid}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteCloudPool",
                "parameters": [
                    {
                        "description": "uuid",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "cloud-pool-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readCloudPool",
                "parameters": [
                    {
                        "description": "uuid",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPool»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "cloud-pool-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCloudPool",
                "parameters": [
                    {
                        "description": "uuid",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPool"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudPool»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "cloud-pool-controller"
                ]
            }
        },
        "/cloudpools/disabledWorkers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listUnassignedCloudWorkerOfCloudPool",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«CloudWorker»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "unassigned-cloud-worker-of-cloud-pool-controller"
                ]
            }
        },
        "/cloudsystem/metrics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getCloudSystemMetrics",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudSystemMetrics»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "cloud-system-metrics-controller"
                ]
            }
        },
        "/cloudsystem/pollstatus": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getCloudSystemPollStatus",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudSystemPollStatus»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "cloud-system-poll-status-controller"
                ]
            }
        },
        "/cloudsystem/settings": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getCloudSystemSettings",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudSystemSettings»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "cloud-system-settings-controller"
                ]
            }
        },
        "/cloudsystem/settings/action/activate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "activateCloudSystemSettings",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Activate ScanCentral controller and return it back from maintenance mode. Take no effect if controller is already active",
                "tags": [
                    "cloud-system-settings-controller"
                ]
            }
        },
        "/cloudsystem/settings/action/deactivate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deactivateCloudSystemSettings",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Deactivate ScanCentral controller and switch it to maintenance mode. Takes no effect if controller in maintenance mode already or is being switched to it",
                "tags": [
                    "cloud-system-settings-controller"
                ]
            }
        },
        "/cloudworkers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listCloudWorker",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search-spec of full text search query (see fulltextsearch parameter)",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
                        "in": "query",
                        "name": "fulltextsearch",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«CloudWorker»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "cloud-worker-controller"
                ]
            }
        },
        "/cloudworkers/{parentId}/cloudjobs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listCloudJobOfCloudWorker",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«CloudJob»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "cloud-job-of-cloud-worker-controller"
                ]
            }
        },
        "/cloudworkers/{uuid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readCloudWorker",
                "parameters": [
                    {
                        "description": "uuid",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CloudWorker»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "cloud-worker-controller"
                ]
            }
        },
        "/cloudworkers/action/deactivate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "shutdownCloudWorker",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkersShutdownRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Shutdown ScanCentral workers and switch them to maintenance mode.",
                "tags": [
                    "cloud-worker-controller"
                ]
            }
        },
        "/comments": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueAuditComment",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A full text search query",
                        "in": "query",
                        "name": "q",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "true",
                        "description": "Only 'true' is supported",
                        "enum": [
                            "true"
                        ],
                        "in": "query",
                        "name": "fulltextsearch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Issue Audit Comment»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-audit-comment-controller"
                ]
            }
        },
        "/configuration": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getConfiguration",
                "parameters": [
                    {
                        "description": "group",
                        "in": "query",
                        "name": "group",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«ConfigProperties»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "configuration-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConfiguration",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfigProperties"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«ConfigProperties»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "configuration-controller"
                ]
            }
        },
        "/configuration/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readConfiguration",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«ConfigProperty»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "configuration-controller"
                ]
            }
        },
        "/configuration/action/refreshAuditAssistantPolicies": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "refreshAuditAssistantPoliciesConfiguration",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshAuditAssistantPoliciesRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«RefreshAuditAssistantPoliciesRequest»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Refreshes prediction policies between Audit Assistant server and SSC",
                "tags": [
                    "configuration-controller"
                ]
            }
        },
        "/configuration/currentAuthenticationInfo": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getCurrentAuthenticationInfoConfiguration",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«CurrentAuthenticationInfo»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "getCurrentAuthenticationInfo",
                "tags": [
                    "configuration-controller"
                ]
            }
        },
        "/configuration/searchIndex": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getFullTextIndexStatusConfiguration",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«SearchIndexStatus»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "getFullTextIndexStatus",
                "tags": [
                    "configuration-controller"
                ]
            }
        },
        "/configuration/validateAuditAssistantConnection": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "validateAuditAssistantConnectionConfiguration",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfigProperties"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«ConfigProperties»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "validateAuditAssistantConnection",
                "tags": [
                    "configuration-controller"
                ]
            }
        },
        "/configuration/validateReportConnection": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "validateReportConnectionConfiguration",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfigProperties"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«ConfigProperties»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "validateReportConnection",
                "tags": [
                    "configuration-controller"
                ]
            }
        },
        "/coreRulepacks": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteRulepackCore",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "rulepack-core-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listRulepackCore",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Rulepack Core»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "rulepack-core-controller"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "uploadRulepackCore",
                "parameters": [
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«RulepackStatus»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "upload",
                "tags": [
                    "rulepack-core-controller"
                ]
            }
        },
        "/coreRulepacks/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteRulepackCore",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "rulepack-core-controller"
                ]
            }
        },
        "/customTags": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteCustomTag",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "custom-tag-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listCustomTag",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Custom tag»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "custom-tag-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createCustomTag",
                "parameters": [
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Custom tag"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Custom tag»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "custom-tag-controller"
                ]
            }
        },
        "/customTags/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteCustomTag",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "custom-tag-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readCustomTag",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Custom tag»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "custom-tag-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCustomTag",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Custom tag"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Custom tag»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "custom-tag-controller"
                ]
            }
        },
        "/dashboardVersions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listDashboardVersion",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to group by",
                        "in": "query",
                        "name": "groupby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "aggregateby",
                        "in": "query",
                        "name": "aggregateby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "startdate",
                        "in": "query",
                        "name": "startdate",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "enddate",
                        "in": "query",
                        "name": "enddate",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "attributes",
                        "in": "query",
                        "name": "attributes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "variables",
                        "in": "query",
                        "name": "variables",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "performanceindicators",
                        "in": "query",
                        "name": "performanceindicators",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "attributefilter",
                        "in": "query",
                        "name": "attributefilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Dashboard Version»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "dashboard-version-controller"
                ]
            }
        },
        "/dataExports": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listDataExport",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Data Export»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "data-export-controller"
                ]
            }
        },
        "/dataExports/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteDataExport",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "data-export-controller"
                ]
            }
        },
        "/dataExports/action/exportAuditToCsv": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "exportAuditToCSVForDataExport",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportAuditToCSVRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Export audit issues to csv",
                "tags": [
                    "data-export-controller"
                ]
            }
        },
        "/dataExports/action/exportDependencyScanToCsv": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "exportDependencyScanToCsvForDataExport",
                "parameters": [
                    {
                        "description": "request",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportDependencyScanToCsvRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Export Dependency Scan data to csv",
                "tags": [
                    "data-export-controller"
                ]
            }
        },
        "/dataExports/action/exportIssueStatsToCsv": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "exportIssuesStatsToCSVForDataExport",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportIssueStatsToCSVRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Export issue statistics to csv",
                "tags": [
                    "data-export-controller"
                ]
            }
        },
        "/dataExports/action/exportOscToCsv": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "exportOscToCsvForDataExport",
                "parameters": [
                    {
                        "description": "request",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportOscToCsvRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Export open source component data to csv",
                "tags": [
                    "data-export-controller"
                ]
            }
        },
        "/engineTypes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listEngineType",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Engine type»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "engine-type-controller"
                ]
            }
        },
        "/events": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listEventLog",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«EventLog»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "event-log-controller"
                ]
            }
        },
        "/features": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listFeature",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": true,
                        "description": "use_stable_api",
                        "in": "query",
                        "name": "use_stable_api",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Feature»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "feature-controller"
                ]
            }
        },
        "/features/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readFeature",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Feature»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "feature-controller"
                ]
            }
        },
        "/fileTokens": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteFileToken",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Call this operation after every file upload activity",
                "tags": [
                    "file-token-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createFileToken",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/File token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«File token»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Create single-use file transfer token",
                "tags": [
                    "file-token-controller"
                ]
            }
        },
        "/folders": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getFolder",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Array«string»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "folder-controller"
                ]
            }
        },
        "/iidMigrations/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readIidMigration",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IID Migration»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "iid-migration-controller"
                ]
            }
        },
        "/internalCustomTags": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listInternalCustomTag",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Custom tag»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "internal-custom-tag-controller"
                ]
            }
        },
        "/issueaging": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueAging",
                "parameters": [
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "filterby",
                        "in": "query",
                        "name": "filterby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "aggregateby",
                        "in": "query",
                        "name": "aggregateby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "groupguid",
                        "in": "query",
                        "name": "groupguid",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "groupvalue",
                        "in": "query",
                        "name": "groupvalue",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "name",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "numberOfApplicationVersions",
                        "in": "query",
                        "name": "numberOfApplicationVersions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "linesOfCode",
                        "in": "query",
                        "name": "linesOfCode",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "issuesPendingReview",
                        "in": "query",
                        "name": "issuesPendingReview",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "openIssues",
                        "in": "query",
                        "name": "openIssues",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "filesScanned",
                        "in": "query",
                        "name": "filesScanned",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "bugDensity",
                        "in": "query",
                        "name": "bugDensity",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "averageDaysToReview",
                        "in": "query",
                        "name": "averageDaysToReview",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "averageDaysToRemediate",
                        "in": "query",
                        "name": "averageDaysToRemediate",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«IssueAgingDto»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-aging-controller"
                ]
            }
        },
        "/issueaginggroup": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueAgingGroup",
                "parameters": [
                    {
                        "description": "Fields to group by",
                        "in": "query",
                        "name": "groupby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "filterby",
                        "in": "query",
                        "name": "filterby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«IssueAgingGroupDto»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-aging-group-controller"
                ]
            }
        },
        "/issueDetails": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueDetail",
                "parameters": [
                    {
                        "description": "projectName",
                        "in": "query",
                        "name": "projectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "projectVersionName",
                        "in": "query",
                        "name": "projectVersionName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "instanceId",
                        "in": "query",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project version issue details»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-detail-controller"
                ]
            }
        },
        "/issueDetails/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readIssueDetail",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Filter set to use",
                        "in": "query",
                        "name": "filterset",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Project version issue details»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "issue-detail-controller"
                ]
            }
        },
        "/issues": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssue",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A full text search query",
                        "in": "query",
                        "name": "q",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "true",
                        "description": "Only 'true' is supported",
                        "enum": [
                            "true"
                        ],
                        "in": "query",
                        "name": "fulltextsearch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project version issue»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-controller"
                ]
            }
        },
        "/issues/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readIssue",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Project version issue»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "issue-controller"
                ]
            }
        },
        "/issues/{parentId}/attachments": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteIssueAttachmentOfIssue",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "issue-attachment-of-issue-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueAttachmentOfIssue",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Issue Attachment»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-attachment-of-issue-controller"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "uploadIssueAttachmentOfIssue",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "description",
                        "in": "query",
                        "name": "description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issue Attachment»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "upload",
                "tags": [
                    "issue-attachment-of-issue-controller"
                ]
            }
        },
        "/issues/{parentId}/attachments/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteIssueAttachmentOfIssue",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "issue-attachment-of-issue-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readIssueAttachmentOfIssue",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issue Attachment»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "issue-attachment-of-issue-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateIssueAttachmentOfIssue",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Issue Attachment"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issue Attachment»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "issue-attachment-of-issue-controller"
                ]
            }
        },
        "/issues/{parentId}/auditHistory": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAuditHistoryOfIssue",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«IssueAuditHistoryDto»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "audit-history-of-issue-controller"
                ]
            }
        },
        "/issues/{parentId}/comments": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueAuditCommentOfIssue",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Issue Audit Comment»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-audit-comment-of-issue-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createIssueAuditCommentOfIssue",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Issue Audit Comment"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issue Audit Comment»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "issue-audit-comment-of-issue-controller"
                ]
            }
        },
        "/issuesDeltaExports": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssuesDeltaExport",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Issues Delta Export»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issues-delta-export-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createIssuesDeltaExport",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Issues Delta Export"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issues Delta Export»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "issues-delta-export-controller"
                ]
            }
        },
        "/issuesDeltaExports/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteIssuesDeltaExport",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "issues-delta-export-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readIssuesDeltaExport",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issues Delta Export»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "issues-delta-export-controller"
                ]
            }
        },
        "/issueTemplates": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteIssueTemplate",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "issue-template-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueTemplate",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Issue Template»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-template-controller"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "uploadIssueTemplate",
                "parameters": [
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "name",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "description",
                        "in": "query",
                        "name": "description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "confirmIgnoreCustomTagUpdates",
                        "in": "query",
                        "name": "confirmIgnoreCustomTagUpdates",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issue Template»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "upload",
                "tags": [
                    "issue-template-controller"
                ]
            }
        },
        "/issueTemplates/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteIssueTemplate",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "issue-template-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readIssueTemplate",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issue Template»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "issue-template-controller"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "replaceTemplateFileIssueTemplate",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "name",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "description",
                        "in": "query",
                        "name": "description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "confirmIgnoreCustomTagUpdates",
                        "in": "query",
                        "name": "confirmIgnoreCustomTagUpdates",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issue Template»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Replace Issue template file",
                "tags": [
                    "issue-template-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateIssueTemplate",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Issue Template"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issue Template»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "issue-template-controller"
                ]
            }
        },
        "/issueTemplates/{parentId}/customTags": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listCustomTagOfIssueTemplate",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Custom tag»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "custom-tag-of-issue-template-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCustomTagOfIssueTemplate",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "customTags",
                        "in": "body",
                        "name": "customTags",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Custom tag"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Custom tag»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "custom-tag-of-issue-template-controller"
                ]
            }
        },
        "/issueViewTemplates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueViewTemplate",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«IssueViewTemplate»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-view-template-controller"
                ]
            }
        },
        "/issueViewTemplates/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readIssueViewTemplate",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IssueViewTemplate»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "issue-view-template-controller"
                ]
            }
        },
        "/jobs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listJob",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Job»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "job-controller"
                ]
            }
        },
        "/jobs/{jobName}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readJob",
                "parameters": [
                    {
                        "description": "jobName",
                        "in": "path",
                        "name": "jobName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Job»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "job-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateJob",
                "parameters": [
                    {
                        "description": "jobName",
                        "in": "path",
                        "name": "jobName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Job»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "job-controller"
                ]
            }
        },
        "/jobs/{parentId}/warnings": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listJobPriorityChangeCategoryWarningOfJob",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "priority",
                        "in": "query",
                        "name": "priority",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«JobPriorityChangeCategoryWarning»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "job-priority-change-category-warning-of-job-controller"
                ]
            }
        },
        "/jobs/action/cancel": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "cancelJob",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobCancelRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Cancel a job",
                "tags": [
                    "job-controller"
                ]
            }
        },
        "/ldapObjects": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteLdapObject",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "ldap-object-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listLdapObject",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "The specified query string is matched against the name, firstName, lastName, and email fields for LDAP User entities. For Group and OrgUnit entities, only the name is matched. The query string must match the entire field value. For partial matches you can add asterisk ('*') wildcards to your query.",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "If specified, restrict the results to ldap entities of the specified type.",
                        "enum": [
                            "NONE",
                            "GROUP",
                            "USER",
                            "ORG_UNIT"
                        ],
                        "in": "query",
                        "name": "ldapType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Deprecated. Use the 'ldapType' parameter instead.",
                        "in": "query",
                        "name": "viewby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Deprecated. Use the 'action/searchUnregistered' api instead.",
                        "in": "query",
                        "name": "ldaptype",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«LDAP entity»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Retrieve ldap entities registered with SSC",
                "tags": [
                    "ldap-object-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createLdapObject",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LDAP entity"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«LDAP entity»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "ldap-object-controller"
                ]
            }
        },
        "/ldapObjects/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteLdapObject",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "ldap-object-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readLdapObject",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«LDAP entity»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "ldap-object-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateLdapObject",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LDAP entity"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«LDAP entity»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "ldap-object-controller"
                ]
            }
        },
        "/ldapObjects/action/refresh": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "refreshLdapObject",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«LdapRefreshResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Refresh the ldap cache",
                "tags": [
                    "ldap-object-controller"
                ]
            }
        },
        "/ldapObjects/action/searchUnregistered": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "searchUnregisteredLdapObject",
                "parameters": [
                    {
                        "description": "searchLdapUnregisteredRequest",
                        "in": "body",
                        "name": "searchLdapUnregisteredRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchLdapUnregisteredRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«LDAP entity»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Retrieve ldap entities matching the search request which are currently unregistered with SSC. The overall scope of searchable ldap objects is defined by the SSC ldap server configuration",
                "tags": [
                    "ldap-object-controller"
                ]
            }
        },
        "/ldapServers": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteLdapServer",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "ldap-server-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listLdapServer",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«LdapServerDto»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "ldap-server-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createLdapServer",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LdapServerDto"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«LdapServerDto»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "ldap-server-controller"
                ]
            }
        },
        "/ldapServers/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteLdapServer",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "ldap-server-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readLdapServer",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«LdapServerDto»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "ldap-server-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateLdapServer",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LdapServerDto"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«LdapServerDto»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "ldap-server-controller"
                ]
            }
        },
        "/ldapServers/action/test": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "testLdapServer",
                "parameters": [
                    {
                        "description": "ldapServerTestRequest",
                        "in": "body",
                        "name": "ldapServerTestRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LdapServerTestRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Validation Status»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Validate that it is possible to authenticate to the ldap server using the configured ldap baseDN and credentials",
                "tags": [
                    "ldap-server-controller"
                ]
            }
        },
        "/license": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getLicense",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«License»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    },
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "license-controller"
                ]
            }
        },
        "/localGroups": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listLocalGroup",
                "parameters": [
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Local Group»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "local-group-controller"
                ]
            }
        },
        "/localGroups/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readLocalGroup",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Local Group»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "local-group-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateLocalGroup",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "group",
                        "in": "body",
                        "name": "group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Local Group"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Local Group»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "local-group-controller"
                ]
            }
        },
        "/localUsers": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteLocalUser",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "local-user-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listLocalUser",
                "parameters": [
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Local User»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "local-user-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createLocalUser",
                "parameters": [
                    {
                        "description": "user",
                        "in": "body",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Local User"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Local User»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "local-user-controller"
                ]
            }
        },
        "/localUsers/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteLocalUser",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "local-user-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readLocalUser",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Local User»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "local-user-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateLocalUser",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "user",
                        "in": "body",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Local User"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Local User»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "local-user-controller"
                ]
            }
        },
        "/localUsers/action/checkPasswordStrength": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "checkLocalUser",
                "parameters": [
                    {
                        "description": "passwordStrengthCheckRequest",
                        "in": "body",
                        "name": "passwordStrengthCheckRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordStrengthCheckRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«PasswordStrengthCheckResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Check the provided password using the system password strength validator and the specified dictionaries",
                "tags": [
                    "local-user-controller"
                ]
            }
        },
        "/performanceIndicators": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeletePerformanceIndicator",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "performance-indicator-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listPerformanceIndicator",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«PerformanceIndicator»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "performance-indicator-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPerformanceIndicator",
                "parameters": [
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PerformanceIndicator"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«PerformanceIndicator»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "performance-indicator-controller"
                ]
            }
        },
        "/performanceIndicators/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePerformanceIndicator",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "performance-indicator-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePerformanceIndicator",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PerformanceIndicator"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«PerformanceIndicator»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "performance-indicator-controller"
                ]
            }
        },
        "/permissions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listPermission",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Permission»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "permission-controller"
                ]
            }
        },
        "/permissions/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readPermission",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Permission»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "permission-controller"
                ]
            }
        },
        "/permissions/{parentId}/dependsOn": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listPermissionRequiredByPermission",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Permission»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "permission-required-by-permission-controller"
                ]
            }
        },
        "/pluginimage": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getPluginImage",
                "parameters": [
                    {
                        "description": "imageType",
                        "in": "query",
                        "name": "imageType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "metadataId",
                        "format": "int64",
                        "in": "query",
                        "name": "metadataId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "plugin-image-controller"
                ]
            }
        },
        "/pluginimage/parser": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getParserPluginImage",
                "parameters": [
                    {
                        "description": "imageType",
                        "in": "query",
                        "name": "imageType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "engineType",
                        "in": "query",
                        "name": "engineType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "dataVersion",
                        "format": "int64",
                        "in": "query",
                        "name": "dataVersion",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "parser-plugin-image-controller"
                ]
            }
        },
        "/pluginlocalization": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readPluginLocalization",
                "parameters": [
                    {
                        "description": "engineType",
                        "in": "query",
                        "name": "engineType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "dataVersion",
                        "format": "int32",
                        "in": "query",
                        "name": "dataVersion",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "language",
                        "in": "query",
                        "name": "language",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Plugin Localization»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "plugin-localization-controller"
                ]
            }
        },
        "/plugins": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listPlugin",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Plugin Meta Data»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "plugin-controller"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "uploadPlugin",
                "parameters": [
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Plugin Meta Data»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "upload",
                "tags": [
                    "plugin-controller"
                ]
            }
        },
        "/plugins/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePlugin",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "plugin-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readPlugin",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Plugin Meta Data»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "plugin-controller"
                ]
            }
        },
        "/plugins/action/disable": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "disablePlugin",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PluginDisableRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Disable a plugin",
                "tags": [
                    "plugin-controller"
                ]
            }
        },
        "/plugins/action/enable": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "enablePlugin",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PluginEnableRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Enable a plugin",
                "tags": [
                    "plugin-controller"
                ]
            }
        },
        "/portlets/issueaging": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getIssueAgingPortlet",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IssueAgingPortlet»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "issue-aging-portlet-controller"
                ]
            }
        },
        "/projects": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listProject",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search-spec of full text search query (see fulltextsearch parameter)",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
                        "in": "query",
                        "name": "fulltextsearch",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "project-controller"
                ]
            }
        },
        "/projects/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readProject",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Project»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "project-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateProject",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Project»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "project-controller"
                ]
            }
        },
        "/projects/{parentId}/versions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listProjectVersionOfProject",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search-spec of full text search query (see fulltextsearch parameter)",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
                        "in": "query",
                        "name": "fulltextsearch",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "includeInactive",
                        "in": "query",
                        "name": "includeInactive",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "myAssignedIssues",
                        "in": "query",
                        "name": "myAssignedIssues",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project Version»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "project-version-of-project-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createProjectVersionOfProject",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project Version"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Project Version»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "project-version-of-project-controller"
                ]
            }
        },
        "/projects/action/test": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "testProject",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationNameTestRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«ApplicationNameTestResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Check whether the specified application name is already defined in the system",
                "tags": [
                    "project-controller"
                ]
            }
        },
        "/projectVersions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listProjectVersion",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search-spec of full text search query (see fulltextsearch parameter)",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
                        "in": "query",
                        "name": "fulltextsearch",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "includeInactive",
                        "in": "query",
                        "name": "includeInactive",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "myAssignedIssues",
                        "in": "query",
                        "name": "myAssignedIssues",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "onlyIfHasIssues",
                        "in": "query",
                        "name": "onlyIfHasIssues",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project Version»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "project-version-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createProjectVersion",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project Version"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Project Version»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "project-version-controller"
                ]
            }
        },
        "/projectVersions/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteProjectVersion",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "project-version-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readProjectVersion",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Project Version»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateProjectVersion",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project Version"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Project Version»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/artifacts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listArtifactOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Artifact»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "artifact-of-project-version-controller"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "uploadArtifactOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "engineType",
                        "in": "query",
                        "name": "engineType",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Artifact»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "upload",
                "tags": [
                    "artifact-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/artifacts/action/updateSources": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "updateSourcesArtifactOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Update source archive associated with application version",
                "tags": [
                    "artifact-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/attributes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAttributeOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Attribute»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "attribute-of-project-version-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createAttributeOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Attribute"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Attribute»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "attribute-of-project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCollectionAttributeOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Attribute"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Attribute»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "updateCollection",
                "tags": [
                    "attribute-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/attributes/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readAttributeOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Attribute»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "attribute-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/auditAssistantStatus": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAuditAssistantStatusOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«AuditAssistantStatus»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "audit-assistant-status-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/auditAssistantTrainingStatus": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAaTrainingStatusOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«AATrainingStatus»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "aa-training-status-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/authEntities": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAuthEntityOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "extractusersfromgroups",
                        "in": "query",
                        "name": "extractusersfromgroups",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "includeuniversalaccessentities",
                        "in": "query",
                        "name": "includeuniversalaccessentities",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "entityname",
                        "in": "query",
                        "name": "entityname",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Authentication Entity»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "auth-entity-of-project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCollectionAuthEntityOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Authentication Entity"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Authentication Entity»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "updateCollection",
                "tags": [
                    "auth-entity-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/authEntities/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readAuthEntityOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Authentication Entity»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "auth-entity-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/bugfilingrequirements": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listBugFilingRequirementsOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«BugFilingRequirements»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "bug-filing-requirements-of-project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCollectionBugFilingRequirementsOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BugFilingRequirements"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "changedParamIdentifier",
                        "in": "query",
                        "name": "changedParamIdentifier",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«BugFilingRequirements»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "updateCollection",
                "tags": [
                    "bug-filing-requirements-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/bugfilingrequirements/action/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "loginBugFilingRequirementsOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BugFilingRequirementsRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«BugFilingRequirementsResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Authenticate to the bug tracking system and return the initial set of bug filing requirements",
                "tags": [
                    "bug-filing-requirements-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/bugfilingrequirements/action/refresh": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "refreshBugFilingRequirementsOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BugFilingRequirementsRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«BugFilingRequirementsResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Refresh provided bug filing requirements and return new set of requirements",
                "tags": [
                    "bug-filing-requirements-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/bugtracker": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listBugTrackerOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project version bug tracker»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "bug-tracker-of-project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCollectionBugTrackerOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Project version bug tracker"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project version bug tracker»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "updateCollection",
                "tags": [
                    "bug-tracker-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/bugtracker/action/clearBugLinksByExternalIds": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "clearBugLinksByExternalIdsBugTrackerOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectVersionClearBugLinksRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Clear the specified bug references from the application version. (Does not affect the external bug tracking system in any way.)",
                "tags": [
                    "bug-tracker-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/bugtracker/action/test": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "testBugTrackerOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BugTrackerRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Validate that the user can authenticate to the bug tracking system using the provided configuration and credentials",
                "tags": [
                    "bug-tracker-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/customTags": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listCustomTagOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "includeall",
                        "in": "query",
                        "name": "includeall",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Custom tag»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "custom-tag-of-project-version-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createCustomTagOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Custom tag"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Custom tag»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "custom-tag-of-project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCollectionCustomTagOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Custom tag"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Custom tag»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "updateCollection",
                "tags": [
                    "custom-tag-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/customTags/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCustomTagOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Custom tag"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Custom tag»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "custom-tag-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/dependencyScanIssues": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listDependencyScanIssuesOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "engineType",
                        "in": "query",
                        "name": "engineType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Filter set to use",
                        "in": "query",
                        "name": "filterset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showhidden",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showremoved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showsuppressed",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«DependencyScanIssue»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "dependency-scan-issues-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/dynamicScanRequests": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listDynamicScanRequestOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«DynamicScanRequest»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "dynamic-scan-request-of-project-version-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createDynamicScanRequestOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DynamicScanRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«DynamicScanRequest»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "dynamic-scan-request-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/dynamicScanRequests/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readDynamicScanRequestOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«DynamicScanRequest»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "dynamic-scan-request-of-project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateDynamicScanRequestOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DynamicScanRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«DynamicScanRequest»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "dynamic-scan-request-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/dynamicScanRequestsSummary": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getDynamicScanRequestsSummaryOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«DynamicScanRequestsSummary»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "dynamic-scan-requests-summary-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/dynamicScanRequestTemplate": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getDynamicScanRequestTemplateOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«DynamicScanRequestTemplate»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "dynamic-scan-request-template-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/filterSets": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listFilterSetOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Filter Set»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "filter-set-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/folders": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listFolderOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Folder»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "folder-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/folders/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readFolderOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Folder»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "folder-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/iidMigrations": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIidMigrationOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«IID Migration»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "iid-migration-of-project-version-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createIidMigrationOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IID Migration"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IID Migration»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "iid-migration-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issueAssignment": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueAssignmentOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "entityname",
                        "in": "query",
                        "name": "entityname",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Issue Assignment»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-assignment-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issueAssignment/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readIssueAssignmentOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Issue Assignment»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "issue-assignment-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issueGroups": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueGroupOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "An issue query expression, must be used together with the 'qm' parameter",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Syntax mode for the 'q' parameter, mandatory if the 'q' parameter is used",
                        "enum": [
                            "issues"
                        ],
                        "in": "query",
                        "name": "qm",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter set to use",
                        "in": "query",
                        "name": "filterset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showhidden",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showremoved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showsuppressed",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', only short file names will be displayed in issues list.",
                        "in": "query",
                        "name": "showshortfilenames",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "filter",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "groupingtype",
                        "in": "query",
                        "name": "groupingtype",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project version issue group»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-group-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issues": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "An issue query expression, must be used together with the 'qm' parameter",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Syntax mode for the 'q' parameter, mandatory if the 'q' parameter is used",
                        "enum": [
                            "issues"
                        ],
                        "in": "query",
                        "name": "qm",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter set to use",
                        "in": "query",
                        "name": "filterset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showhidden",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showremoved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showsuppressed",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', only short file names will be displayed in issues list.",
                        "in": "query",
                        "name": "showshortfilenames",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "filter",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "groupid",
                        "in": "query",
                        "name": "groupid",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "groupingtype",
                        "in": "query",
                        "name": "groupingtype",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "A comma-separated value list of issue ids. If provided, other filtering and ordering parameters can not be used.",
                        "in": "query",
                        "name": "ids",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Project version issue»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issues/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readIssueOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Project version issue»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "issue-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issues/action/assignUser": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "assignUserForIssueOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IssueAssignUserRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IssueActionResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Assign issue to user",
                "tags": [
                    "issue-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issues/action/audit": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "auditIssueOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IssueAuditRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IssueActionResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Perform an auditing action on the specified issues",
                "tags": [
                    "issue-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issues/action/fileBug": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "fileBugForIssueOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IssueFileBugRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IssueFileBugResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Submit a bug (defect) for the specified issues in the external bug tracking system (if configured)",
                "tags": [
                    "issue-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issues/action/suppress": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "suppressIssueOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IssueSuppressRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IssueActionResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Suppress or unsuppress an issue",
                "tags": [
                    "issue-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issues/action/updateTag": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTagForIssueOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IssueUpdateTagRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IssueActionResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Update the custom tag for the specified issues",
                "tags": [
                    "issue-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issues/openSource": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listOpenSourceIssuesOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Filter set to use",
                        "in": "query",
                        "name": "filterset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showhidden",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showremoved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.",
                        "in": "query",
                        "name": "showsuppressed",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«OpenSourceIssue»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "open-source-issues-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issueSelectorSet": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getIssueSelectorSetOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«IssueFilterSelectorSet»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "issue-selector-set-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issueStatistics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueStatisticsOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Filter set to use",
                        "in": "query",
                        "name": "filterset",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Issue Statistics»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-statistics-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/issueSummaries": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listIssueSummaryOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "seriestype",
                        "enum": [
                            "APP_NAME",
                            "SCAN_PRODUCT",
                            "ISSUE_FRIORITY",
                            "ISSUE_FOLDER",
                            "ISSUE_CORRELATED",
                            "SIGN_OFF_STATE",
                            "DEFAULT"
                        ],
                        "in": "query",
                        "name": "seriestype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "List of allowed patterns: APP_NAME, SCAN_DATE, SCAN_PRODUCT, ISSUE_FOLDER, ISSUE_CATEGORY, ISSUE_KINGDOM, ISSUE_FILENAME, ISSUE_FRIORITY, ISSUE_AUDITED, ISSUE_PACKAGE_NAME, ISSUE_CLASS_NAME, ISSUE_FUNCTION_NAME, ISSUE_MAPPED_CATEGORY, FOLDER_FOLDER, ISSUE_{name of issue attribute}, EXTERNALLIST_{external category name}, CUSTOMTAG_{custom tag name}.",
                        "in": "query",
                        "name": "groupaxistype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "audited",
                        "in": "query",
                        "name": "audited",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "filter",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "showhidden",
                        "in": "query",
                        "name": "showhidden",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "showremoved",
                        "in": "query",
                        "name": "showremoved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "showsuppressed",
                        "in": "query",
                        "name": "showsuppressed",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Issue Summary»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "issue-summary-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/performanceIndicatorHistories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listPerformanceIndicatorHistoryOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Performance Indicator History»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "performance-indicator-history-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/performanceIndicatorHistories/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readPerformanceIndicatorHistoryOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Performance Indicator History»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "performance-indicator-history-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/pluginEngineTypes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listPluginEngineTypesOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Plugin parser type to filter on.  If parameter is null, no filtering on plugin parser type will happen.",
                        "enum": [
                            "STATIC",
                            "DYNAMIC",
                            "DEPENDENCY_SCAN"
                        ],
                        "in": "query",
                        "name": "parserType",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Engine type»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "plugin-engine-types-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/responsibilities": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listResponsibilityAssignmentOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Responsibility Assignment»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "responsibility-assignment-of-project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCollectionResponsibilityAssignmentOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Responsibility Assignment"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Responsibility Assignment»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "updateCollection",
                "tags": [
                    "responsibility-assignment-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/responsibilities/{guid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readResponsibilityAssignmentOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "guid",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Responsibility Assignment»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "responsibility-assignment-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/resultProcessingRules": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listResultProcessingRuleOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Result processing rule»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "result-processing-rule-of-project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateCollectionResultProcessingRuleOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "data",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Result processing rule"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Result processing rule»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "updateCollection",
                "tags": [
                    "result-processing-rule-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/sourceFiles": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listSourceFileOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The url-encoded value of a source file query expression \"path:&lt;path_to_file_in_quotes&gt;+AND+scan_id:&lt;s_id&gt;\". For example, \"q=path:%22JavaSource%2Forg%2Fowasp%2Fwebgoat%2Flessons%2FCSRF.java%22%2Band%2Bscan_id:1\". If 'scan_id' is not provided, the search defaults to the latest scan of the application version.",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«SourceFileDto»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "source-file-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/userIssueSearchOptions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getUserIssueSearchOptionsOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«UserIssueSearchOptions»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "user-issue-search-options-of-project-version-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateUserIssueSearchOptionsOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIssueSearchOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«UserIssueSearchOptions»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "user-issue-search-options-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/variableHistories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listVariableHistoryOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Variable History»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "variable-history-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/{parentId}/variableHistories/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readVariableHistoryOfProjectVersion",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Variable History»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "variable-history-of-project-version-controller"
                ]
            }
        },
        "/projectVersions/action/auditByAuditAssistant": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "auditByAuditAssistantProjectVersion",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectVersionAuditByAssistantRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Send issue data to Audit Assistant for assessment",
                "tags": [
                    "project-version-controller"
                ]
            }
        },
        "/projectVersions/action/copyCurrentState": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "copyCurrentStateForProjectVersion",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectVersionCopyCurrentStateRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Copy current audit state from one application version into another",
                "tags": [
                    "project-version-controller"
                ]
            }
        },
        "/projectVersions/action/copyFromPartial": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "copyProjectVersion",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectVersionCopyPartialRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Copy selected data from one application version into another",
                "tags": [
                    "project-version-controller"
                ]
            }
        },
        "/projectVersions/action/purge": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "purgeProjectVersion",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectVersionPurgeRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Purge artifacts associated with the specified application version",
                "tags": [
                    "project-version-controller"
                ]
            }
        },
        "/projectVersions/action/refresh": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "refreshProjectVersion",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectVersionRefreshRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«ProjectVersionRefreshResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Re-calculate the metrics for the application version",
                "tags": [
                    "project-version-controller"
                ]
            }
        },
        "/projectVersions/action/test": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "testProjectVersion",
                "parameters": [
                    {
                        "description": "projectVersionTestRequest",
                        "in": "body",
                        "name": "projectVersionTestRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectVersionTestRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«ProjectVersionTestResponse»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Check whether the specified application version is already defined in the system",
                "tags": [
                    "project-version-controller"
                ]
            }
        },
        "/projectVersions/action/trainAuditAssistant": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "trainAuditAssistantProjectVersion",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectVersionTrainAuditAssistantRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Send audited issue data to Audit Assistant to help train the engine",
                "tags": [
                    "project-version-controller"
                ]
            }
        },
        "/reportDefinitions": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteReportDefinition",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "report-definition-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listReportDefinition",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to group by",
                        "in": "query",
                        "name": "groupby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Report Definition»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "report-definition-controller"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "uploadReportDefinition",
                "parameters": [
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "name",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "type",
                        "enum": [
                            "PROJECT",
                            "SSA_PROJECT",
                            "SSA_PORTFOLIO",
                            "PORTFOLIO",
                            "COMPLIANCE",
                            "ISSUE",
                            "RUNTIME_REPORTS"
                        ],
                        "in": "query",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "BIRT",
                        "description": "renderingEngine",
                        "in": "query",
                        "name": "renderingEngine",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "description",
                        "in": "query",
                        "name": "description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Report Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "upload",
                "tags": [
                    "report-definition-controller"
                ]
            }
        },
        "/reportDefinitions/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteReportDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "report-definition-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readReportDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Report Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "report-definition-controller"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "replaceTemplateFileReportDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Report Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Replace report template file",
                "tags": [
                    "report-definition-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateReportDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Report Definition"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Report Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "report-definition-controller"
                ]
            }
        },
        "/reportLibraries": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteReportLibrary",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "report-library-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listReportLibrary",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Report Library»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "report-library-controller"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "uploadReportLibrary",
                "parameters": [
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "description",
                        "in": "query",
                        "name": "description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Report Library»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "upload",
                "tags": [
                    "report-library-controller"
                ]
            }
        },
        "/reportLibraries/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteReportLibrary",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "report-library-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readReportLibrary",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Report Library»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "report-library-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateReportLibrary",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Report Library"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Report Library»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "report-library-controller"
                ]
            }
        },
        "/reports": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listSavedReport",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search-spec of full text search query (see fulltextsearch parameter)",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
                        "in": "query",
                        "name": "fulltextsearch",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Saved Report»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "saved-report-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createSavedReport",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Saved Report"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Saved Report»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "saved-report-controller"
                ]
            }
        },
        "/reports/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteSavedReport",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "saved-report-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readSavedReport",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to embed",
                        "in": "query",
                        "name": "embed",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Saved Report»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "saved-report-controller"
                ]
            }
        },
        "/roles": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteRole",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "role-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listRole",
                "parameters": [
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Role»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "role-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createRole",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Role»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "role-controller"
                ]
            }
        },
        "/roles/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "role-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readRole",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Role»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "role-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateRole",
                "parameters": [
                    {
                        "description": "id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Role»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "role-controller"
                ]
            }
        },
        "/roles/{parentId}/permissions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listPermissionOfRole",
                "parameters": [
                    {
                        "description": "parentId",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Permission»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "permission-of-role-controller"
                ]
            }
        },
        "/scans/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readScan",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Scan»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "scan-controller"
                ]
            }
        },
        "/seedBundles": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "uploadSeedBundle",
                "parameters": [
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "upload",
                "tags": [
                    "seed-bundle-controller"
                ]
            }
        },
        "/systemConfiguration": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listSystemConfiguration",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«System Configuration»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "system-configuration-controller"
                ]
            }
        },
        "/systemConfiguration/{name}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readSystemConfiguration",
                "parameters": [
                    {
                        "description": "name",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«System Configuration»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "system-configuration-controller"
                ]
            }
        },
        "/tokenDefinitions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listTokenDefinition",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Token Definition»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    },
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "token-definition-controller"
                ]
            }
        },
        "/tokens": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteAuthToken",
                "parameters": [
                    {
                        "default": false,
                        "description": "Specify value 'true' to revoke all authentication tokens of currently logged-in user.",
                        "in": "query",
                        "name": "all",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    }
                ],
                "summary": "Revoke authentication tokens using ONE of two choices: (1) all tokens owned by the requesting user, OR (2) list of token ids.",
                "tags": [
                    "auth-token-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listAuthToken",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Authentication Token»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "auth-token-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createAuthToken",
                "parameters": [
                    {
                        "description": "authToken",
                        "in": "body",
                        "name": "authToken",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Authentication Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Authentication Token»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "auth-token-controller"
                ]
            }
        },
        "/tokens/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteAuthToken",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "auth-token-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateAuthToken",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Authentication Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Authentication Token»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "auth-token-controller"
                ]
            }
        },
        "/tokens/action/exchangeAuthCode": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "exchangeAuthCodeAuthToken",
                "parameters": [
                    {
                        "description": "authCodeExchangeRequest",
                        "in": "body",
                        "name": "authCodeExchangeRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Authentication Code Exchange Request"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Authentication Token»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    }
                ],
                "summary": "Exchange authentication code and code verifier for a token (no authentication is required)",
                "tags": [
                    "auth-token-controller"
                ]
            }
        },
        "/tokens/action/generateAuthCode": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "generateAuthCodeAuthToken",
                "parameters": [
                    {
                        "description": "authCodeGenerateRequest",
                        "in": "body",
                        "name": "authCodeGenerateRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Authentication Code Generate Request"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Authentication Code Response»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    }
                ],
                "summary": "Request authentication code for token specification and current user",
                "tags": [
                    "auth-token-controller"
                ]
            }
        },
        "/tokens/action/revoke": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "revokeAuthToken",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthTokenRevokeRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "Basic": [
                        ]
                    }
                ],
                "summary": "Revoke authentication tokens by value",
                "tags": [
                    "auth-token-controller"
                ]
            }
        },
        "/updateRulepacks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "doRulepackUpdate",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«RulepacksBatchProcessStatus»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "DoImport",
                "tags": [
                    "rulepack-update-controller"
                ]
            }
        },
        "/userIssueSearchOptions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getUserIssueSearchOptions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«UserIssueSearchOptions»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "get",
                "tags": [
                    "user-issue-search-options-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateUserIssueSearchOptions",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIssueSearchOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«UserIssueSearchOptions»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "user-issue-search-options-controller"
                ]
            }
        },
        "/userSession/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "postUserSessionInfo",
                "parameters": [
                    {
                        "description": "username",
                        "in": "body",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«User session information»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Retrieve the current user's session info. (The 'username' parameter is not yet supported)",
                "tags": [
                    "user-session-info-controller"
                ]
            }
        },
        "/userSession/prefs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "postUserPreferences",
                "parameters": [
                    {
                        "description": "username",
                        "in": "body",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«User preferences»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Retrieve the current user's session preferences. (The 'username' parameter is not yet supported)",
                "tags": [
                    "user-preferences-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateUserPreferences",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User preferences"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«User preferences»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "user-preferences-controller"
                ]
            }
        },
        "/userSession/state": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listUserSessionState",
                "parameters": [
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«UserSessionState»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "user-session-state-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "putUserSessionState",
                "parameters": [
                    {
                        "description": "resources",
                        "in": "body",
                        "name": "resources",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/UserSessionState"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«UserSessionState»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "put",
                "tags": [
                    "user-session-state-controller"
                ]
            }
        },
        "/validateEquation": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "doValidateEquation",
                "parameters": [
                    {
                        "description": "request",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Validation Request"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Validation Status»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "DoValidation",
                "tags": [
                    "validate-equation-controller"
                ]
            }
        },
        "/validateSearchString": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "doValidateSearchString",
                "parameters": [
                    {
                        "description": "request",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Validation Request"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Validation Status»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "DoValidation",
                "tags": [
                    "validate-search-string-controller"
                ]
            }
        },
        "/variables": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteVariable",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "variable-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listVariable",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«Variable»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "variable-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createVariable",
                "parameters": [
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Variable»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "variable-controller"
                ]
            }
        },
        "/variables/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteVariable",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "variable-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateVariable",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Variable»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "variable-controller"
                ]
            }
        },
        "/webhooks": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "multiDeleteWebHookDefinition",
                "parameters": [
                    {
                        "description": "A comma-separated list of resource identifiers",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "multiDelete",
                "tags": [
                    "web-hook-definition-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listWebHookDefinition",
                "parameters": [
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "A search query",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Fields to order by",
                        "in": "query",
                        "name": "orderby",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«WebHook Definition»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "web-hook-definition-controller"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createWebHookDefinition",
                "parameters": [
                    {
                        "description": "webHookDefinition",
                        "in": "body",
                        "name": "webHookDefinition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebHook Definition"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«WebHook Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "create",
                "tags": [
                    "web-hook-definition-controller"
                ]
            }
        },
        "/webhooks/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteWebHookDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«Void»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "delete",
                "tags": [
                    "web-hook-definition-controller"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readWebHookDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Output fields",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«WebHook Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "web-hook-definition-controller"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateWebHookDefinition",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebHook Definition"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«WebHook Definition»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "update",
                "tags": [
                    "web-hook-definition-controller"
                ]
            }
        },
        "/webhooks/{parentId}/history": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "listWebHookHistoryOfWebHook",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "A start offset in object listing",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 200,
                        "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
                        "format": "int32",
                        "in": "query",
                        "minimum": -1,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«List«WebHook History Item»»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "list",
                "tags": [
                    "web-hook-history-of-web-hook-controller"
                ]
            }
        },
        "/webhooks/{parentId}/history/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "readWebHookHistoryOfWebHook",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "id",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«WebHook History»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "read",
                "tags": [
                    "web-hook-history-of-web-hook-controller"
                ]
            }
        },
        "/webhooks/{parentId}/history/action/resend": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "resendWebHookHistoryOfWebHook",
                "parameters": [
                    {
                        "description": "parentId",
                        "format": "int64",
                        "in": "path",
                        "name": "parentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "resource",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebHookResendRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResult«WebHook History Item»"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    }
                },
                "security": [
                    {
                        "FortifyToken": [
                        ]
                    }
                ],
                "summary": "Resend a history item using current webhook's configuration.",
                "tags": [
                    "web-hook-history-of-web-hook-controller"
                ]
            }
        }
    },
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "Basic": {
            "type": "basic"
        },
        "FortifyToken": {
            "in": "header",
            "name": "Authorization",
            "type": "apiKey",
            "x-fortify-api-key-prefix": "FortifyToken"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Retrieve the available engine types",
            "name": "engine-type-controller"
        },
        {
            "description": "Manage application version attributes",
            "name": "attribute-of-project-version-controller"
        },
        {
            "description": "Retrieve the permissions that this permission depends on",
            "name": "permission-required-by-permission-controller"
        },
        {
            "description": "Support the iterative sequence to interactively collect the information required to create a new bug in the bug tracking system associated with this project version. Such information includes various parameters required by the bug tracking system, whether the bug tracker plugin needs to perform authentication, and so on.",
            "name": "bug-filing-requirements-of-project-version-controller"
        },
        {
            "description": "Manage variable definitions",
            "name": "variable-controller"
        },
        {
            "description": "Retrieve the ScanCentral SAST jobs associated to the worker",
            "name": "cloud-job-of-cloud-worker-controller"
        },
        {
            "description": "Retrieve the dynamic scan request template associated with the application version",
            "name": "dynamic-scan-request-template-of-project-version-controller"
        },
        {
            "description": "Retrieve the activity feed entries",
            "name": "activity-feed-controller"
        },
        {
            "description": "Manage current user UI state",
            "name": "user-session-state-controller"
        },
        {
            "description": "Bulk request controller",
            "name": "bulk-controller"
        },
        {
            "description": "Retrieve the dynamic scan requests summary of the application version",
            "name": "dynamic-scan-requests-summary-of-project-version-controller"
        },
        {
            "description": "Retrieve the triggered alert events and/or set their status",
            "name": "alert-history-controller"
        },
        {
            "description": "Manage application versions associated with the ScanCentral SAST pool",
            "name": "project-version-of-cloud-pool-controller"
        },
        {
            "description": "Retrieve warnings about what happens when a user changes job priority",
            "name": "job-priority-change-category-warning-of-job-controller"
        },
        {
            "description": "Manage SSC application configuration",
            "name": "configuration-controller"
        },
        {
            "description": "Manage attachments associated to the issue",
            "name": "issue-attachment-of-issue-controller"
        },
        {
            "description": "Manage attribute definitions",
            "name": "attribute-definition-controller"
        },
        {
            "description": "Retrieve information about a scan",
            "name": "scan-controller"
        },
        {
            "description": "Retrieve the LDAP groups for the specified LDAP authentication entity",
            "name": "group-of-auth-entity-controller"
        },
        {
            "description": "Retrieve license information",
            "name": "license-controller"
        },
        {
            "description": "Manage application version artifacts",
            "name": "artifact-controller"
        },
        {
            "description": "Retrieve the issue aging metrics calculated for the system.",
            "name": "issue-aging-controller"
        },
        {
            "description": "View triggered requests to webhook. Use read to retrieve triggered items with full details.",
            "name": "web-hook-history-of-web-hook-controller"
        },
        {
            "description": "Manage local groups",
            "name": "local-group-controller"
        },
        {
            "description": "Retrieve and upload FPR artifacts associated with this application version",
            "name": "artifact-of-project-version-controller"
        },
        {
            "description": "Retrieve the roles for the authentication entity",
            "name": "role-of-auth-entity-controller"
        },
        {
            "description": "Validate search string",
            "name": "validate-search-string-controller"
        },
        {
            "description": "Retrieve the features that this instance of SSC supports",
            "name": "feature-controller"
        },
        {
            "description": "Internal use only - Retrieve the dependency scan issues of the application version.  This endpoint is still in development.",
            "name": "dependency-scan-issues-of-project-version-controller"
        },
        {
            "description": "Manage responsibilities associated with the application version",
            "name": "responsibility-assignment-of-project-version-controller"
        },
        {
            "description": "Retrieve the ScanCentral SAST workers that are not assigned to any ScanCentral SAST pool",
            "name": "unassigned-cloud-worker-of-cloud-pool-controller"
        },
        {
            "description": "Retrieve the scans associated with the artifact",
            "name": "scan-of-artifact-controller"
        },
        {
            "description": "Manage alert definitions",
            "name": "alert-definition-controller"
        },
        {
            "description": "Retrieve the metadata and contents of a source file associated with this application version",
            "name": "source-file-of-project-version-controller"
        },
        {
            "description": "Manage LDAP-based authentication entities",
            "name": "ldap-object-controller"
        },
        {
            "description": "Retrieve the audit history events for the specific issue",
            "name": "audit-history-of-issue-controller"
        },
        {
            "description": "Retrieve dashboard versions designed to be used in the UI dashboard",
            "name": "dashboard-version-controller"
        },
        {
            "description": "Retrieve the issue groups in the application version",
            "name": "issue-group-of-project-version-controller"
        },
        {
            "description": "Retrieve the Audit Assistant training status of the application version",
            "name": "aa-training-status-of-project-version-controller"
        },
        {
            "description": "Manage user roles",
            "name": "role-controller"
        },
        {
            "description": "Retrieve the event types for which alerts can be created",
            "name": "alertable-event-type-controller"
        },
        {
            "description": "Manage artifact processing rules for the application version",
            "name": "result-processing-rule-of-project-version-controller"
        },
        {
            "description": "Manage bugfield template groups",
            "name": "bugfield-template-group-controller"
        },
        {
            "description": "Retrieve issue aging portlet data",
            "name": "issue-aging-portlet-controller"
        },
        {
            "description": "Manage user session preferences.",
            "name": "user-preferences-controller"
        },
        {
            "description": "Manage container of application versions. (Application versions and their related resources, such as artifacts, can be accessed via a linked resource).",
            "name": "project-controller"
        },
        {
            "description": "Retrieve the count of issues assigned to users in the application version",
            "name": "issue-assignment-of-project-version-controller"
        },
        {
            "description": "Retrieve issue view templates",
            "name": "issue-view-template-controller"
        },
        {
            "description": "Retrieve ScanCentral SAST system settings",
            "name": "cloud-system-settings-controller"
        },
        {
            "description": "Manage ScanCentral SAST jobs",
            "name": "cloud-job-controller"
        },
        {
            "description": "Manage performance indicator definitions",
            "name": "performance-indicator-controller"
        },
        {
            "description": "Retrieve performance indicators values for the application version",
            "name": "performance-indicator-history-of-project-version-controller"
        },
        {
            "description": "Retrieve the set of all possible issue grouping and filtering options for the application version",
            "name": "issue-selector-set-of-project-version-controller"
        },
        {
            "description": "Manage default issues search options for the currently logged-in user to be used by SSC if no issue view options are set for a project version",
            "name": "user-issue-search-options-controller"
        },
        {
            "description": "Retrieve the authentication entities associated with this application version",
            "name": "auth-entity-of-project-version-controller"
        },
        {
            "description": "Retrieve the ScanCentral SAST jobs associated with the pool",
            "name": "cloud-job-of-cloud-pool-controller"
        },
        {
            "description": "Manage ScanCentral SAST pools",
            "name": "cloud-pool-controller"
        },
        {
            "description": "Manage audit comments associated with the issue",
            "name": "issue-audit-comment-of-issue-controller"
        },
        {
            "description": "Retrieve the folders defined for the application version",
            "name": "folder-of-project-version-controller"
        },
        {
            "description": "Retrieve information on one or more issues",
            "name": "issue-controller"
        },
        {
            "description": "Seed bundles management",
            "name": "seed-bundle-controller"
        },
        {
            "description": "Manage association of application versions to application",
            "name": "project-version-of-project-controller"
        },
        {
            "description": "Validate performance indicator equation",
            "name": "validate-equation-controller"
        },
        {
            "description": "Retrieve information on ScanCentral SAST poll status",
            "name": "cloud-system-poll-status-controller"
        },
        {
            "description": "Retrieve SSC system configuration. The visibility of some configuration values depends on the user's role",
            "name": "system-configuration-controller"
        },
        {
            "description": "Retrieve images loaded by plugin",
            "name": "plugin-image-controller"
        },
        {
            "description": "Manage application versions. A variety of associated resources are accessible via links.",
            "name": "project-version-controller"
        },
        {
            "description": "Retrieve the plugin engineTypes of the scans in an application version",
            "name": "plugin-engine-types-of-project-version-controller"
        },
        {
            "description": "Deprecated - Retrieve the OpenSource issues of the application version.  Will be removed in a future release.",
            "name": "open-source-issues-of-project-version-controller"
        },
        {
            "description": "Manage rulepacks",
            "name": "rulepack-core-controller"
        },
        {
            "description": "Retrieve the bug tracker integrations currently available in SSC",
            "name": "bug-tracker-controller"
        },
        {
            "description": "Manage WebHook definitions",
            "name": "web-hook-definition-controller"
        },
        {
            "description": "Retrieve the SSC application event logs",
            "name": "event-log-controller"
        },
        {
            "description": "Manage issues in the application version",
            "name": "issue-of-project-version-controller"
        },
        {
            "description": "Manage local users",
            "name": "local-user-controller"
        },
        {
            "description": "Retrieve permissions associated with a particular role",
            "name": "permission-of-role-controller"
        },
        {
            "description": "Manage authentication tokens",
            "name": "auth-token-controller"
        },
        {
            "description": "Retrieve the issue audit comments that satisfy search criteria",
            "name": "issue-audit-comment-controller"
        },
        {
            "description": "Manage report definitions",
            "name": "report-definition-controller"
        },
        {
            "description": "Manage data exports from SSC",
            "name": "data-export-controller"
        },
        {
            "description": "Manage internal SSC jobs",
            "name": "job-controller"
        },
        {
            "description": "Manage OSGI plugins hosted by SSC plugin framework",
            "name": "plugin-controller"
        },
        {
            "description": "Manage aggregated list of authentication entities (local and LDAP user accounts). LDAP groups can be accessed via a linked resource. This controller does not support creation of new accounts. To create new local or LDAP user accounts, use the corresponding specific controllers.",
            "name": "auth-entity-controller"
        },
        {
            "description": "Retrieve the permissions and permission details for the specific permission GUID",
            "name": "permission-controller"
        },
        {
            "description": "Retrieve localization data provided by plugin",
            "name": "plugin-localization-controller"
        },
        {
            "description": "Manage reports",
            "name": "saved-report-controller"
        },
        {
            "description": "Manage Custom tag definitions",
            "name": "custom-tag-controller"
        },
        {
            "description": "Retrieve performance indicators values history for the application version",
            "name": "issue-summary-of-project-version-controller"
        },
        {
            "description": "Manage basic information about the state of SSC",
            "name": "application-state-controller"
        },
        {
            "description": "Manage custom tags which are assigned to the issue template",
            "name": "custom-tag-of-issue-template-controller"
        },
        {
            "description": "Retrieve mapping of application version to ScanCentral SAST pool",
            "name": "cloud-pool-mapping-controller"
        },
        {
            "description": "Query current user authentication information",
            "name": "auth-controller"
        },
        {
            "description": "Manage issue identifier migrations associated with this application version",
            "name": "iid-migration-of-project-version-controller"
        },
        {
            "description": "Manage issues delta exports from SSC",
            "name": "issues-delta-export-controller"
        },
        {
            "description": "Retrieve the application versions associated with the alert definition",
            "name": "project-version-of-alert-definition-controller"
        },
        {
            "description": "Retrieve all possible values for specific grouping attribute for issue aging table.",
            "name": "issue-aging-group-controller"
        },
        {
            "description": "Retrieve token definitions",
            "name": "token-definition-controller"
        },
        {
            "description": "Manage dynamic scan requests associated with the application version",
            "name": "dynamic-scan-request-of-project-version-controller"
        },
        {
            "description": "Manage custom tags assigned to the application version",
            "name": "custom-tag-of-project-version-controller"
        },
        {
            "description": "Retrieve the count of suppressed, removed and hidden issues in the application version",
            "name": "issue-statistics-of-project-version-controller"
        },
        {
            "description": "Retrieve the Audit Assistant status of the application version",
            "name": "audit-assistant-status-of-project-version-controller"
        },
        {
            "description": "Retrieve detailed information about one or more issues",
            "name": "issue-detail-controller"
        },
        {
            "description": "Retrieve the scan errors of all the scans associated with artifact",
            "name": "scan-error-of-artifact-controller"
        },
        {
            "description": "Retrieve the internal custom tag definitions",
            "name": "internal-custom-tag-controller"
        },
        {
            "description": "Manage a file token for various file upload and download operations",
            "name": "file-token-controller"
        },
        {
            "description": "Manage issues search options for a currently logged-in user for the application version",
            "name": "user-issue-search-options-of-project-version-controller"
        },
        {
            "description": "Retrieve the defined folder names as an array",
            "name": "folder-controller"
        },
        {
            "description": "Retrieve images loaded for parser plugin",
            "name": "parser-plugin-image-controller"
        },
        {
            "description": "Manage the association of application versions to the authentication entity (local or LDAP user)",
            "name": "project-version-of-auth-entity-controller"
        },
        {
            "description": "Retrieve system metrics for ScanCentral SAST",
            "name": "cloud-system-metrics-controller"
        },
        {
            "description": "Retrieve issue identifier migration information for the specific migration",
            "name": "iid-migration-controller"
        },
        {
            "description": "Retrieve the values of variables for the application version",
            "name": "variable-history-of-project-version-controller"
        },
        {
            "description": "Retrieve user session information",
            "name": "user-session-info-controller"
        },
        {
            "description": "Manage LDAP servers configuration",
            "name": "ldap-server-controller"
        },
        {
            "description": "Retrieve information on ScanCentral SAST workers",
            "name": "cloud-worker-controller"
        },
        {
            "description": "Manage association of ScanCentral SAST workers with ScanCentral SAST pools",
            "name": "cloud-worker-of-cloud-pool-controller"
        },
        {
            "description": "Manage issue view templates",
            "name": "issue-template-controller"
        },
        {
            "description": "Manage report libraries",
            "name": "report-library-controller"
        },
        {
            "description": "Retrieve the filter sets defined for the application version",
            "name": "filter-set-of-project-version-controller"
        },
        {
            "description": "Manage bug tracker integration for the application version",
            "name": "bug-tracker-of-project-version-controller"
        },
        {
            "description": "Import rulepacks from the rules server and return the status",
            "name": "rulepack-update-controller"
        }
    ]
}